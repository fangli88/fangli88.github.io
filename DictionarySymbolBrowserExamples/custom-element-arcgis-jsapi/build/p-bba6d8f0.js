import"./p-476cf7c4.js";import{m as e,d8 as t,i as s,aJ as i,o as r,cP as n}from"./p-ab028778.js";import{i as o}from"./p-2ef6e039.js";import"./p-ebb65ba7.js";import{D as a,J as l,B as p}from"./p-fd91cc88.js";import"./p-43d5e67f.js";import"./p-babdd7a5.js";import"./p-098cc742.js";import"./p-e07a8dfe.js";import"./p-c6c7c9c2.js";import"./p-f3cc8f75.js";import{s as d}from"./p-a1a69fdc.js";import"./p-311069c2.js";import"./p-02a4b6c8.js";import"./p-abda1e64.js";import"./p-a8e713de.js";import"./p-fb40af74.js";import"./p-4f43bb64.js";import{b as u,f,g as c}from"./p-2b439a2e.js";import{s as m,i as h,u as y}from"./p-1a30c941.js";import"./p-4561de0e.js";import"./p-3db2569b.js";import{h as j}from"./p-7f2db87b.js";import"./p-a6dff060.js";import"./p-920b2088.js";import{y as b,u as g,d as I,c as F,h as T}from"./p-d006920c.js";const R=n,w={xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:n},v={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};function D(e){return r(e)?null!=e.z:!!e.hasZ}function S(e){return r(e)?null!=e.m:!!e.hasM}export default class{constructor(){this._queryEngine=null,this._nextObjectId=null}destroy(){this._queryEngine&&this._queryEngine&&this._queryEngine.destroy(),this._queryEngine=this._requiredFields=this._fieldsIndex=this._createDefaultAttributes=null}async load(s){const i=[],{features:r}=s,n=this._inferLayerProperties(r,s.fields),a=s.fields||[],l=null!=s.hasM?s.hasM:n.hasM,p=null!=s.hasZ?s.hasZ:n.hasZ,c=!s.spatialReference&&!n.spatialReference,b=c?R:s.spatialReference||n.spatialReference,g=c?w:null,I=s.geometryType||n.geometryType;let F=s.objectIdField||n.objectIdField,T=s.timeInfo;if(I&&(c&&i.push({name:"feature-layer:spatial-reference-not-found",message:"Spatial reference not provided or found in features. Defaults to WGS84"}),!I))throw new e("feature-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if(!F)throw new e("feature-layer:missing-property","objectIdField not set and couldn't be found in the provided fields");if(n.objectIdField&&F!==n.objectIdField&&(i.push({name:"feature-layer:duplicated-oid-field",message:`Provided objectIdField "${F}" doesn't match the field name "${n.objectIdField}", found in the provided fields`}),F=n.objectIdField),F&&!n.objectIdField){let e=null;a.some((t=>t.name===F&&(e=t,!0)))?(e.type="esriFieldTypeOID",e.editable=!1,e.nullable=!1):a.unshift({alias:F,name:F,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const t of a){if(null==t.name&&(t.name=t.alias),null==t.alias&&(t.alias=t.name),!t.name)throw new e("feature-layer:invalid-field-name","field name is missing",{field:t});if(t.name===F&&(t.type="esriFieldTypeOID"),-1===o.jsonValues.indexOf(t.type))throw new e("feature-layer:invalid-field-type",`invalid type for field "${t.name}"`,{field:t})}const D={};this._requiredFields=[];for(const e of a)if("esriFieldTypeOID"!==e.type&&"esriFieldTypeGlobalID"!==e.type){e.editable=null==e.editable||!!e.editable,e.nullable=null==e.nullable||!!e.nullable;const s=t(e);e.nullable||void 0!==s?D[e.name]=s:this._requiredFields.push(e)}if(this._fieldsIndex=new d(a),this._createDefaultAttributes=m(D,F),T){if(T.startTimeField){const e=this._fieldsIndex.get(T.startTimeField);e?(T.startTimeField=e.name,e.type="esriFieldTypeDate"):T.startTimeField=null}if(T.endTimeField){const e=this._fieldsIndex.get(T.endTimeField);e?(T.endTimeField=e.name,e.type="esriFieldTypeDate"):T.endTimeField=null}if(T.trackIdField){const e=this._fieldsIndex.get(T.trackIdField);e?T.trackIdField=e.name:(T.trackIdField=null,i.push({name:"feature-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:T}}))}T.startTimeField||T.endTimeField||(i.push({name:"feature-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing or invalid",details:{timeInfo:T}}),T=null)}const S={warnings:i,featureErrors:[],layerDefinition:{...v,drawingInfo:h(I),templates:y(D),extent:g,geometryType:I,objectIdField:F,fields:a,hasZ:!!p,hasM:!!l,timeInfo:T},assignedObjectIds:{}};if(this._queryEngine=new u({fields:a,geometryType:I,hasM:l,hasZ:p,objectIdField:F,spatialReference:b,featureStore:new j({geometryType:I,hasM:l,hasZ:p}),timeInfo:T}),!r||!r.length)return this._nextObjectId=1,S;const x=r.reduce(((e,t)=>{const s=t.attributes&&t.attributes[F];return null==s||isNaN(s)||!isFinite(s)?e:Math.max(e,s)}),0);return this._nextObjectId=1+x,await f(r,b),this._loadInitialFeatures(S,r)}async applyEdits(e){const{spatialReference:t,geometryType:i}=this._queryEngine;return await s([b(t,i),f(e.adds,t),f(e.updates,t)]),this._applyEdits(e)}async queryFeatures(e,t={}){return this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e,t={}){return this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e,t={}){return this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e,t={}){return this._queryEngine.executeQueryForExtent(e,t.signal)}_inferLayerProperties(e,t){let s,r,n=null,o=null,a=null;for(const t of e){const e=t.geometry;if(e&&(n||(n=i(e)),o||(o=e.spatialReference),null==s&&(s=D(e)),null==r&&(r=S(e)),n&&o&&null!=s&&null!=r))break}if(t&&t.length){let e=null;t.some((t=>{const s="esriFieldTypeOID"===t.type,i=!t.type&&t.name&&"objectid"===t.name.toLowerCase();return e=t,s||i}))&&(a=e.name)}return{geometryType:n,spatialReference:o,objectIdField:a,hasM:r,hasZ:s}}_loadInitialFeatures(e,t){const{geometryType:s,hasM:r,hasZ:n,objectIdField:o,spatialReference:l,featureStore:p}=this._queryEngine,d=[];for(const r of t){if(null!=r.uid&&(e.assignedObjectIds[r.uid]=-1),r.geometry&&s!==i(r.geometry)){e.featureErrors.push(g("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),n=I(this._fieldsIndex,this._requiredFields,t,r.attributes,!0,e.warnings);n?e.featureErrors.push(n):(this._assignObjectId(t,r.attributes,!0),r.attributes=t,null!=r.uid&&(e.assignedObjectIds[r.uid]=r.attributes[o]),r.geometry&&(r.geometry=c(r.geometry,r.geometry.spatialReference,l)),d.push(r))}if(p.addMany(a([],d,s,n,r,o)),e.layerDefinition.extent=this._queryEngine.fullExtent,e.layerDefinition.timeInfo){const{start:t,end:s}=this._queryEngine.timeExtent;e.layerDefinition.timeInfo.timeExtent=[t,s]}return e}_applyEdits(e){const{adds:t,updates:s,deletes:i}=e,r={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(r,t),s&&s.length&&this._applyUpdateEdits(r,s),i&&i.length){for(const e of i)r.deleteResults.push(F(e));this._queryEngine.featureStore.removeManyById(i)}return{fullExtent:this._queryEngine.fullExtent,featureEditResults:r}}_applyAddEdits(e,t){const{addResults:s}=e,{geometryType:r,hasM:n,hasZ:o,objectIdField:l,spatialReference:p,featureStore:d}=this._queryEngine,u=[];for(const n of t){if(n.geometry&&r!==i(n.geometry)){s.push(g("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),o=I(this._fieldsIndex,this._requiredFields,t,n.attributes);o?s.push(o):(this._assignObjectId(t,n.attributes),n.attributes=t,null!=n.uid&&(e.uidToObjectId[n.uid]=n.attributes[l]),n.geometry&&(n.geometry=c(T(n.geometry,p),n.geometry.spatialReference,p)),u.push(n),s.push(F(n.attributes[l])))}d.addMany(a([],u,r,o,n,l))}_applyUpdateEdits({updateResults:e},t){const{geometryType:s,hasM:r,hasZ:n,objectIdField:o,spatialReference:a,featureStore:d}=this._queryEngine;for(const u of t){const{attributes:t,geometry:f}=u,m=t&&t[o];if(null==m){e.push(g(`Identifier field ${o} missing`));continue}if(!d.has(m)){e.push(g(`Feature with object id ${m} missing`));continue}const h=l(d.getFeature(m),s,n,r);if(f){if(s!==i(f)){e.push(g("Incorrect geometry type."));continue}h.geometry=c(T(f,a),f.spatialReference,a)}if(t){const s=I(this._fieldsIndex,this._requiredFields,h.attributes,t);if(s){e.push(s);continue}}d.add(p(h,s,n,r,o)),e.push(F(m))}}_assignObjectId(e,t,s=!1){const i=this._queryEngine.objectIdField;e[i]=s&&t&&isFinite(t[i])?t[i]:this._nextObjectId++}}