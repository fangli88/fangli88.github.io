import"./p-476cf7c4.js";import{D as e,E as t,K as s,L as i,l as r,bI as o,b as n,i as a,U as l,t as p,m as d,bc as u,Z as c,ad as h,F as y,bL as f,aS as m}from"./p-ab028778.js";import{T as g}from"./p-02418161.js";import"./p-2ef6e039.js";import"./p-7575e94f.js";import"./p-73b795c3.js";import{i as v}from"./p-e07a8dfe.js";import"./p-b92ca348.js";import"./p-3cd8f347.js";import"./p-f16fbea1.js";import{l as b,b as j}from"./p-1ff061ae.js";import"./p-2ceb0941.js";import"./p-8fc84c2d.js";import{l as w,d as I,a as S,c as F,y as L,b as O,s as T}from"./p-1cce98ff.js";import"./p-e7501203.js";import{p as D}from"./p-00f58755.js";import{d as P}from"./p-c5691699.js";import"./p-f3cc8f75.js";import{R as E}from"./p-e2c62b7c.js";import"./p-dc697c54.js";import{s as x}from"./p-a1a69fdc.js";import"./p-754df0ae.js";import"./p-89accc4e.js";import{b as A}from"./p-4a36891c.js";import"./p-11ca1b07.js";import"./p-8509ef38.js";import"./p-15538a25.js";import"./p-48626aa9.js";import"./p-a747e129.js";import"./p-f53b64f4.js";import{s as R}from"./p-b9c578c1.js";import"./p-dd888632.js";import{p as q,a as N,r as U}from"./p-8ff7604b.js";import"./p-c3d3c04d.js";import{g as _}from"./p-2500de92.js";import"./p-311069c2.js";import"./p-6501f469.js";import{l as k}from"./p-bfb72207.js";import{t as C}from"./p-17b09f4f.js";import{a as G}from"./p-0913eaf8.js";import"./p-4b9da55e.js";import"./p-e7282072.js";import{c as V,s as M}from"./p-4cf975c0.js";import{s as Q,a as $,u as K,m as W}from"./p-504c6e88.js";let Z=class extends i{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};e([t({type:String,json:{read:!0,write:!0}})],Z.prototype,"name",void 0),e([t({type:String,json:{read:!0,write:!0}})],Z.prototype,"field",void 0),e([t({type:[Number],json:{read:!0,write:!0}})],Z.prototype,"currentRangeExtent",void 0),e([t({type:[Number],json:{read:!0,write:!0}})],Z.prototype,"fullRangeExtent",void 0),e([t({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],Z.prototype,"type",void 0),Z=e([s("esri.layers.support.RangeInfo")],Z);var z=Z;const B=["3DObject","Point"],H=r.getLogger("esri.layers.SceneLayer"),J=k();let X=class extends(g(D(w(P(R(b(j))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.definitionExpression=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.cachedDrawingInfo={color:!1},this.editingEnabled=!0,this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e){const t=this.getField(e);return t&&t.domain?t.domain:null}get fieldsIndex(){return new x(this.fields)}readNodePages(e,t,s){return"Point"===t.layerType&&(e=t.pointNodePages),null==e||"object"!=typeof e?null:Q.fromJSON(e,s)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get geometryType(){return ee[this.profile]||"mesh"}set renderer(e){o(e,this.fields),this._set("renderer",e)}readCachedDrawingInfo(e){return null!=e&&"object"==typeof e||(e={}),null==e.color&&(e.color=!1),e}get capabilities(){const e=n(this.associatedLayer)&&this.associatedLayer.capabilities?this.associatedLayer.capabilities:M,{query:t,editing:{supportsGlobalId:s,supportsRollbackOnFailure:i,supportsUploadWithItemId:r},data:{supportsZ:o,supportsM:a,isVersioned:l},operations:{supportsEditing:p,supportsUpdate:d}}=e,u=e.operations.supportsChangeTracking;return{query:t,editing:{supportsGlobalId:s,supportsRollbackOnFailure:i,supportsGeometryUpdate:!1,supportsUploadWithItemId:r},data:{supportsZ:o,supportsM:a,isVersioned:l},operations:{supportsEditing:p&&u,supportsAdd:!1,supportsDelete:!1,supportsUpdate:d&&u}}}get defaultPopupTemplate(){return n(this.associatedLayer)||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeOID"===t.type&&(e=t.name),!!e))),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeGlobalID"===t.type&&(e=t.name),!!e))),e||void 0}get displayField(){return n(this.associatedLayer)?this.associatedLayer.displayField:null}readProfile(e,t){const s=t.store.profile;return null!=s&&Y[s]?Y[s]:(H.error("Unknown or missing profile",{profile:s,layer:this}),"mesh-pyramids")}load(e){const t=n(e)?e.signal:null,s=this.loadFromPortal({supportedTypes:["Scene Service"]},e).then((()=>this._fetchService(t)),(()=>this._fetchService(t))).then((()=>a([this._verifyRootNodeAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t)]))).then((()=>this._validateElevationInfo())).then((()=>this._applyAssociatedLayerOverrides())).then((()=>this._populateFieldUsageInfo())).then((()=>C(this,{origin:"service"},t))).then((()=>o(this.renderer,this.fields)));return this.addResolvingPromise(s),l(this)}createQuery(){const e=new E;return"mesh"!==this.geometryType&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then((s=>s.queryExtent(e||this.createQuery(),t)))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then((s=>s.queryFeatureCount(e||this.createQuery(),t)))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then((s=>s.queryFeatures(e||this.createQuery(),t))).then((e=>{if(e&&e.features)for(const t of e.features)t.layer=this,t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then((s=>s.queryObjectIds(e||this.createQuery(),t)))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(H.error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return G(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return n(e)&&e.loaded?l(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),p(this.associatedLayer))throw new d("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new d("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return null!=this.statisticsInfo&&this.statisticsInfo.some((t=>t.name===e))}async queryCachedStatistics(e,t){if(await this.load(t),!this.statisticsInfo)throw new d("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const s=this.fieldsIndex.get(e);if(!s)throw new d("scenelayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const e of this.statisticsInfo)if(e.name===s.name){const s=u(this.parsedUrl.path,e.href);return c(s,{query:{f:"json"},responseType:"json",signal:t?t.signal:null}).then((e=>e.data))}throw new d("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations(1,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){return this._debouncedSaveOperations(0,{getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"})}async applyEdits(e,t){const s=await import("./p-da8977f8.js");if(await this.load(),p(this.associatedLayer))throw new d(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),s.applyEdits(this,this.associatedLayer.source,e,t)}on(e,t){return super.on(e,t)}validateLayer(e){if(e.layerType&&-1===B.indexOf(e.layerType))throw new d("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new d("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new d("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});!function(e,t){let s=!1,i=!1;if(null==e)s=!0,i=!0;else{const r=t&&t.isGeographic;switch(e){case"east-north-up":case"earth-centered":s=!0,i=r;break;case"vertex-reference-frame":s=!0,i=!r;break;default:s=!1}}if(!s)throw new d("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!i)throw new d("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if("points"===this.profile)e.push("Point");else{if("mesh-pyramids"!==this.profile)throw new d("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some((t=>t.name===e.name))),s=!!(n(this.associatedLayer)&&this.associatedLayer.fields&&this.associatedLayer.fields.some((t=>t&&e.name===t.name)));this._fieldUsageInfo[e.name]={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||s,supportsLayerQuery:s}}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides()}_applyAssociatedLayerFieldsOverrides(){if(p(this.associatedLayer)||!this.associatedLayer.fields)return;let e=null;for(const t of this.associatedLayer.fields){const s=this.getField(t.name);s?(!s.domain&&t.domain&&(s.domain=t.domain.clone()),s.editable=t.editable,s.nullable=t.nullable):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if(p(this.associatedLayer))return;const e=["popupTemplate","popupEnabled"],t=m(this);for(let s=0;s<e.length;s++){const i=e[s];this._buddyIsMoreImportant(i)&&(t.setDefaultOrigin(this.associatedLayer.originOf(i)),t.set(i,this.associatedLayer[i]),t.setDefaultOrigin("user"))}}async _setAssociatedFeatureLayer(e){if(-1===["mesh-pyramids","points"].indexOf(this.profile))return;const t=new V(this.parsedUrl,this.portalItem,e);try{this.associatedLayer=await t.fetch()}catch(e){h(e)||this._logWarningOnPopupEnabled()}}_logWarningOnPopupEnabled(){v(this,["popupTemplate","popupEnabled"],(()=>this.popupEnabled&&null!=this.popupTemplate)).then((()=>()=>{const e=`this SceneLayer: ${this.title}`;null==this.attributeStorageInfo?H.warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):H.info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}))}_buddyIsMoreImportant(e){if(p(this.associatedLayer))return!1;const t=this.originIdOf(e),s=this.associatedLayer.originIdOf(e);return null!=s&&s<=2?null==t||t<2:null!=s&&s<=3&&(null==t||t<3)}_validateElevationInfo(){const e=this.elevationInfo;e&&("mesh-pyramids"===this.profile&&"absolute-height"!==e.mode&&H.warn(".elevationInfo=","Mesh scene layers only support absolute-height elevation mode"),e.featureExpressionInfo&&"0"!==e.featureExpressionInfo.expression&&H.warn(".elevationInfo=","Scene layers do not support featureExpressionInfo"))}};e([t({types:{key:"type",base:q,typeMap:{selection:N}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],X.prototype,"featureReduction",void 0),e([t({type:[z],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],X.prototype,"rangeInfos",void 0),e([t({json:{read:!1}})],X.prototype,"associatedLayer",void 0),e([t({type:["show","hide"]})],X.prototype,"listMode",void 0),e([t({type:["ArcGISSceneServiceLayer"]})],X.prototype,"operationalLayerType",void 0),e([t({json:{read:!1},readOnly:!0})],X.prototype,"type",void 0),e([t({...J.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],X.prototype,"fields",void 0),e([t({readOnly:!0,dependsOn:["fields"]})],X.prototype,"fieldsIndex",null),e([t(J.outFields)],X.prototype,"outFields",void 0),e([t({type:Q,readOnly:!0,json:{read:!1}})],X.prototype,"nodePages",void 0),e([y("service","nodePages",["nodePages","pointNodePages"])],X.prototype,"readNodePages",null),e([t({type:[$],readOnly:!0})],X.prototype,"materialDefinitions",void 0),e([t({type:[K],readOnly:!0})],X.prototype,"textureSetDefinitions",void 0),e([t({type:[W],readOnly:!0})],X.prototype,"geometryDefinitions",void 0),e([t({readOnly:!0})],X.prototype,"serviceUpdateTimeStamp",void 0),e([t({readOnly:!0})],X.prototype,"attributeStorageInfo",void 0),e([t({readOnly:!0})],X.prototype,"statisticsInfo",void 0),e([t({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:!0}})],X.prototype,"definitionExpression",void 0),e([t({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],X.prototype,"path",void 0),e([t(I)],X.prototype,"elevationInfo",null),e([t({type:String,dependsOn:["profile"]})],X.prototype,"geometryType",null),e([t(S)],X.prototype,"labelsVisible",void 0),e([t({type:[_],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:U},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:U},write:!0}})],X.prototype,"labelingInfo",void 0),e([t(F)],X.prototype,"legendEnabled",void 0),e([t(L)],X.prototype,"opacity",void 0),e([t({types:A,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],X.prototype,"renderer",null),e([t({json:{read:!1}})],X.prototype,"cachedDrawingInfo",void 0),e([y("service","cachedDrawingInfo")],X.prototype,"readCachedDrawingInfo",null),e([t({readOnly:!0,json:{read:!1},dependsOn:["associatedLayer.capabilities"]})],X.prototype,"capabilities",null),e([t({type:Boolean,json:{read:!1}})],X.prototype,"editingEnabled",void 0),e([t(O)],X.prototype,"popupEnabled",void 0),e([t({type:f,json:{name:"popupInfo",write:!0}})],X.prototype,"popupTemplate",void 0),e([t({readOnly:!0,json:{read:!1},dependsOn:["fields","title","attributeStorageInfo","associatedLayer"]})],X.prototype,"defaultPopupTemplate",null),e([t({type:String,json:{read:!1}})],X.prototype,"objectIdField",void 0),e([y("service","objectIdField",["objectIdField","fields"])],X.prototype,"readObjectIdField",null),e([t({type:String,json:{read:!1}})],X.prototype,"globalIdField",void 0),e([y("service","globalIdField",["globalIdField","fields"])],X.prototype,"readGlobalIdField",null),e([t({readOnly:!0,type:String,json:{read:!1},dependsOn:["associatedLayer.displayField"]})],X.prototype,"displayField",null),e([t({type:String,json:{read:!1}})],X.prototype,"profile",void 0),e([y("service","profile",["store.profile"])],X.prototype,"readProfile",null),e([t({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],X.prototype,"normalReferenceFrame",void 0),e([t(T)],X.prototype,"screenSizePerspectiveEnabled",void 0),X=e([s("esri.layers.SceneLayer")],X);const Y={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},ee={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"};var te=X;export default te;