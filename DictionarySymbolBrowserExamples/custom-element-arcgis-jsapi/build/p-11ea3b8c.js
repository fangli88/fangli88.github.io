import"./p-476cf7c4.js";import{U as e,D as t,E as r,aS as s,F as o,K as i}from"./p-dc4230e0.js";import"./p-643e1e47.js";import"./p-66f366a9.js";import"./p-365c5902.js";import"./p-76e49c46.js";import"./p-540c739d.js";import"./p-b415e09b.js";import{l as n,b as l}from"./p-05aa0405.js";import"./p-f1856c76.js";import"./p-6e5ff36c.js";import{l as p}from"./p-5e52b0f8.js";import"./p-6a7ee25c.js";import"./p-6d77caaa.js";import{d as a}from"./p-536a38f2.js";import"./p-5f01bb6f.js";import"./p-aedb886e.js";import"./p-0a74e573.js";import"./p-46a6b4f6.js";import"./p-a1a69fdc.js";import"./p-0038f454.js";import"./p-1f2c53c6.js";import"./p-0c52ed76.js";import u from"./p-cbbd4609.js";import"./p-725a886f.js";import"./p-b3fbb570.js";import"./p-4cc1d148.js";import"./p-d69473fe.js";import"./p-3ce6769f.js";import"./p-3a5e7221.js";import"./p-25ae7985.js";import"./p-40809110.js";import"./p-d5b5a48a.js";import"./p-f7d3c7de.js";import"./p-311069c2.js";import"./p-44614414.js";import"./p-ab0e571f.js";import"./p-ae978389.js";import"./p-43e6d0b9.js";import"./p-24476141.js";let m=class extends(p(a(n(l)))){constructor(...e){super(...e),this.type="route"}get barrierLines(){return this._getNamedFeatureLayer("PolylineBarriers")}get barrierPoints(){return this._getNamedFeatureLayer("Barriers")}get barrierPolygons(){return this._getNamedFeatureLayer("PolygonBarriers")}get directionLines(){return this._getNamedFeatureLayer("DirectionLines")}get directionPoints(){return this._getNamedFeatureLayer("DirectionPoints")}readFeatureCollectionsFromItem(e,t,r){return this.revert("featureCollections","portal-item"),t.layers.map((e=>{const t=new u;return t.read(e,r),t}))}readFeatureCollectionsFromWebMap(e,t,r){return t.featureCollection.layers.map((e=>{const t=new u;return t.read(e,r),t}))}get fullExtent(){return this.featureCollections?this.featureCollections.reduce(((e,t)=>e?e.union(t.fullExtent):t.fullExtent),null):null}get maxScale(){return this.featureCollections?this.featureCollections.reduce(((e,t)=>null==e?t.maxScale:Math.min(e,t.maxScale)),null):0}set maxScale(e){this.featureCollections.forEach((t=>{t.maxScale=e})),this._set("maxScale",e)}get minScale(){return this.featureCollections?this.featureCollections.reduce(((e,t)=>null==e?t.minScale:Math.min(e,t.minScale)),null):0}set minScale(e){this.featureCollections.forEach((t=>{t.minScale=e})),this._set("minScale",e)}get routeInfo(){return this._getNamedFeatureLayer("RouteInfo")}get stops(){return this._getNamedFeatureLayer("Stops")}load(t){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},t)),e(this)}_getNamedFeatureLayer(e){if(this.featureCollections)return this.featureCollections.find((t=>t.title===e))}};t([r({dependsOn:["featureCollections"]})],m.prototype,"barrierLines",null),t([r({dependsOn:["featureCollections"]})],m.prototype,"barrierPoints",null),t([r({dependsOn:["featureCollections"]})],m.prototype,"barrierPolygons",null),t([r({dependsOn:["featureCollections"]})],m.prototype,"directionLines",null),t([r({dependsOn:["featureCollections"]})],m.prototype,"directionPoints",null),t([r({type:s.ofType(u)})],m.prototype,"featureCollections",void 0),t([o("portal-item","featureCollections",["layers"])],m.prototype,"readFeatureCollectionsFromItem",null),t([o("web-map","featureCollections",["featureCollection.layers"])],m.prototype,"readFeatureCollectionsFromWebMap",null),t([r({dependsOn:["featureCollections"],readOnly:!0})],m.prototype,"fullExtent",null),t([r({type:["show","hide"]})],m.prototype,"listMode",void 0),t([r({dependsOn:["featureCollections"]})],m.prototype,"maxScale",null),t([r({dependsOn:["featureCollections"]})],m.prototype,"minScale",null),t([r({dependsOn:["featureCollections"]})],m.prototype,"routeInfo",null),t([r({dependsOn:["featureCollections"]})],m.prototype,"stops",null),t([r({readOnly:!0,json:{read:!1}})],m.prototype,"type",void 0),m=t([i("esri.layers.RouteLayer")],m);var c=m;export default c;