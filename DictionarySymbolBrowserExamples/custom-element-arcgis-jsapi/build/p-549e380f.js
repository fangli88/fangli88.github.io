import"./p-476cf7c4.js";import{D as t,E as e,K as s,aC as a,U as r,k as i,Z as n,z as o,i as u,m as l,bH as c,t as d,bz as h,h as p,S as y,b as m}from"./p-ab028778.js";import"./p-2ef6e039.js";import"./p-7575e94f.js";import"./p-ebb65ba7.js";import"./p-fd91cc88.js";import"./p-c6c7c9c2.js";import"./p-77b9029e.js";import"./p-f16fbea1.js";import{m as f}from"./p-8fc84c2d.js";import"./p-e2c62b7c.js";import{i as b}from"./p-8509ef38.js";import"./p-15538a25.js";import"./p-311069c2.js";import"./p-4b9da55e.js";import"./p-8bb40e65.js";import"./p-50ee3927.js";import"./p-05d2fbdb.js";import{O as w,a as j}from"./p-24610d25.js";import{i as F}from"./p-1a30c941.js";const I=new Set(["Feature Layer","Table"]);let q=class extends a{constructor(){super(...arguments),this.type="feature-layer"}load(t){const e=m(t)?t.signal:null;return this.addResolvingPromise(this._fetchService(e)),r(this)}get queryTask(){const{capabilities:{query:{supportsFormatPBF:t}},parsedUrl:e,dynamicDataSource:s,gdbVersion:a,spatialReference:r,fieldsIndex:n}=this.layer,o=i("featurelayer-pbf")&&t?"pbf":"json";return new w({url:e.path,format:o,fieldsIndex:n,dynamicDataSource:s,gdbVersion:a,sourceSpatialReference:r})}async addAttachment(t,e){await this.load();const s=t.attributes[this.layer.objectIdField],a=this.layer.parsedUrl.path+"/"+s+"/addAttachment",r=this._getLayerRequestOptions(),i=this._getFormDataForAttachment(e,r.query);try{const t=await n(a,{body:i});return this._createFeatureEditResult(t.data.addAttachmentResult)}catch(t){throw this._createAttachmentErrorResult(s,t)}}async updateAttachment(t,e,s){await this.load();const a=t.attributes[this.layer.objectIdField],r=this.layer.parsedUrl.path+"/"+a+"/updateAttachment",i=this._getLayerRequestOptions({query:{attachmentId:e}}),o=this._getFormDataForAttachment(s,i.query);try{const t=await n(r,{body:o});return this._createFeatureEditResult(t.data.updateAttachmentResult)}catch(t){throw this._createAttachmentErrorResult(a,t)}}async applyEdits(t,e){await this.load();const s=t.addFeatures.map(this._serializeFeature,this),a=t.updateFeatures.map(this._serializeFeature,this),r=this._getFeatureIds(t.deleteFeatures);b(s,a,this.layer.spatialReference);const i=[],o=[],u=[...t.deleteAttachments];for(const e of t.addAttachments)i.push(await this._serializeAttachment(e));for(const e of t.updateAttachments)o.push(await this._serializeAttachment(e));const l=i.length||o.length||u.length?{adds:i,updates:o,deletes:u}:null,c=this._getLayerRequestOptions({method:"post",query:{adds:s.length?JSON.stringify(s):null,updates:a.length?JSON.stringify(a):null,deletes:r.length?r.join(","):null,gdbVersion:null==e?void 0:e.gdbVersion,rollbackOnFailure:null==e?void 0:e.rollbackOnFailureEnabled,useGlobalIds:null==e?void 0:e.globalIdUsed,attachments:l&&JSON.stringify(l)}}),d=await n(this.layer.parsedUrl.path+"/applyEdits",c);return this._createEditsResult(d)}async deleteAttachments(t,e){await this.load();const s=t.attributes[this.layer.objectIdField],a=this.layer.parsedUrl.path+"/"+s+"/deleteAttachments";try{return(await n(a,this._getLayerRequestOptions({query:{attachmentIds:e.join(",")},method:"post"}))).data.deleteAttachmentResults.map(this._createFeatureEditResult)}catch(t){throw this._createAttachmentErrorResult(s,t)}}fetchRecomputedExtents(t={}){return this.load({signal:t.signal}).then((async()=>{const e=this._getLayerRequestOptions({...t,query:{returnUpdates:!0}}),{layerId:s,url:a}=this.layer,{data:r}=await n(`${a}/${s}`,e),{id:i,extent:u,fullExtent:l,timeExtent:c}=r,d=u||l;return{id:i,fullExtent:d&&o.fromJSON(d),timeExtent:c&&f.fromJSON({start:c[0],end:c[1]})}}))}async queryAttachments(t,e={}){const{parsedUrl:s}=this.layer,a=s.path;await this.load();const r=this._getLayerRequestOptions(e);if(!this.layer.get("capabilities.operations.supportsQueryAttachments")){const{objectIds:e}=t,s=[];for(const t of e)s.push(n(a+"/"+t+"/attachments",r));return u(s).then((t=>e.map(((e,s)=>({parentObjectId:e,attachmentInfos:t[s].data.attachmentInfos}))))).then((t=>j(t,a)))}return this.queryTask.executeAttachmentQuery(t,r)}async queryFeatures(t,e){return await this.load(),this.queryTask.execute(t,{...e,query:{...this.layer.customParameters,...null==e?void 0:e.query}})}async queryFeaturesJSON(t,e){return await this.load(),this.queryTask.executeJSON(t,{...e,query:{...this.layer.customParameters,...null==e?void 0:e.query}})}async queryObjectIds(t,e){return await this.load(),this.queryTask.executeForIds(t,{...e,query:{...this.layer.customParameters,...null==e?void 0:e.query}})}async queryFeatureCount(t,e){return await this.load(),this.queryTask.executeForCount(t,{...e,query:{...this.layer.customParameters,...null==e?void 0:e.query}})}async queryExtent(t,e){return await this.load(),this.queryTask.executeForExtent(t,{...e,query:{...this.layer.customParameters,...null==e?void 0:e.query}})}async queryRelatedFeatures(t,e){return await this.load(),this.queryTask.executeRelationshipQuery(t,{...e,query:{...this.layer.customParameters,...null==e?void 0:e.query}})}async queryRelatedFeaturesCount(t,e){return await this.load(),this.queryTask.executeRelationshipQueryForCount(t,{...e,query:{...this.layer.customParameters,...null==e?void 0:e.query}})}async _fetchService(t){let e=this.layer.sourceJSON;if(!e){const{data:s}=await n(this.layer.parsedUrl.path,this._getLayerRequestOptions({query:i("featurelayer-advanced-symbols")?{returnAdvancedSymbols:!0}:{},signal:t}));e=s}this.sourceJSON=this._patchServiceJSON(e);const s=e.type;if(!I.has(s))throw new l("feature-layer-source:unsupported-type",`Source type "${s}" is not supported`)}_patchServiceJSON(t){var e;if("Table"!==t.type&&t.geometryType&&(null==t||null==(e=t.drawingInfo)||!e.renderer)&&!t.defaultSymbol){const e=F(t.geometryType).renderer;c("drawingInfo.renderer",e,t)}return t}_serializeFeature(t){const{geometry:e,attributes:s}=t;return d(e)?{attributes:s}:"mesh"===e.type||"extent"===e.type?null:{geometry:e.toJSON(),attributes:s}}async _serializeAttachment(t){const{feature:e,attachment:s}=t,{globalId:a,name:r,contentType:i,data:n,uploadId:o}=s,u={globalId:a,parentGlobalId:null,contentType:null,name:null,uploadId:null,data:null};if(e&&(u.parentGlobalId="attributes"in e?e.attributes&&e.attributes[this.layer.globalIdField]:e.globalId),o)u.uploadId=o;else if(n){const t=await async function(t){return"string"==typeof t?h(t)||{data:t}:p(((e,s)=>{const a=new FileReader;a.readAsDataURL(t),a.onload=()=>e(h(a.result)),a.onerror=t=>s(t)}))}(n);u.contentType=t.mediaType,u.data=t.data,n instanceof File&&(u.name=n.name)}return r&&(u.name=r),i&&(u.contentType=i),u}_getFeatureIds(t){const e=t[0];return e?"objectId"in e?this._getIdsFromFeatureIdentifier(t):this._getIdsFromFeatures(t):[]}_getIdsFromFeatures(t){const e=this.layer.objectIdField;return t.map((t=>t.attributes&&t.attributes[e]))}_getIdsFromFeatureIdentifier(t){return t.map((t=>t.objectId))}_createEditsResult(t){const e=t.data,s=t.data&&t.data.attachments;return{addFeatureResults:e.addResults?e.addResults.map(this._createFeatureEditResult,this):[],updateFeatureResults:e.updateResults?e.updateResults.map(this._createFeatureEditResult,this):[],deleteFeatureResults:e.deleteResults?e.deleteResults.map(this._createFeatureEditResult,this):[],addAttachmentResults:s&&s.addResults?s.addResults.map(this._createFeatureEditResult,this):[],updateAttachmentResults:s&&s.updateResults?s.updateResults.map(this._createFeatureEditResult,this):[],deleteAttachmentResults:s&&s.deleteResults?s.deleteResults.map(this._createFeatureEditResult,this):[]}}_createFeatureEditResult(t){const e=!0===t.success?null:t.error||{code:void 0,description:void 0};return{objectId:t.objectId,globalId:t.globalId,error:e?new l("feature-layer-source:edit-failure",e.description,{code:e.code}):null}}_createAttachmentErrorResult(t,e){return{objectId:t,globalId:null,error:new l("feature-layer-source:attachment-failure",e.details.messages&&e.details.messages[0]||e.message,{code:e.details.httpStatus||e.details.messageCode})}}_getFormDataForAttachment(t,e){const s=t instanceof FormData?t:t&&t.elements?new FormData(t):null;if(s)for(const t in e){const a=e[t];null!=a&&(s.set?s.set(t,a):s.append(t,a))}return s}_getLayerRequestOptions(t={}){const{parsedUrl:e,gdbVersion:s,dynamicDataSource:a}=this.layer;return{...t,query:y({gdbVersion:s,layer:a?JSON.stringify({source:a}):void 0,...e.query,f:"json",...this.layer.customParameters,...null==t?void 0:t.query}),responseType:"json"}}};t([e()],q.prototype,"type",void 0),t([e({constructOnly:!0})],q.prototype,"layer",void 0),t([e({readOnly:!0,dependsOn:["layer.parsedUrl","layer.gdbVersion","layer.dynamicDataSource","layer.fieldsIndex"]})],q.prototype,"queryTask",null),q=t([s("esri.layers.graphics.sources.FeatureLayerSource")],q);var g=q;export default g;