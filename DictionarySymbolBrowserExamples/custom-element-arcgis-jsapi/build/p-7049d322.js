import"./p-476cf7c4.js";import{z as e,y as r,ae as t,D as p,F as i,E as s,K as o}from"./p-ab028778.js";import"./p-2ef6e039.js";import"./p-7575e94f.js";import"./p-73b795c3.js";import"./p-e07a8dfe.js";import"./p-b92ca348.js";import"./p-3cd8f347.js";import"./p-f16fbea1.js";import{l as a,b as n}from"./p-1ff061ae.js";import"./p-2ceb0941.js";import"./p-8fc84c2d.js";import{l}from"./p-1cce98ff.js";import"./p-e7501203.js";import"./p-00f58755.js";import{d as m}from"./p-c5691699.js";import"./p-f3cc8f75.js";import"./p-e2c62b7c.js";import"./p-dc697c54.js";import"./p-a1a69fdc.js";import"./p-754df0ae.js";import"./p-89accc4e.js";import"./p-4a36891c.js";import c from"./p-11ca1b07.js";import"./p-8509ef38.js";import"./p-15538a25.js";import{t as d}from"./p-48626aa9.js";import"./p-a747e129.js";import"./p-f53b64f4.js";import{s as f}from"./p-b9c578c1.js";import"./p-dd888632.js";import"./p-8ff7604b.js";import"./p-c3d3c04d.js";import"./p-2500de92.js";import"./p-311069c2.js";import"./p-6501f469.js";import"./p-bfb72207.js";import"./p-17b09f4f.js";import"./p-0913eaf8.js";import"./p-4b9da55e.js";import{u as j,h as u}from"./p-ff24609a.js";let b=class extends(d(f(l(m(a(n)))))){constructor(e){super(e),this.capabilities={operations:{supportsEditing:!0}},this.legendEnabled=!1,this.lineGraphics=new j,this.opacity=1,this.pointGraphics=new j,this.polygonGraphics=new j,this.textGraphics=new j,this.type="map-notes"}readFullExtent(t,p){if(!p.layers.length)return new e({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:r.WGS84});const i=r.fromJSON(p.layers[0].layerDefinition.spatialReference);return p.layers.reduce(((r,t)=>{const p=t.layerDefinition.extent;return p?e.fromJSON(p).union(r):r}),new e({spatialReference:i}))}readCapabilities(e,r){return{operations:{supportsEditing:!r.layers.some((e=>!!e.layerDefinition.drawingInfo))}}}readFeatureCollections(e,r,p){const i=r.layers.map((e=>{const r=new c;return r.read(e,p),r}));return new t({items:i})}readMinScale(e,r){for(const e of r.layers)if(null!=e.layerDefinition.minScale)return e.layerDefinition.minScale;return 0}readMaxScale(e,r){for(const e of r.layers)if(null!=e.layerDefinition.maxScale)return e.layerDefinition.maxScale;return 0}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}read(e,r){"featureCollection"in e&&super.read(e.featureCollection,r),super.read(e,r)}};p([i(["web-map","portal-item"],"fullExtent",["layers"])],b.prototype,"readFullExtent",null),p([s({readOnly:!0})],b.prototype,"capabilities",void 0),p([i(["portal-item","web-map"],"capabilities",["layers"])],b.prototype,"readCapabilities",null),p([s({readOnly:!0})],b.prototype,"featureCollections",void 0),p([i(["web-map","portal-item"],"featureCollections",["layers"])],b.prototype,"readFeatureCollections",null),p([s({readOnly:!0,json:{origins:{service:{read:{enabled:!1}}},name:"showLegend",write:!0}})],b.prototype,"legendEnabled",void 0),p([s(u("lineGraphics"))],b.prototype,"lineGraphics",void 0),p([s({type:["show","hide"]})],b.prototype,"listMode",void 0),p([i(["web-map","portal-item"],"minScale",["layers"])],b.prototype,"readMinScale",null),p([i(["web-map","portal-item"],"maxScale",["layers"])],b.prototype,"readMaxScale",null),p([s({type:Number,json:{name:"opacity",write:!0}})],b.prototype,"opacity",void 0),p([s(u("pointGraphics"))],b.prototype,"pointGraphics",void 0),p([s(u("polygonGraphics"))],b.prototype,"polygonGraphics",void 0),p([s(u("textGraphics"))],b.prototype,"textGraphics",void 0),p([s({readOnly:!0,json:{read:!1}})],b.prototype,"type",void 0),b=p([o("esri.layers.MapNotesLayer")],b);var h=b;export default h;