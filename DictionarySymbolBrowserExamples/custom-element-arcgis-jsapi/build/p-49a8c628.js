const r=new Float32Array(1);function e(r){return a(Math.max(-n,Math.min(r,n)))}function a(e){return r[0]=e,r[0]}const n=a(34028234663852886e22);var t={};t.defaultNoDataValue=e(-1/0),t.decode=function(r,a){var n=(a=a||{}).encodedMaskData||null===a.encodedMaskData,u=l(r,a.inputOffset||0,n),s=null!=a.noDataValue?e(a.noDataValue):t.defaultNoDataValue,w=i(u,a.pixelType||Float32Array,a.encodedMaskData,s,a.returnMask),h={width:u.width,height:u.height,pixelData:w.resultPixels,minValue:u.pixels.minValue,maxValue:u.pixels.maxValue,noDataValue:s};return w.resultMask&&(h.maskData=w.resultMask),a.returnEncodedMask&&u.mask&&(h.encodedMaskData=u.mask.bitset?u.mask.bitset:null),a.returnFileInfo&&(h.fileInfo=f(u,s),a.computeUsedBitDepths&&(h.fileInfo.bitDepths=o(u))),h};var i=function(r,e,a,n,t){var i,f,o=0,l=r.pixels.numBlocksX,s=r.pixels.numBlocksY,w=Math.floor(r.width/l),h=Math.floor(r.height/s),v=2*r.maxZError;a=a||(r.mask?r.mask.bitset:null),i=new e(r.width*r.height),t&&a&&(f=new Uint8Array(r.width*r.height));for(var c,y,d=new Float32Array(w*h),m=0;m<=s;m++){var M=m!==s?h:r.height%s;if(0!==M)for(var A=0;A<=l;A++){var V=A!==l?w:r.width%l;if(0!==V){var k,x,U,g,p=m*r.width*h+A*w,B=r.width-V,D=r.pixels.blocks[o];if(D.encoding<2?(0===D.encoding?k=D.rawData:(u(D.stuffedData,D.bitsPerPixel,D.numValidPixels,D.offset,v,d,r.pixels.maxValue),k=d),x=0):U=2===D.encoding?0:D.offset,a)for(y=0;y<M;y++){for(7&p&&(g=a[p>>3],g<<=7&p),c=0;c<V;c++)7&p||(g=a[p>>3]),128&g?(f&&(f[p]=1),i[p++]=D.encoding<2?k[x++]:U):(f&&(f[p]=0),i[p++]=n),g<<=1;p+=B}else if(D.encoding<2)for(y=0;y<M;y++){for(c=0;c<V;c++)i[p++]=k[x++];p+=B}else for(y=0;y<M;y++)if(i.fill)i.fill(U,p,p+V),p+=V+B;else{for(c=0;c<V;c++)i[p++]=U;p+=B}if(1===D.encoding&&x!==D.numValidPixels)throw"Block and Mask do not match";o++}}}return{resultPixels:i,resultMask:f}},f=function(r,e){return{fileIdentifierString:r.fileIdentifierString,fileVersion:r.fileVersion,imageType:r.imageType,height:r.height,width:r.width,maxZError:r.maxZError,eofOffset:r.eofOffset,mask:r.mask?{numBlocksX:r.mask.numBlocksX,numBlocksY:r.mask.numBlocksY,numBytes:r.mask.numBytes,maxValue:r.mask.maxValue}:null,pixels:{numBlocksX:r.pixels.numBlocksX,numBlocksY:r.pixels.numBlocksY,numBytes:r.pixels.numBytes,maxValue:r.pixels.maxValue,minValue:r.pixels.minValue,noDataValue:e}}},o=function(r){for(var e=r.pixels.numBlocksX*r.pixels.numBlocksY,a={},n=0;n<e;n++){var t=r.pixels.blocks[n];0===t.encoding?a.float32=!0:1===t.encoding?a[t.bitsPerPixel]=!0:a[0]=!0}return Object.keys(a)},l=function(r,e,a){var n={},t=new Uint8Array(r,e,10);if(n.fileIdentifierString=String.fromCharCode.apply(null,t),"CntZImage"!=n.fileIdentifierString.trim())throw"Unexpected file identifier string: "+n.fileIdentifierString;e+=10;var i=new DataView(r,e,24);if(n.fileVersion=i.getInt32(0,!0),n.imageType=i.getInt32(4,!0),n.height=i.getUint32(8,!0),n.width=i.getUint32(12,!0),n.maxZError=i.getFloat64(16,!0),e+=24,!a)if(i=new DataView(r,e,16),n.mask={},n.mask.numBlocksY=i.getUint32(0,!0),n.mask.numBlocksX=i.getUint32(4,!0),n.mask.numBytes=i.getUint32(8,!0),n.mask.maxValue=i.getFloat32(12,!0),e+=16,n.mask.numBytes>0){var f=new Uint8Array(Math.ceil(n.width*n.height/8)),o=(i=new DataView(r,e,n.mask.numBytes)).getInt16(0,!0),l=2,u=0;do{if(o>0)for(;o--;)f[u++]=i.getUint8(l++);else{var s=i.getUint8(l++);for(o=-o;o--;)f[u++]=s}o=i.getInt16(l,!0),l+=2}while(l<n.mask.numBytes);if(-32768!==o||u<f.length)throw"Unexpected end of mask RLE encoding";n.mask.bitset=f,e+=n.mask.numBytes}else 0==(n.mask.numBytes|n.mask.numBlocksY|n.mask.maxValue)&&(f=new Uint8Array(Math.ceil(n.width*n.height/8)),n.mask.bitset=f);i=new DataView(r,e,16),n.pixels={},n.pixels.numBlocksY=i.getUint32(0,!0),n.pixels.numBlocksX=i.getUint32(4,!0),n.pixels.numBytes=i.getUint32(8,!0),n.pixels.maxValue=i.getFloat32(12,!0),e+=16;var w=n.pixels.numBlocksX,h=n.pixels.numBlocksY,v=w+(n.width%w>0?1:0),c=h+(n.height%h>0?1:0);n.pixels.blocks=new Array(v*c);for(var y=1e9,d=0,m=0;m<c;m++)for(var M=0;M<v;M++){var A=0;i=new DataView(r,e,Math.min(10,r.byteLength-e));var V={};n.pixels.blocks[d++]=V;var k=i.getUint8(0);if(A++,V.encoding=63&k,V.encoding>3)throw"Invalid block encoding ("+V.encoding+")";if(2!==V.encoding){if(0!==k&&2!==k){if(V.offsetType=k>>=6,2===k)V.offset=i.getInt8(1),A++;else if(1===k)V.offset=i.getInt16(1,!0),A+=2;else{if(0!==k)throw"Invalid block offset type";V.offset=i.getFloat32(1,!0),A+=4}if(y=Math.min(V.offset,y),1===V.encoding)if(k=i.getUint8(A),A++,V.bitsPerPixel=63&k,V.numValidPixelsType=k>>=6,2===k)V.numValidPixels=i.getUint8(A),A++;else if(1===k)V.numValidPixels=i.getUint16(A,!0),A+=2;else{if(0!==k)throw"Invalid valid pixel count type";V.numValidPixels=i.getUint32(A,!0),A+=4}}var x;if(e+=A,3!=V.encoding)if(0===V.encoding){var U=(n.pixels.numBytes-1)/4;if(U!==Math.floor(U))throw"uncompressed block has invalid length";x=new ArrayBuffer(4*U),new Uint8Array(x).set(new Uint8Array(r,e,4*U));for(var g=new Float32Array(x),p=0;p<g.length;p++)y=Math.min(y,g[p]);V.rawData=g,e+=4*U}else if(1===V.encoding){var B=Math.ceil(V.numValidPixels*V.bitsPerPixel/8),D=Math.ceil(B/4);x=new ArrayBuffer(4*D),new Uint8Array(x).set(new Uint8Array(r,e,B)),V.stuffedData=new Uint32Array(x),e+=B}}else e++,y=Math.min(y,0)}return n.pixels.minValue=y,n.eofOffset=e,n},u=function(r,e,a,n,t,i,f){var o,l,u,s=(1<<e)-1,w=0,h=0,v=Math.ceil((f-n)/t),c=4*r.length-Math.ceil(e*a/8);for(r[r.length-1]<<=8*c,o=0;o<a;o++){if(0===h&&(u=r[w++],h=32),h>=e)l=u>>>h-e&s,h-=e;else{var y=e-h;l=(u&s)<<y&s,l+=(u=r[w++])>>>(h=32-y)}i[o]=l<v?n+l*t:f}return i};const s=t.decode;export{s as m}