import{D as e,E as t,z as s,F as r,K as n,y as a,aI as o,d as i,w as l,f as u}from"./p-ab028778.js";import p from"./p-f16fbea1.js";let m=class extends p{constructor(e){super(e),this.extent=null,this.features=null,this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(e,t){(e||[]).forEach((e=>{this._decompressFeatureGeometry(e,t.summary.envelope.spatialReference)}));const s=a.fromJSON(t.spatialReference);return e.map((e=>{const t=o.fromJSON(e);return t.geometry&&!(e.geometry&&e.geometry.spatialReference)&&(i(t.geometry).spatialReference=s),t.strings=e.strings,t.events=(e.events||[]).map((t=>{const s=new o({geometry:new l({x:t.point.x,y:t.point.y,z:t.point.z,hasZ:void 0!==t.point.z,spatialReference:e.geometry&&e.geometry.spatialReference}),attributes:{ETA:t.ETA,arriveTimeUTC:t.arriveTimeUTC}});return s.strings=t.strings,s})),t}))}get mergedGeometry(){if(!this.features)return null;const e=this.features.map((({geometry:e})=>i(e))),t=this.get("extent.spatialReference");return this._mergePolylinesToSinglePath(e,t)}get strings(){return this.features.map((({strings:e})=>e))}_decompressFeatureGeometry(e,t){e.geometry=this._decompressGeometry(e.compressedGeometry,t)}_decompressGeometry(e,t){let s=0,r=0,n=0,a=0;const o=[];let i,l,u,p,m,d,h,c,y=0,f=0,g=0;if(m=e.match(/((\+|\-)[^\+\-\|]+|\|)/g),m||(m=[]),0===parseInt(m[y],32)){y=2;const e=parseInt(m[y],32);y++,d=parseInt(m[y],32),y++,1&e&&(f=m.indexOf("|")+1,h=parseInt(m[f],32),f++),2&e&&(g=m.indexOf("|",f)+1,c=parseInt(m[g],32),g++)}else d=parseInt(m[y],32),y++;for(;y<m.length&&"|"!==m[y];){i=parseInt(m[y],32)+s,y++,s=i,l=parseInt(m[y],32)+r,y++,r=l;const e=[i/d,l/d];f&&(p=parseInt(m[f],32)+n,f++,n=p,e.push(p/h)),g&&(u=parseInt(m[g],32)+a,g++,a=u,e.push(u/c)),o.push(e)}return{paths:[o],hasZ:f>0,hasM:g>0,spatialReference:t}}_mergePolylinesToSinglePath(e,t){let s=[];(e||[]).forEach((e=>{e.paths.forEach((e=>{s=s.concat(e)}))}));const r=[];let n=[0,0];return s.forEach((e=>{e[0]===n[0]&&e[1]===n[1]||(r.push(e),n=e)})),new u({paths:[r]},t)}};e([t({type:s,json:{read:{source:"summary.envelope"}}})],m.prototype,"extent",void 0),e([t()],m.prototype,"features",void 0),e([r("features")],m.prototype,"readFeatures",null),e([t()],m.prototype,"geometryType",void 0),e([t({readOnly:!0,dependsOn:["features","extent.spatialReference"]})],m.prototype,"mergedGeometry",null),e([t()],m.prototype,"routeId",void 0),e([t()],m.prototype,"routeName",void 0),e([t({value:null,readOnly:!0,dependsOn:["features"]})],m.prototype,"strings",null),e([t({json:{read:{source:"summary.totalDriveTime"}}})],m.prototype,"totalDriveTime",void 0),e([t({json:{read:{source:"summary.totalLength"}}})],m.prototype,"totalLength",void 0),e([t({json:{read:{source:"summary.totalTime"}}})],m.prototype,"totalTime",void 0),m=e([n("esri.tasks.support.DirectionsFeatureSet")],m);var d=m;export{d as c}