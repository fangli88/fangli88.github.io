import"./p-476cf7c4.js";import{h as t,O as n,P as r,e2 as e,b as o,U as a}from"./p-dc4230e0.js";function i(t){return r(`esri/libs/i3s/${t}`)}let s,c,l;async function f(t){await x();const n=[t.geometryBuffer];return{result:b(t,n),transferList:n}}async function u(t){var n;await x();const r=[t.geometryBuffer],{geometryBuffer:o}=t,a=o.byteLength,i=l._malloc(a),s=new Uint8Array(l.HEAPU8.buffer,i,a);s.set(new Uint8Array(o));const c=l.dracoDecompressPointCloudData(i,s.byteLength);if(l._free(i),c.error.length>0)throw`i3s.wasm: ${c.error}`;const f=(null==(n=c.featureIds)?void 0:n.length)>0?e(c.featureIds):null,u=e(c.positions);return f&&r.push(f.buffer),r.push(u.buffer),{result:{positions:u,featureIds:f},transferList:r}}async function y(t){await x(),F(t);const n={buffer:t.buffer};return{result:n,transferList:[n.buffer]}}async function d(t){await x(),A(t)}async function w(t){await x(),l.setLegacySchema(t.context,t.jsonSchema)}function m(t){g(t)}function A(t){const n=t.modifications,r=l._malloc(8*n.length),e=new Float64Array(l.HEAPU8.buffer,r,n.length);for(let t=0;t<n.length;++t)e[t]=n[t];l.setModifications(t.context,r,n.length,t.isGeodetic),l._free(r)}function b(t,n){if(!l)return null;const{context:r,localOrigin:a,globalTrafo:i,mbs:s,obb:c,elevationOffset:f,geometryBuffer:u,geometryDescriptor:y,indexToVertexProjector:d,vertexToRenderProjector:w}=t,m=l._malloc(u.byteLength),A=l._malloc(33*Float64Array.BYTES_PER_ELEMENT),b=new Uint8Array(l.HEAPU8.buffer,m,u.byteLength);b.set(new Uint8Array(u));const p=new Float64Array(l.HEAPU8.buffer,A,33);v(p,a);let F=p.byteOffset+3*p.BYTES_PER_ELEMENT,g=new Float64Array(p.buffer,F);v(g,i),F+=16*p.BYTES_PER_ELEMENT,g=new Float64Array(p.buffer,F),v(g,s),F+=4*p.BYTES_PER_ELEMENT,o(c)&&(g=new Float64Array(p.buffer,F),v(g,c.center),F+=3*p.BYTES_PER_ELEMENT,g=new Float64Array(p.buffer,F),v(g,c.halfSize),F+=3*p.BYTES_PER_ELEMENT,g=new Float64Array(p.buffer,F),v(g,c.quaternion));const x=y,U={isDraco:!1,isLegacy:!1,color:t.layouts.some((t=>t.some((t=>"color"===t.name)))),normal:t.needNormals&&t.layouts.some((t=>t.some((t=>"normalCompressed"===t.name)))),uv0:t.layouts.some((t=>t.some((t=>"uv0"===t.name)))),uvRegion:t.layouts.some((t=>t.some((t=>"uvRegion"===t.name)))),featureIndex:x.featureIndex},h=l.process(r,!!t.obb,m,b.byteLength,x,U,A,f,d,w,t.normalReferenceFrame);if(l._free(A),l._free(m),h.error.length>0)throw`i3s.wasm: ${h.error}`;if(h.discarded)return null;const D=h.componentOffsets.length>0?e(h.componentOffsets):null,M=h.featureIds.length>0?e(h.featureIds):null,O=e(h.interleavedVertedData).buffer,j=e(1===h.indicesType?new Uint16Array(h.indices.buffer,h.indices.byteOffset,h.indices.byteLength/2):new Uint32Array(h.indices.buffer,h.indices.byteOffset,h.indices.byteLength/4)),L=e(h.positions),R=e(1===h.positionIndicesType?new Uint16Array(h.positionIndices.buffer,h.positionIndices.byteOffset,h.positionIndices.byteLength/2):new Uint32Array(h.positionIndices.buffer,h.positionIndices.byteOffset,h.positionIndices.byteLength/4)),C={layout:t.layouts[0],interleavedVertexData:O,indices:j,hasColors:h.hasColors,hasModifications:h.hasModifications,positionData:{data:L,indices:R}};return M&&n.push(M.buffer),D&&n.push(D.buffer),n.push(O),n.push(j.buffer),n.push(L.buffer),n.push(R.buffer),{componentOffsets:D,featureIds:M,transformedGeometry:C,obb:h.obb}}function p(t){return 0===t?0:1===t?1:2===t?2:3}function F(t){const{context:n,buffer:r}=t,e=l._malloc(r.byteLength),o=r.byteLength/Float64Array.BYTES_PER_ELEMENT,a=new Float64Array(l.HEAPU8.buffer,e,o),i=new Float64Array(r);a.set(i),l.filterOBBs(n,e,o),i.set(a),l._free(e)}function g(t){l&&l.destroy(t)}function v(t,n){for(let r=0;r<n.length;++r)t[r]=n[r]}function x(){return l?a():(c||(c=(s||(s=t((t=>import("./p-ee9c5009.js").then((function(t){return t.i})).then((({default:n})=>{const r=n({locateFile:i,onRuntimeInitialized:()=>t(r)});delete r.then})))).catch((t=>n(t)))),s).then((t=>{l=t,c=null}))),c)}const U={transform:b,destroy:g};export{m as destroyContext,u as dracoDecompressPointCloudData,y as filterObbsForModifications,F as filterObbsForModificationsSync,x as initialize,p as interpretObbModificationResults,f as process,w as setLegacySchema,d as setModifications,A as setModificationsSync,U as test}