import{bU as t}from"./p-ab028778.js";import{R as e}from"./p-f6aca36e.js";class r{static parse(t){if(t.length>1)throw new Error('"id" does not expect arguments');return new r}evaluate(t,e){return t.id}}class n{static parse(t){if(t.length>1)throw new Error('"geometry-type" does not expect arguments');return new n}evaluate(t,e){switch(t.type){case 0:return"Unknown";case 1:return"Point";case 2:return"LineString";case 3:return"Polygon"}}}class s{static parse(t){if(t.length>1)throw new Error('"properties" does not expect arguments');return new s}evaluate(t,e){return t.values}}class i{static parse(t){if(t.length>1)throw new Error('"zoom" does not expect arguments');return new i}evaluate(t,e){return e}}const a=Number.POSITIVE_INFINITY,o=Math.PI,u=2*o,l=128/o,c=o/180,h=1/Math.LN2;function f(t,e){return(t%=e)>=0?t:t+e}function p(t){return f(t*l,256)}function m(t){return Math.log(t)*h}function y(t,e,r){return t*(1-r)+e*r}class d{constructor(t){this.args=t}static parse(t){if(4!==t.length)throw new Error('"rgb" expects 3 arguments.');const e=t.slice(1).map((t=>dt(t)));return new d(e)}evaluate(t,e){const r=this.args[1].evaluate(t,e),n=this.args[2].evaluate(t,e),s=this.args[3].evaluate(t,e);return`rgb(${Math.round(r)},${Math.round(n)},${Math.round(s)})`}}class w{constructor(t){this.color=t}static parse(t){if(2!==t.length)throw new Error('"to-rgba" expects 1 argument.');const e=dt(t[1]);return new w(e)}evaluate(e,r){return new t(this.color.evaluate(e,r)).toRgba()}}class b{constructor(t,e,r){this.lhs=t,this.rhs=e,this.compare=r}static parse(t,e){if(3!==t.length&&4!==t.length)throw new Error(`"${t[0]}" expects 2 or 3 arguments`);if(4===t.length)throw new Error(`"${t[0]}" collator not supported`);return new b(dt(t[1]),dt(t[2]),e)}evaluate(t,e){return this.compare(this.lhs.evaluate(t,e),this.rhs.evaluate(t,e))}}class g{constructor(t){this.arg=t}static parse(t){if(2!==t.length)throw new Error('"!" expects 1 argument');return new g(dt(t[1]))}evaluate(t,e){return!this.arg.evaluate(t,e)}}class x{constructor(t){this.args=t}static parse(t){const e=[];for(let r=1;r<t.length;r++)e.push(dt(t[r]));return new x(e)}evaluate(t,e){for(const r of this.args)if(!r.evaluate(t,e))return!1;return!0}}class v{constructor(t){this.args=t}static parse(t){const e=[];for(let r=1;r<t.length;r++)e.push(dt(t[r]));return new v(e)}evaluate(t,e){for(const r of this.args)if(r.evaluate(t,e))return!0;return!1}}class E{constructor(t){this.args=t}static parse(t){const e=[];for(let r=1;r<t.length;r++)e.push(dt(t[r]));return new E(e)}evaluate(t,e){for(const r of this.args)if(r.evaluate(t,e))return!1;return!0}}class M{constructor(t,e){this.args=t,this.fallback=e}static parse(t){if(t.length<4)throw new Error('"case" expects at least 3 arguments');if(t.length%2==1)throw new Error('"case" expects an odd number of arguments');const e=[];for(let r=1;r<t.length-1;r+=2)e.push({condition:dt(t[r]),output:dt(t[r+1])});return new M(e,dt(t[t.length-1]))}evaluate(t,e){for(const r of this.args)if(r.condition.evaluate(t,e))return r.output.evaluate(t,e);return this.fallback.evaluate(t,e)}}class k{constructor(t){this.args=t}static parse(t){if(t.length<2)throw new Error('"coalesce" expects at least 1 argument');const e=[];for(let r=1;r<t.length;r++)e.push(dt(t[r]));return new k(e)}evaluate(t,e){for(const r of this.args){const n=r.evaluate(t,e);if(null!==n)return n}return null}}class ${constructor(t,e,r,n){this.input=t,this.labels=e,this.outputs=r,this.fallback=n}static parse(t){if(t.length<3)throw new Error('"match" expects at least 3 arguments');if(t.length%2==0)throw new Error('"case" expects an even number of arguments');const e=dt(t[1]),r=[],n={};let s;for(let e=2;e<t.length-1;e+=2){let i=t[e];Array.isArray(i)||(i=[i]);for(const t of i){const e=typeof t;if("string"!==e&&"number"!==e)throw new Error('"match" requires string or number literal as labels');if(s){if(e!==s)throw new Error('"match" requires labels to have the same type')}else s=e;n[t]=r.length}r.push(dt(t[e+1]))}return new $(e,n,r,dt(t[t.length-1]))}evaluate(t,e){const r=this.input.evaluate(t,e);return(this.outputs[this.labels[r]]||this.fallback).evaluate(t,e)}}const S=4/29,z=6/29,N=3*z*z,_=Math.PI/180,L=180/Math.PI;function A(t){return t>.008856451679035631?Math.pow(t,1/3):t/N+S}function P(t){return t>z?t*t*t:N*(t-S)}function O(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function J(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function I(t){const e=J(t.r),r=J(t.g),n=J(t.b),s=A((.4124564*e+.3575761*r+.1804375*n)/.95047),i=A((.2126729*e+.7151522*r+.072175*n)/1);return{l:116*i-16,a:500*(s-i),b:200*(i-A((.0193339*e+.119192*r+.9503041*n)/1.08883)),alpha:t.a}}function q(e){let r=(e.l+16)/116,n=isNaN(e.a)?r:r+e.a/500,s=isNaN(e.b)?r:r-e.b/200;return r=1*P(r),n=.95047*P(n),s=1.08883*P(s),new t([O(3.2404542*n-1.5371385*r-.4985314*s),O(-.969266*n+1.8760108*r+.041556*s),O(.0556434*n-.2040259*r+1.0572252*s),e.alpha])}function U(t){const{l:e,a:r,b:n}=I(t),s=Math.atan2(n,r)*L;return{h:s<0?s+360:s,c:Math.sqrt(r*r+n*n),l:e,alpha:t.a}}function j(t,e,r){const n=e-t;return t+r*(n>180||n<-180?n-360*Math.round(n/360):n)}class F{constructor(t,e,r,n){this.operator=t,this.input=e,this.stops=r,this.interpolation=n}static parse(t){if(t.length<5)throw new Error(`"${t[0]}" expects at least 4 arguments.`);const e=t[1];if(!Array.isArray(e)||0===e.length)throw new Error(`"${t[0]}" expects an interpolation type expression.`);switch(e[0]){case"linear":break;case"exponential":if("number"!=typeof e[1])throw new Error(`"${t[0]}" expects a numeric base for exponential interpolation.`);break;case"cubic-bezier":if(5!==e.length)throw new Error("Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.");for(let t=1;t<5;t++){const r=e[t];if("number"!=typeof r||r<0||r>1)throw new Error("Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.")}break;default:throw new Error(`"${t[0]}" unknown interpolation type "${e[0]}".`)}if(t.length%2!=1)throw new Error(`"${t[0]}" expects an even number of arguments.`);const r=dt(t[2]),n=[];for(let e=3;e<t.length;e+=2){const r=t[e];if("number"!=typeof r)throw new Error(`"${t[0]}" requires stop inputs as literal numbers.`);if(n.length&&n[n.length-1][0]>=r)throw new Error(`"${t[0]}" requires strictly ascending stop inputs.`);n.push([r,dt(t[e+1])])}return new F(t[0],r,n,e)}evaluate(t,e){const r=this.stops;if(1===r.length)return r[0][1].evaluate(t,e);const n=this.input.evaluate(t,e);if(n<=r[0][0])return r[0][1].evaluate(t,e);if(n>=r[r.length-1][0])return r[r.length-1][1].evaluate(t,e);let s=0;for(;++s<r.length&&!(n<r[s][0]););const i=F.interpolationRatio(this.interpolation,n,r[s-1][0],r[s][0]),a=r[s-1][1].evaluate(t,e),o=r[s][1].evaluate(t,e);return"interpolate"===this.operator?Array.isArray(a)?a.map(((t,e)=>y(t,o[e],i))):y(a,o,i):"interpolate-hcl"===this.operator?function(t){const e=t.h*_,r=t.c;return q({l:t.l,a:Math.cos(e)*r,b:Math.sin(e)*r,alpha:t.alpha})}(function(t,e,r){return{h:j(t.h,e.h,r),c:y(t.c,e.c,r),l:y(t.l,e.l,r),alpha:y(t.alpha,e.alpha,r)}}(U(a),U(o),i)):q(function(t,e,r){return{l:y(t.l,e.l,r),a:y(t.a,e.a,r),b:y(t.b,e.b,r),alpha:y(t.alpha,e.alpha,r)}}(I(a),I(o),i))}static interpolationRatio(t,e,r,n){let s=0;return"exponential"===t[0]?s=F.exponentialInterpolationRatio(e,t[1],r,n):"linear"===t[0]?s=F.exponentialInterpolationRatio(e,1,r,n):"cubic-bezier"===t[0]&&(s=function(t,e,r,n){const s=3*t,i=3*(r-t)-s,a=1-s-i,o=3*e,u=3*(n-e)-o,l=1-o-u;function c(t){return((a*t+i)*t+s)*t}return function(t,e=1e-6){return r=function(t,e){let r,n,o,u,l,h;for(o=t,h=0;h<8;h++){if(u=c(o)-t,Math.abs(u)<e)return o;if(l=(3*a*(f=o)+2*i)*f+s,Math.abs(l)<1e-6)break;o-=u/l}var f;if(r=0,n=1,o=t,o<r)return r;if(o>n)return n;for(;r<n;){if(u=c(o),Math.abs(u-t)<e)return o;t>u?r=o:n=o,o=.5*(n-r)+r}return o}(t,e),((l*r+u)*r+o)*r;var r}}(t[1],t[2],t[3],t[4])(F.exponentialInterpolationRatio(e,1,r,n),1e-5)),s}static exponentialInterpolationRatio(t,e,r,n){const s=n-r;if(0===s)return 0;const i=t-r;return 1===e?i/s:(Math.pow(e,i)-1)/(Math.pow(e,s)-1)}}class R{constructor(t,e){this.input=t,this.stops=e}static parse(t){if(t.length<5)throw new Error('"step" expects at least 4 arguments.');if(t.length%2!=1)throw new Error('"step" expects an even number of arguments.');const e=dt(t[1]),r=[];r.push([-1/0,dt(t[2])]);for(let e=3;e<t.length;e+=2){const n=t[e];if("number"!=typeof n)throw new Error('"step" requires stop inputs as literal numbers.');if(r.length&&r[r.length-1][0]>=n)throw new Error('"step" requires strictly ascending stop inputs.');r.push([n,dt(t[e+1])])}return new R(e,r)}evaluate(t,e){const r=this.stops;if(1===r.length)return r[0][1].evaluate(t,e);const n=this.input.evaluate(t,e);let s=0;for(;++s<r.length&&!(n<r[s][0]););return this.stops[s-1][1].evaluate(t,e)}}class C{constructor(t,e){this.index=t,this.array=e}static parse(t){if(3!==t.length)throw new Error('"at" expects 2 arguments.');const e=dt(t[1]),r=dt(t[2]);return new C(e,r)}evaluate(t,e){const r=this.index.evaluate(t,e),n=this.array.evaluate(t,e);if(r<0||r>=n.length)throw new Error('"at" index out of bounds.');if(r!==Math.floor(r))throw new Error('"at" index must be an integer.');return n[r]}}class D{constructor(t,e){this.key=t,this.obj=e}static parse(t){let e,r;switch(t.length){case 2:return e=dt(t[1]),new D(e);case 3:return e=dt(t[1]),r=dt(t[2]),new D(e,r);default:throw new Error('"get" expects 1 or 2 arguments')}}evaluate(t,e){const r=this.key.evaluate(t,e);return this.obj?this.obj.evaluate(t,e)[r]:t.values[r]}}class V{constructor(t,e){this.key=t,this.obj=e}static parse(t){let e,r;switch(t.length){case 2:return e=dt(t[1]),new V(e);case 3:return e=dt(t[1]),r=dt(t[2]),new V(e,r);default:throw new Error('"has" expects 1 or 2 arguments')}}evaluate(t,e){const r=this.key.evaluate(t,e);return this.obj?r in this.obj.evaluate(t,e):void 0!==t.values[r]}}class B{constructor(t,e){this.key=t,this.vals=e}static parse(t){if(3!==t.length)throw new Error('"in" expects 2 arguments');return new B(dt(t[1]),dt(t[2]))}evaluate(t,e){const r=this.key.evaluate(t,e);return-1!==this.vals.evaluate(t,e).indexOf(r)}}class Z{constructor(t,e,r){this.item=t,this.array=e,this.from=r}static parse(t){if(t.length<3||t.length>4)throw new Error('"index-of" expects 3 or 4 arguments.');const e=dt(t[1]),r=dt(t[2]);if(4===t.length){const n=dt(t[3]);return new Z(e,r,n)}return new Z(e,r)}evaluate(t,e){const r=this.item.evaluate(t,e),n=this.array.evaluate(t,e);if(this.from){const s=this.from.evaluate(t,e);if(s!==Math.floor(s))throw new Error('"index-of" index must be an integer.');return n.indexOf(r,s)}return n.indexOf(r)}}class H{constructor(t){this.arg=t}static parse(t){if(2!==t.length)throw new Error('"length" expects 2 arguments.');const e=dt(t[1]);return new H(e)}evaluate(t,e){const r=this.arg.evaluate(t,e);if("string"==typeof r)return r.length;if(Array.isArray(r))return r.length;throw new Error('"length" expects string or array.')}}class T{constructor(t,e,r){this.array=t,this.from=e,this.to=r}static parse(t){if(t.length<3||t.length>4)throw new Error('"slice" expects 2 or 3 arguments.');const e=dt(t[1]),r=dt(t[2]);if(4===t.length){const n=dt(t[3]);return new T(e,r,n)}return new T(e,r)}evaluate(t,e){const r=this.array.evaluate(t,e),n=this.from.evaluate(t,e);if(n<0||n>=r.length)throw new Error('"slice" index out of bounds.');if(n!==Math.floor(n))throw new Error('"slice" index must be an integer.');if(this.to){const s=this.to.evaluate(t,e);if(s<0||s>=r.length)throw new Error('"slice" index out of bounds.');if(s!==Math.floor(s))throw new Error('"slice" index must be an integer.');return r.slice(n,s)}return r.slice(n)}}class G{static parse(t){if(1!==t.length)throw new Error('"has-id" expects no arguments');return new G}evaluate(t,e){return void 0!==t.id}}class K{constructor(t,e){this.args=t,this.calculate=e}static parse(t,e){const r=t.slice(1).map((t=>dt(t)));return new K(r,e)}evaluate(t,e){let r;return this.args&&(r=this.args.map((r=>r.evaluate(t,e)))),this.calculate(r)}}class Q{constructor(t,e){this.args=t,this.calculate=e}static parse(t){const e=t.slice(1).map((t=>dt(t)));return new Q(e,Q.ops[t[0]])}evaluate(t,e){let r;return this.args&&(r=this.args.map((r=>r.evaluate(t,e)))),this.calculate(r)}}Q.ops={abs:t=>Math.abs(t[0]),acos:t=>Math.acos(t[0]),asin:t=>Math.asin(t[0]),atan:t=>Math.atan(t[0]),ceil:t=>Math.ceil(t[0]),cos:t=>Math.cos(t[0]),e:()=>Math.E,floor:t=>Math.floor(t[0]),ln:t=>Math.log(t[0]),ln2:()=>Math.LN2,log10:t=>Math.log(t[0])/Math.LN10,log2:t=>Math.log(t[0])/Math.LN2,max:t=>Math.max(...t),min:t=>Math.min(...t),pi:()=>Math.PI,round:t=>Math.round(t[0]),sin:t=>Math.sin(t[0]),sqrt:t=>Math.sqrt(t[0]),tan:t=>Math.tan(t[0])};class W{constructor(t){this.args=t}static parse(t){return new W(t.slice(1).map((t=>dt(t))))}evaluate(t,e){return this.args.map((r=>r.evaluate(t,e))).join("")}}class X{constructor(t,e){this.arg=t,this.calculate=e}static parse(t){if(2!==t.length)throw new Error(`${t[0]} expects 1 argument.`);const e=dt(t[1]);return new X(e,X.ops[t[0]])}evaluate(t,e){return this.calculate(this.arg.evaluate(t,e))}}X.ops={downcase:t=>t.toLowerCase(),upcase:t=>t.toUpperCase()};const Y={kind:"null"},tt={kind:"number"},et={kind:"string"},rt={kind:"boolean"},nt={kind:"color"},st={kind:"object"},it={kind:"value"};function at(t,e){return{kind:"array",itemType:t,n:e}}const ot=[Y,tt,et,rt,nt,st,at(it)];function ut(t){if("array"===t.kind){const e=ut(t.itemType);return"number"==typeof t.n?`array<${e}, ${t.n}>`:"value"===t.itemType.kind?"array":`array<${e}>`}return t.kind}function lt(e){if(null===e)return Y;if("string"==typeof e)return et;if("boolean"==typeof e)return rt;if("number"==typeof e)return tt;if(e instanceof t)return nt;if(Array.isArray(e)){let t;for(const r of e){const e=lt(r);if(t){if(t===e)continue;t=it;break}t=e}return at(t||it,e.length)}return st}function ct(t,e){if("error"===t.kind)return null;if("array"===e.kind){if("array"===t.kind&&(0===t.n&&"value"===t.itemType.kind||!ct(t.itemType,e.itemType))&&("number"!=typeof e.n||e.n===t.n))return null}else{if(e.kind===t.kind)return null;if("value"===e.kind)for(const e of ot)if(!ct(e,t))return null}return`Expected ${ut(e)} but found ${ut(t)} instead.`}class ht{constructor(t,e){this.type=t,this.args=e}static parse(t){const e=t[0];if(t.length<2)throw new Error(`${e} expects at least one argument.`);let r,n=1;if("array"===e){if(t.length>2){switch(t[1]){case"string":r=et;break;case"number":r=tt;break;case"boolean":r=rt;break;default:throw new Error('"array" type argument must be string, number or boolean')}n++}else r=it;let e;if(t.length>3){if(e=t[2],null!==e&&("number"!=typeof e||e<0||e!==Math.floor(e)))throw new Error('"array" length argument must be a positive integer literal');n++}r=at(r,e)}else switch(e){case"string":r=et;break;case"number":r=tt;break;case"boolean":r=rt;break;case"object":r=st}const s=[];for(;n<t.length;n++){const e=dt(t[n]);s.push(e)}return new ht(r,s)}evaluate(t,e){for(const r of this.args){const n=r.evaluate(t,e);if(!ct(lt(n),this.type))return n}return null}}class ft{constructor(t,e){this.type=t,this.args=e}static parse(t){const e=t[0];if("to-boolean"===e||"to-string"===e){if(2!==t.length)throw new Error(`${e} expects one argument.`)}else if(t.length<2)throw new Error(`${e} expects at least one argument.`);const r=ft.types[e],n=[];for(let e=1;e<t.length;e++){const r=dt(t[e]);n.push(r)}return new ft(r,n)}evaluate(e,r){if(this.type===rt)return Boolean(this.args[0].evaluate(e,r));if(this.type===et)return function(e){const r=typeof e;return null===e?"":"string"===r||"number"===r||"boolean"===r?String(e):e instanceof t?e.toString():JSON.stringify(e)}(this.args[0].evaluate(e,r));if(this.type===tt){for(const t of this.args){const n=t.evaluate(e,r);if(null===n)return 0;const s=Number(n);if(!isNaN(s))return s}return null}if(this.type===nt){for(const n of this.args){const s=n.evaluate(e,r);if(s instanceof t)return s;if("string"==typeof s)return t.fromString(s);if(Array.isArray(s)&&(3===s.length||4===s.length))return t.fromArray(s)}return null}}}ft.types={"to-boolean":rt,"to-color":nt,"to-number":tt,"to-string":et};class pt{constructor(t){this.val=t}static parse(t){if(2!==t.length)throw new Error('"literal" expects 1 argument');return new pt(t[1])}evaluate(t,e){return this.val}}class mt{constructor(t){this.arg=t}static parse(t){if(2!==t.length)throw new Error('"typeof" expects 1 argument');return new mt(dt(t[1]))}evaluate(t,e){return ut(lt(this.arg.evaluate(t,e)))}}const yt={array:ht,boolean:ht,collator:null,format:null,literal:pt,image:null,number:ht,"number-format":null,object:ht,string:ht,"to-boolean":ft,"to-color":ft,"to-number":ft,"to-string":ft,typeof:mt,accumulated:null,"feature-state":null,"geometry-type":n,id:r,"line-progress":null,properties:s,at:C,get:D,has:V,in:B,"index-of":Z,length:H,slice:T,"!":g,"!=":class extends b{static parse(t){return b.parse(t,((t,e)=>t!==e))}},"<":class extends b{static parse(t){return b.parse(t,((t,e)=>t<e))}},"<=":class extends b{static parse(t){return b.parse(t,((t,e)=>t<=e))}},"==":class extends b{static parse(t){return b.parse(t,((t,e)=>t===e))}},">":class extends b{static parse(t){return b.parse(t,((t,e)=>t>e))}},">=":class extends b{static parse(t){return b.parse(t,((t,e)=>t>=e))}},all:x,any:v,case:M,coalesce:k,match:$,within:null,interpolate:F,"interpolate-hcl":F,"interpolate-lab":F,step:R,let:null,var:null,concat:W,downcase:X,"is-supported-script":null,"resolved-locale":null,upcase:X,rgb:d,rgba:class{constructor(t){this.args=t}static parse(t){if(5!==t.length)throw new Error('"rgba" expects 4 arguments.');const e=t.slice(1).map((t=>dt(t)));return new d(e)}evaluate(t,e){const r=this.args[1].evaluate(t,e),n=this.args[2].evaluate(t,e),s=this.args[3].evaluate(t,e),i=this.args[4].evaluate(t,e);return`rgb(${Math.round(r)},${Math.round(n)},${Math.round(s)},${i})`}},"to-rgba":w,"-":class extends K{static parse(t){switch(t.length){case 2:return K.parse(t,(t=>-t[0]));case 3:return K.parse(t,(t=>t[0]-t[1]));default:throw new Error('"-" expects 1 or 2 arguments')}}},"*":class extends K{static parse(t){return K.parse(t,(t=>{let e=1;for(const r of t)e*=r;return e}))}},"/":class extends K{static parse(t){if(3===t.length)return K.parse(t,(t=>t[0]/t[1]));throw new Error('"/" expects 2 arguments')}},"%":class extends K{static parse(t){if(3===t.length)return K.parse(t,(t=>t[0]%t[1]));throw new Error('"%" expects 2 arguments')}},"^":class extends K{static parse(t){if(3===t.length)return K.parse(t,(t=>Math.pow(t[0],t[1])));throw new Error('"^" expects 1 or 2 arguments')}},"+":class extends K{static parse(t){return K.parse(t,(t=>{let e=0;for(const r of t)e+=r;return e}))}},abs:Q,acos:Q,asin:Q,atan:Q,ceil:Q,cos:Q,e:Q,floor:Q,ln:Q,ln2:Q,log10:Q,log2:Q,max:Q,min:Q,pi:Q,round:Q,sin:Q,sqrt:Q,tan:Q,zoom:i,"heatmap-density":null,"has-id":G,none:E};function dt(t){if(null!==t&&"string"!=typeof t&&"boolean"!=typeof t&&"number"!=typeof t||(t=["literal",t]),!Array.isArray(t)||0===t.length)throw new Error("Expression must be a non empty array");const e=t[0];if("string"!=typeof e)throw new Error("First element of expression must be a string");const r=yt[e];if(void 0===r)throw new Error(`Invalid expression operator "${e}"`);if(!r)throw new Error(`Unimplemented expression operator "${e}"`);return r.parse(t)}class wt{constructor(t){this._expression=t}filter(t,e){if(!this._expression)return!0;try{return this._expression.evaluate(t,e)}catch(t){return console.log(t.message),!0}}static createFilter(t){if(!t)return null;this.isLegacyFilter(t)&&(t=this.convertLegacyFilter(t));try{const e=dt(t);return new wt(e)}catch(t){return console.log(t.message),null}}static isLegacyFilter(t){if(!Array.isArray(t))return!0;if(0===t.length)return!0;switch(t[0]){case"==":case"!=":case">":case"<":case">=":case"<=":return 3===t.length&&"string"==typeof t[1]&&!Array.isArray(t[2]);case"in":return t.length>=3&&"string"==typeof t[1]&&!Array.isArray(t[2]);case"!in":return!0;case"any":case"all":for(let e=1;e<t.length;e++)if(!this.isLegacyFilter(t[1]))return!1;return!0;case"none":return!0;case"has":return 2===t.length&&("$id"===t[1]||"$type"===t[1]);case"!has":return!0;default:return!1}}static convertLegacyFilter(t){if(!Array.isArray(t)||0===t.length)return!0;const e=t[0];if(1===t.length)return"any"!==e;switch(e){case"==":return wt.convertComparison("==",t[1],t[2]);case"!=":return wt.negate(wt.convertComparison("==",t[1],t[2]));case">":case"<":case">=":case"<=":return wt.convertComparison(e,t[1],t[2]);case"in":return wt.convertIn(t[1],t.slice(2));case"!in":return wt.negate(wt.convertIn(t[1],t.slice(2)));case"any":case"all":case"none":return wt.convertCombining(e,t.slice(1));case"has":return wt.convertHas(t[1]);case"!has":return wt.negate(wt.convertHas(t[1]));default:throw new Error("Unexpected legacy filter.")}}static convertComparison(t,e,r){switch(e){case"$type":return[t,["geometry-type"],r];case"$id":return[t,["id"],r];default:return[t,["get",e],r]}}static convertIn(t,e){switch(t){case"$type":return["in",["geometry-type"],["literal",e]];case"$id":return["in",["id"],["literal",e]];default:return["in",["get",t],["literal",e]]}}static convertHas(t){switch(t){case"$type":return!0;case"$id":return["has-id"];default:return["has",t]}}static convertCombining(t,e){return[t].concat(e.map(this.convertLegacyFilter))}static negate(t){return["!",t]}}class bt{}bt.backgroundLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:"visible"}},bt.fillLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:"visible"}},bt.lineLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:"visible"},"line-cap":{type:"enum",values:["butt","round","square"],default:"butt"},"line-join":{type:"enum",values:["bevel","round","miter"],default:"miter"},"line-miter-limit":{type:"number",default:2},"line-round-limit":{type:"number",default:1.05}},bt.symbolLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:"visible"},"symbol-avoid-edges":{type:"boolean",default:!1},"symbol-placement":{type:"enum",values:["point","line","line-center"],default:"point"},"symbol-sort-key":{type:"number",default:-1},"symbol-spacing":{type:"number",minimum:1,default:250},"icon-allow-overlap":{type:"boolean",default:!1},"icon-anchor":{type:"enum",values:["center","left","right","top","bottom","top-left","top-right","bottom-left","bottom-right"],default:"center"},"icon-ignore-placement":{type:"boolean",default:!1},"icon-image":{type:"string"},"icon-keep-upright":{type:"boolean",default:!1},"icon-offset":{type:"array",value:"number",length:2,default:[0,0]},"icon-optional":{type:"boolean",default:!1},"icon-padding":{type:"number",minimum:0,default:2},"icon-rotate":{type:"number",default:0},"icon-rotation-alignment":{type:"enum",values:["map","viewport","auto"],default:"auto"},"icon-size":{type:"number",minimum:0,default:1},"text-allow-overlap":{type:"boolean",default:!1},"text-anchor":{type:"enum",values:["center","left","right","top","bottom","top-left","top-right","bottom-left","bottom-right"],default:"center"},"text-field":{type:"string"},"text-font":{type:"array",value:"string",default:["Open Sans Regular","Arial Unicode MS Regular"]},"text-ignore-placement":{type:"boolean",default:!1},"text-justify":{type:"enum",values:["auto","left","center","right"],default:"center"},"text-keep-upright":{type:"boolean",default:!0},"text-letter-spacing":{type:"number",default:0},"text-line-height":{type:"number",default:1.2},"text-max-angle":{type:"number",minimum:0,default:45},"text-max-width":{type:"number",minimum:0,default:10},"text-offset":{type:"array",value:"number",length:2,default:[0,0]},"text-optional":{type:"boolean",default:!1},"text-padding":{type:"number",minimum:0,default:2},"text-rotate":{type:"number",default:0},"text-rotation-alignment":{type:"enum",values:["map","viewport","auto"],default:"auto"},"text-size":{type:"number",minimum:0,default:16},"text-transform":{type:"enum",values:["none","uppercase","lowercase"],default:"none"},"text-writing-mode":{type:"array",value:"enum",values:["horizontal","vertical"],default:["horizontal"]}},bt.circleLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:"visible"}},bt.backgroundPaintDefinition={"background-color":{type:"color",default:[0,0,0,1]},"background-opacity":{type:"number",minimum:0,maximum:1,default:1},"background-pattern":{type:"string"}},bt.fillPaintDefinition={"fill-antialias":{type:"boolean",default:!0},"fill-color":{type:"color",default:[0,0,0,1]},"fill-opacity":{type:"number",minimum:0,maximum:1,default:1},"fill-outline-color":{type:"color",default:[0,0,0,0]},"fill-pattern":{type:"string"},"fill-translate":{type:"array",value:"number",length:2,default:[0,0]},"fill-translate-anchor":{type:"enum",values:["map","viewport"],default:"map"}},bt.linePaintDefinition={"line-blur":{type:"number",minimum:0,default:0},"line-color":{type:"color",default:[0,0,0,1]},"line-dasharray":{type:"array",value:"number",default:[]},"line-gap-width":{type:"number",minimum:0,default:0},"line-offset":{type:"number",default:0},"line-opacity":{type:"number",minimum:0,maximum:1,default:1},"line-pattern":{type:"string"},"line-translate":{type:"array",value:"number",length:2,default:[0,0]},"line-translate-anchor":{type:"enum",values:["map","viewport"],default:"map"},"line-width":{type:"number",minimum:0,default:1}},bt.symbolPaintDefinition={"icon-color":{type:"color",default:[0,0,0,1]},"icon-halo-blur":{type:"number",minimum:0,default:0},"icon-halo-color":{type:"color",default:[0,0,0,0]},"icon-halo-width":{type:"number",minimum:0,default:0},"icon-opacity":{type:"number",minimum:0,maximum:1,default:1},"icon-translate":{type:"array",value:"number",length:2,default:[0,0]},"icon-translate-anchor":{type:"enum",values:["map","viewport"],default:"map"},"text-color":{type:"color",default:[0,0,0,1]},"text-halo-blur":{type:"number",minimum:0,default:0},"text-halo-color":{type:"color",default:[0,0,0,0]},"text-halo-width":{type:"number",minimum:0,default:0},"text-opacity":{type:"number",minimum:0,maximum:1,default:1},"text-translate":{type:"array",value:"number",length:2,default:[0,0]},"text-translate-anchor":{type:"enum",values:["map","viewport"],default:"map"}},bt.rasterPaintDefinition={"raster-opacity":{type:"number",minimum:0,maximum:1,default:1},"raster-hue-rotate":{type:"number",default:0},"raster-brightness-min":{type:"number",minimum:0,maximum:1,default:0},"raster-brightness-max":{type:"number",minimum:0,maximum:1,default:1},"raster-saturation":{type:"number",minimum:-1,maximum:1,default:0},"raster-contrast":{type:"number",minimum:-1,maximum:1,default:0},"raster-fade-duration":{type:"number",minimum:0,default:300}},bt.circlePaintDefinition={"circle-blur":{type:"number",minimum:0,default:0},"circle-color":{type:"color",default:[0,0,0,1]},"circle-opacity":{type:"number",minimum:0,maximum:1,default:1},"circle-radius":{type:"number",minimum:0,default:5},"circle-stroke-color":{type:"color",default:[0,0,0,1]},"circle-stroke-opacity":{type:"number",minimum:0,maximum:1,default:1},"circle-stroke-width":{type:"number",minimum:0,default:0},"circle-translate":{type:"array",value:"number",length:2,default:[0,0]},"circle-translate-anchor":{type:"enum",values:["map","viewport"],default:"map"}};class gt{constructor(t,e){let r;switch(this.isDataDriven=!1,t.type){case"number":r=!0;break;case"color":r=!0,e=gt._parseColor(e);break;case"array":r="number"===t.value;break;default:r=!1}if(null==e&&(e=t.default),Array.isArray(e)&&e.length>0&&yt[e[0]]){try{const r=dt(e);this.getValue=this._buildExpression(r,t),this.isDataDriven=!0}catch(e){console.log(e.message),this.getValue=this._buildSimple(t.default)}return}r&&"interval"===e.type&&(r=!1);const n=e&&e.stops&&e.stops.length>0;if(n)for(const r of e.stops)r[1]=this._validate(r[1],t);if(this.isDataDriven=!!e&&!!e.property,this.isDataDriven)if(void 0!==e.default&&(e.default=this._validate(e.default,t)),n)switch(e.type){case"identity":this.getValue=this._buildIdentity(e,t);break;case"categorical":this.getValue=this._buildCategorical(e,t);break;default:this.getValue=r?this._buildInterpolate(e,t):this._buildInterval(e,t)}else this.getValue=this._buildIdentity(e,t);else n?this.getValue=r?this._buildZoomInterpolate(e):this._buildZoomInterval(e):(e=this._validate(e,t),this.getValue=this._buildSimple(e))}_validate(t,e){if("number"===e.type){if(t<e.minimum)return e.minimum;if(t>e.maximum)return e.maximum}return t}_buildSimple(t){return()=>t}_buildExpression(t,e){return(r,n)=>{try{let s=t.evaluate(n,r);return"color"===e.type&&(s=gt._parseColor(s)),void 0===s?e.default:this._validate(s,e)}catch(t){return console.log(t.message),e.default}}}_buildIdentity(t,e){return(r,n)=>{let s;return n&&(s=n.values[t.property],"color"===e.type&&(s=gt._parseColor(s))),void 0===s&&(s=t.default),void 0!==s?this._validate(s,e):e.default}}_buildCategorical(t,e){return(r,n)=>{let s;return n&&(s=n.values[t.property]),s=this._categorical(s,t.stops),void 0!==s?s:void 0!==t.default?t.default:e.default}}_buildInterval(t,e){return(r,n)=>{let s;return n&&(s=n.values[t.property]),"number"==typeof s?this._interval(s,t.stops):void 0!==t.default?t.default:e.default}}_buildInterpolate(t,e){return(r,n)=>{let s;return n&&(s=n.values[t.property]),"number"==typeof s?this._interpolate(s,t.stops,t.base||1):void 0!==t.default?t.default:e.default}}_buildZoomInterpolate(t){return e=>this._interpolate(e,t.stops,t.base||1)}_buildZoomInterval(t){return e=>this._interval(e,t.stops)}_categorical(t,e){const r=e.length;for(let n=0;n<r;n++)if(e[n][0]===t)return e[n][1]}_interval(t,e){const r=e.length;let n=0;for(let s=0;s<r&&e[s][0]<=t;s++)n=s;return e[n][1]}_interpolate(t,e,r){let n,s;const i=e.length;for(let r=0;r<i;r++){const i=e[r];if(!(i[0]<=t)){s=i;break}n=i}if(n&&s){const e=s[0]-n[0],i=t-n[0],a=1===r?i/e:(Math.pow(r,i)-1)/(Math.pow(r,e)-1);if(Array.isArray(n[1])){const t=n[1],e=s[1],r=[];for(let n=0;n<t.length;n++)r.push(y(t[n],e[n],a));return r}return y(n[1],s[1],a)}return n?n[1]:s?s[1]:void 0}static _isEmpty(t){for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}static _parseColor(e){if(Array.isArray(e))return e;if("string"==typeof e){const r=new t(e);return this._isEmpty(r)?void 0:t.toUnitRGBA(r)}return e&&e.default&&(e.default=gt._parseColor(e.default)),e&&e.stops&&(e.stops=e.stops.map((t=>[t[0],gt._parseColor(t[1])]))),e}}class xt{constructor(t,e,r,n){switch(this.type=t,this.typeName=e.type,this.id=e.id,this.source=e.source,this.sourceLayer=e["source-layer"],this.minzoom=e.minzoom,this.maxzoom=e.maxzoom,this.filter=e.filter,this.layout=e.layout,this.paint=e.paint,this.z=r,this.uid=n,t){case 0:this._layoutDefinition=bt.backgroundLayoutDefinition,this._paintDefinition=bt.backgroundPaintDefinition;break;case 1:this._layoutDefinition=bt.fillLayoutDefinition,this._paintDefinition=bt.fillPaintDefinition;break;case 2:this._layoutDefinition=bt.lineLayoutDefinition,this._paintDefinition=bt.linePaintDefinition;break;case 3:this._layoutDefinition=bt.symbolLayoutDefinition,this._paintDefinition=bt.symbolPaintDefinition;break;case 4:this._layoutDefinition=bt.circleLayoutDefinition,this._paintDefinition=bt.circlePaintDefinition}this._layoutProperties=this._parseLayout(this.layout),this._paintProperties=this._parsePaint(this.paint)}getFeatureFilter(){return void 0!==this._featureFilter?this._featureFilter:this._featureFilter=wt.createFilter(this.filter)}getLayoutProperty(t){return this._layoutProperties[t]}getPaintProperty(t){return this._paintProperties[t]}getLayoutValue(t,e,r){let n;const s=this._layoutProperties[t];s&&(n=s.getValue(e,r));const i=this._layoutDefinition[t];return void 0===n&&(n=i.default),"enum"===i.type?n=i.values.indexOf(n):"array"===i.type&&"enum"===i.value&&(n=n.map((t=>i.values.indexOf(t)))),n}getPaintValue(t,e,r){let n;const s=this._paintProperties[t];s&&(n=s.getValue(e,r));const i=this._paintDefinition[t];return void 0===n&&(n=i.default),"enum"===i.type&&(n=i.values.indexOf(n)),n}isPainterDataDriven(){const t=this._paintProperties;if(t)for(const e in t)if(t[e].isDataDriven)return!0;return!1}_parseLayout(t){const e={};for(const r in t){const n=this._layoutDefinition[r];n&&(e[r]=new gt(n,t[r]))}return e}_parsePaint(t){const e={};for(const r in t){const n=this._paintDefinition[r];n&&(e[r]=new gt(n,t[r]))}return e}}class vt extends xt{constructor(t,e,r,n){super(t,e,r,n)}}class Et extends xt{constructor(t,e,r,n){super(t,e,r,n);const s=this.getPaintProperty("fill-color");this.hasDataDrivenColor=!!s&&s.isDataDriven;const i=this.getPaintProperty("fill-opacity");this.hasDataDrivenOpacity=!!i&&i.isDataDriven,this.hasDataDrivenFill=this.hasDataDrivenColor||this.hasDataDrivenOpacity;const a=this.getPaintProperty("fill-outline-color");this.outlineUsesFillColor=!a,this.hasDataDrivenOutlineColor=!!a&&a.isDataDriven,this.hasDataDrivenOutline=(a?this.hasDataDrivenOutlineColor:this.hasDataDrivenColor)||this.hasDataDrivenOpacity}}class Mt extends xt{constructor(t,r,n,s){super(t,r,n,s);const i=this.getPaintProperty("line-color");this.hasDataDrivenColor=!!i&&i.isDataDriven;const a=this.getPaintProperty("line-opacity");this.hasDataDrivenOpacity=!!a&&a.isDataDriven;const o=this.getPaintProperty("line-width");this.hasDataDrivenWidth=!!o&&o.isDataDriven,this.hasDataDrivenLine=this.hasDataDrivenColor||this.hasDataDrivenOpacity||this.hasDataDrivenWidth;let u=r.paint["line-width"];u||(u=bt.linePaintDefinition["line-width"].default),this.isThinLine=!this.hasDataDrivenWidth&&"number"==typeof u&&u<e}}class kt extends xt{constructor(t,e,r,n){super(t,e,r,n);const s=this.getPaintProperty("icon-color");this.hasDataDrivenIconColor=!!s&&s.isDataDriven;const i=this.getPaintProperty("icon-opacity");this.hasDataDrivenIconOpacity=!!i&&i.isDataDriven;const a=this.getLayoutProperty("icon-size");this.hasDataDrivenIconSize=!!a&&a.isDataDriven,this.hasDataDrivenIcon=this.hasDataDrivenIconColor||this.hasDataDrivenIconOpacity||this.hasDataDrivenIconSize;const o=this.getPaintProperty("text-color");this.hasDataDrivenTextColor=!!o&&o.isDataDriven;const u=this.getPaintProperty("text-opacity");this.hasDataDrivenTextOpacity=!!u&&u.isDataDriven;const l=this.getLayoutProperty("text-size");this.hasDataDrivenTextSize=!!l&&l.isDataDriven,this.hasDataDrivenText=this.hasDataDrivenTextColor||this.hasDataDrivenTextOpacity||this.hasDataDrivenTextSize}}class $t extends xt{constructor(t,e,r,n){super(t,e,r,n);const s=this.getPaintProperty("circle-radius");this.hasDataDrivenRadius=!!s&&s.isDataDriven;const i=this.getPaintProperty("circle-color");this.hasDataDrivenColor=!!i&&i.isDataDriven;const a=this.getPaintProperty("circle-opacity");this.hasDataDrivenOpacity=!!a&&a.isDataDriven;const o=this.getPaintProperty("circle-stroke-width");this.hasDataDrivenStrokeWidth=!!o&&o.isDataDriven;const u=this.getPaintProperty("circle-stroke-color");this.hasDataDrivenStrokeColor=!!u&&u.isDataDriven;const l=this.getPaintProperty("circle-stroke-opacity");this.hasDataDrivenStrokeOpacity=!!l&&l.isDataDriven;const c=this.getPaintProperty("circle-blur");this.hasDataDrivenBlur=!!c&&c.isDataDriven}}class St{constructor(t,e,r,n){this.allowOverlap=t.getLayoutValue("icon-allow-overlap",e,n),this.anchor=t.getLayoutValue("icon-anchor",e,n),this.ignorePlacement=t.getLayoutValue("icon-ignore-placement",e,n),this.keepUpright=t.getLayoutValue("icon-keep-upright",e,n),this.offset=t.getLayoutValue("icon-offset",e,n),this.optional=t.getLayoutValue("icon-optional",e,n),this.padding=t.getLayoutValue("icon-padding",e,n),this.rotate=t.getLayoutValue("icon-rotate",e,n),this.rotationAlignment=t.getLayoutValue("icon-rotation-alignment",e,n),this.size=t.getLayoutValue("icon-size",e,n),2===this.rotationAlignment&&(this.rotationAlignment=r?0:1)}}class zt{constructor(t,e,r,n){this.allowOverlap=t.getLayoutValue("text-allow-overlap",e,n),this.anchor=t.getLayoutValue("text-anchor",e,n),this.fontArray=t.getLayoutValue("text-font",e,n),this.ignorePlacement=t.getLayoutValue("text-ignore-placement",e,n),this.justify=t.getLayoutValue("text-justify",e,n),this.keepUpright=t.getLayoutValue("text-keep-upright",e,n),this.letterSpacing=t.getLayoutValue("text-letter-spacing",e,n),this.lineHeight=t.getLayoutValue("text-line-height",e,n),this.maxAngle=t.getLayoutValue("text-max-angle",e,n),this.maxWidth=t.getLayoutValue("text-max-width",e,n),this.offset=t.getLayoutValue("text-offset",e,n),this.optional=t.getLayoutValue("text-optional",e,n),this.padding=t.getLayoutValue("text-padding",e,n),this.rotate=t.getLayoutValue("text-rotate",e,n),this.rotationAlignment=t.getLayoutValue("text-rotation-alignment",e,n),this.size=t.getLayoutValue("text-size",e,n),this.transform=t.getLayoutValue("text-transform",e,n),this.writingMode=t.getLayoutValue("text-writing-mode",e,n),2===this.rotationAlignment&&(this.rotationAlignment=r?0:1)}}class Nt{constructor(t,e){if(this.backgroundBucketIds=[],this._uidToLayer=new Map,this._layerByName={},this._runningId=0,t.layers||(t.layers=[]),this.version=parseFloat(t.version),this.sprite=e?e.spriteUrl:t.sprite,this.glyphs=e?e.glyphsUrl:t.glyphs,this.layers=t.layers.map(((t,e,r)=>this._create(t,e,r))),this.layers){let t;for(let e=0;e<this.layers.length;e++)t=this.layers[e],this._layerByName[t.id.toLowerCase()]=t,this._uidToLayer.set(t.uid,t),0===t.type&&this.backgroundBucketIds.push(t.id)}this._identifyRefLayers()}isPainterDataDriven(t){const e=this._layerByName[t.toLowerCase()];return!!e&&e.isPainterDataDriven()}getStyleLayerId(t){return t>=this.layers.length?null:this.layers[t].id}getStyleLayerByUID(t){const e=this._uidToLayer.get(t);return null!=e?e:null}getStyleLayerIndex(t){const e=this._layerByName[t.toLowerCase()];return e?this.layers.indexOf(e):-1}setStyleLayer(t,e){if(!t||!t.id)return;e&&e>=this.layers.length&&(e=this.layers.length-1);let r,n=!0;const s=this._layerByName[t.id.toLowerCase()];if(s){const i=this.layers.indexOf(s);e||(e=i),e===i?(n=!1,r=Nt._recreateLayer(t,s),this.layers[e]=r):(this.layers.splice(i,1),r=this._create(t,e,this.layers),this.layers.splice(e,0,r))}else r=this._create(t,e,this.layers),!e||e>=this.layers.length?this.layers.push(r):this.layers.splice(e,0,r);this._layerByName[t.id.toLowerCase()]=r,this._uidToLayer.set(r.uid,r),n&&this._recomputeZValues(),this._identifyRefLayers()}getStyleLayer(t){const e=this._layerByName[t.toLowerCase()];return e?{type:e.typeName,id:e.id,source:e.source,"source-layer":e.sourceLayer,minzoom:e.minzoom,maxzoom:e.maxzoom,filter:e.filter,layout:e.layout,paint:e.paint}:null}deleteStyleLayer(t){const e=this._layerByName[t.toLowerCase()];if(e){delete this._layerByName[t.toLowerCase()],this._uidToLayer.delete(e.uid);const r=this.layers.indexOf(e);this.layers.splice(r,1),this._recomputeZValues(),this._identifyRefLayers()}}getLayerById(t){return this._layerByName[t.toLowerCase()]}getLayoutProperties(t){const e=this._layerByName[t.toLowerCase()];return e?e.layout:null}getPaintProperties(t){const e=this._layerByName[t.toLowerCase()];return e?e.paint:null}setPaintProperties(t,e){const r=this._layerByName[t.toLowerCase()];if(!r)return"";const n=Nt._recreateLayer({type:r.typeName,id:r.id,source:r.source,"source-layer":r.sourceLayer,minzoom:r.minzoom,maxzoom:r.maxzoom,filter:r.filter,layout:r.layout,paint:e},r),s=this.layers.indexOf(r);return this.layers[s]=n,this._layerByName[r.id.toLowerCase()]=n,this._uidToLayer.set(r.uid,n),r.id}setLayoutProperties(t,e){const r=this._layerByName[t.toLowerCase()];if(!r)return"";const n=Nt._recreateLayer({type:r.typeName,id:r.id,source:r.source,"source-layer":r.sourceLayer,minzoom:r.minzoom,maxzoom:r.maxzoom,filter:r.filter,layout:e,paint:r.paint},r),s=this.layers.indexOf(r);return this.layers[s]=n,this._layerByName[r.id.toLowerCase()]=n,this._uidToLayer.set(r.uid,n),r.id}setStyleLayerVisibility(t,e){const r=this._layerByName[t.toLowerCase()];if(!r)return;const n=r.layout||{};n.visibility=e;const s=Nt._recreateLayer({type:r.typeName,id:r.id,source:r.source,"source-layer":r.sourceLayer,minzoom:r.minzoom,maxzoom:r.maxzoom,filter:r.filter,layout:n,paint:r.paint},r),i=this.layers.indexOf(r);this.layers[i]=s,this._layerByName[r.id.toLowerCase()]=s,this._uidToLayer.set(r.uid,s)}getStyleLayerVisibility(t){var e;const r=this._layerByName[t.toLowerCase()];if(!r)return"none";const n=r.layout;return null!=(e=null==n?void 0:n.visibility)?e:"visible"}_recomputeZValues(){const t=this.layers,e=1/(t.length+1);for(let r=0;r<t.length;r++)t[r].z=1-(1+r)*e}_identifyRefLayers(){const t=[],e=[];let r=0;for(const n of this.layers){if(1===n.type){const e=n;let s=n.source+"|"+n.sourceLayer;s+="|"+JSON.stringify(n.layout&&n.layout.visibility),s+="|"+JSON.stringify(n.minzoom),s+="|"+JSON.stringify(n.maxzoom),s+="|"+JSON.stringify(n.filter),(e.hasDataDrivenFill||e.hasDataDrivenOutline)&&(s+="|"+JSON.stringify(r)),t.push({key:s,layer:n})}if(2===n.type){const t=n;let s=n.source+"|"+n.sourceLayer;s+="|"+JSON.stringify(n.layout&&n.layout.visibility),s+="|"+JSON.stringify(n.minzoom),s+="|"+JSON.stringify(n.maxzoom),s+="|"+JSON.stringify(n.filter),s+="|"+JSON.stringify(n.layout&&n.layout["line-cap"]),s+="|"+JSON.stringify(n.layout&&n.layout["line-join"]),t.hasDataDrivenLine&&(s+="|"+JSON.stringify(r)),e.push({key:s,layer:n})}++r}this._assignRefLayers(t),this._assignRefLayers(e)}_assignRefLayers(t){let e,r;t.sort(((t,e)=>t.key<e.key?-1:t.key>e.key?1:0));const n=t.length;for(let s=0;s<n;s++){const i=t[s];if(i.key===e)i.layer.refLayerId=r;else if(e=i.key,r=i.layer.id,1===i.layer.type&&!i.layer.getPaintProperty("fill-outline-color"))for(let a=s+1;a<n;a++){const n=t[a];if(n.key!==e)break;if(n.layer.getPaintProperty("fill-outline-color")){t[s]=n,t[a]=i,r=n.layer.id;break}}}}_create(t,e,r){const n=1-(1+e)*(1/(r.length+1)),s=this._runningId++;switch(t.type){case"background":return new vt(0,t,n,s);case"fill":return new Et(1,t,n,s);case"line":return new Mt(2,t,n,s);case"symbol":return new kt(3,t,n,s);case"raster":throw new Error("Unsupported vector tile raster layer");case"circle":return new $t(4,t,n,s)}throw new Error("Unknown vector tile layer")}static _recreateLayer(t,e){switch(t.type){case"background":return new vt(0,t,e.z,e.uid);case"fill":return new Et(1,t,e.z,e.uid);case"line":return new Mt(2,t,e.z,e.uid);case"symbol":return new kt(3,t,e.z,e.uid);case"raster":throw new Error("Unsupported vector tile raster layer");case"circle":return new $t(4,t,e.z,e.uid)}}}export{St as D,m as P,f as a,y as b,Nt as c,c as f,p as h,a as n,u as r,o as t,zt as u}