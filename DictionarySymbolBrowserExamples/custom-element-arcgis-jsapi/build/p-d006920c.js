import{d9 as t,da as n,db as e,dc as i,dd as r,bd as s}from"./p-ab028778.js";class o{constructor(){this.code=null,this.description=null}}class l{constructor(t){this.error=new o,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=t}}function u(t){return new l(t)}class a{constructor(t){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=t}}function c(t){return new a(t)}const f=new Set;function d(t,n,e,s,o=!1,l){f.clear();for(const n in s){const a=t.get(n);if(!a)continue;const c=s[n],d=h(a,c);if(d!==c&&l&&l.push({name:"invalid-value-type",message:"attribute value was converted to match the field type",details:{field:a,originalValue:c,sanitizedValue:d}}),f.add(a.name),a&&(o||a.editable)){const t=i(a,d);if(t)return u(r(t,a,d));e[a.name]=d}}for(const t of n)if(!f.has(t.name))return u(`missing required field "${t.name}"`);return null}function h(i,r){let s=r;return"string"==typeof r&&t(i)?s=parseFloat(r):null!=r&&n(i)&&"string"!=typeof r&&(s=String(r)),e(s)}let p;function y(t,n){if(!t||!s(n))return t;if("rings"in t||"paths"in t){if(!p)throw new TypeError("geometry engine not loaded");return p.simplify(n,t)}return t}async function g(t,n){!s(t)||"esriGeometryPolygon"!==n&&"esriGeometryPolyline"!==n||await async function(){return p||(p=await import("./p-6337d6d6.js"),p)}()}export{c,d,y as h,u,g as y}