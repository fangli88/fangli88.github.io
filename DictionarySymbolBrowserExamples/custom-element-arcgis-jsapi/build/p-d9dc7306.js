import"./p-476cf7c4.js";import{U as e,y as r,a2 as s,Z as i,a6 as t,h as a,m as o,b as n,O as l,a5 as p,D as c,E as d,F as u,aG as h,ag as m,K as f}from"./p-ab028778.js";import"./p-2ef6e039.js";import"./p-7575e94f.js";import"./p-73b795c3.js";import"./p-e07a8dfe.js";import"./p-b92ca348.js";import{l as v,b as y}from"./p-1ff061ae.js";import"./p-8fc84c2d.js";import{l as j,p as _}from"./p-1cce98ff.js";import{p as g,v as b,f as S}from"./p-e7501203.js";import{p as T}from"./p-00f58755.js";import{d as w}from"./p-c5691699.js";import"./p-8a0d1aa6.js";import"./p-7e1b53f9.js";import{a as W}from"./p-abd34d7c.js";import"./p-e2c62b7c.js";import"./p-dc697c54.js";import"./p-a1a69fdc.js";import"./p-754df0ae.js";import"./p-89accc4e.js";import"./p-4a36891c.js";import{t as O}from"./p-48626aa9.js";import{e as R}from"./p-a747e129.js";import{o as B}from"./p-f53b64f4.js";import{s as D}from"./p-b9c578c1.js";import"./p-c3d3c04d.js";import"./p-2500de92.js";import"./p-311069c2.js";import"./p-6501f469.js";import"./p-0913eaf8.js";import{a as L}from"./p-65bdc41d.js";import{f as G,u as I,H as M}from"./p-8adfd900.js";import"./p-279240d1.js";const A=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let $=class extends(O(G(D(B(j(w(W(I(T(v(L(R(y))))))))))))){constructor(...e){super(...e),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(r){const s=n(r)?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},r).then((()=>this._fetchService(s)),(()=>this._fetchService(s)))),e(this)}get attributionDataUrl(){var e;const r=null==(e=this.parsedUrl)?void 0:e.path.toLowerCase();return r&&this._getDefaultAttribution(this._getMapName(r))}readSpatialReference(e,s){return(e=e||s.tileInfo&&s.tileInfo.spatialReference)&&r.fromJSON(e)}writeSublayers(e,r,s,i){if(!this.loaded||!e)return;const t=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray(),a=[],o={writeSublayerStructure:!1,...i};t.forEach((e=>{const r=e.write({},o);a.push(r)})),a.some((e=>Object.keys(e).length>1))&&(r.layers=a)}get tileServers(){return this._getDefaultTileServers(this.parsedUrl.path)}castTileServers(e){return Array.isArray(e)?e.map((e=>s(e).path)):null}fetchTile(e,r,s,t={}){const{signal:a,timestamp:o}=t,n=this.getTileUrl(e,r,s),l={responseType:"image",signal:a};return null!=o&&(l.query={_ts:t.timestamp}),i(n,l).then((e=>e.data))}getTileUrl(e,r,s){const i=t({...this.parsedUrl.query,blankTile:!(!this.tilemapCache&&this.supportsBlankTile)&&null,...this.customParameters}),a=this.tileServers;return`${a&&a.length?a[r%a.length]:this.parsedUrl.path}/tile/${e}/${r}/${s}${i?"?"+i:""}`}_fetchService(e){return a(((r,s)=>{if(this.sourceJSON){if(null!=this.sourceJSON.bandCount&&null!=this.sourceJSON.pixelSizeX)throw new o("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void r({data:this.sourceJSON})}if(!this.parsedUrl)throw new o("tile-layer:undefined-url","layer's url is not defined");const t=g(this.parsedUrl.path);if(n(t)&&"ImageServer"===t.serverType)throw new o("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");i(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters},responseType:"json",signal:e}).then(r,s)})).then((r=>{if(r.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl}),10.1===this.version&&!b(this.url))return this._fetchServerVersion(this.url,e).then((e=>{this.read({currentVersion:e})})).catch((()=>{}))}))}_fetchServerVersion(e,r){if(!S(e))return l();const s=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return i(s,{query:{f:"json",...this.customParameters},responseType:"json",signal:r}).then((e=>{if(e.data&&e.data.currentVersion)return e.data.currentVersion;throw new o("tile-layer:version-not-available")}))}_getMapName(e){const r=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/mapserver/i);return r&&r[2]}_getDefaultAttribution(e){if(!e)return;let r;e=e.toLowerCase();for(let s=0,i=A.length;s<i;s++)if(r=A[s],r.toLowerCase().indexOf(e)>-1)return p("//static.arcgis.com/attribution/"+r)}_getDefaultTileServers(e){const r=-1!==e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i),s=-1!==e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i);return r||s?[e,e.replace(r?/server\.arcgisonline/i:/services\.arcgisonline/i,r?"services.arcgisonline":"server.arcgisonline")]:[]}};c([d({readOnly:!0,dependsOn:["parsedUrl"]})],$.prototype,"attributionDataUrl",null),c([d({type:["show","hide","hide-children"]})],$.prototype,"listMode",void 0),c([d({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],$.prototype,"isReference",void 0),c([d({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],$.prototype,"operationalLayerType",void 0),c([d({type:Boolean})],$.prototype,"resampling",void 0),c([d()],$.prototype,"sourceJSON",void 0),c([d({type:r})],$.prototype,"spatialReference",void 0),c([u("spatialReference",["spatialReference","tileInfo"])],$.prototype,"readSpatialReference",null),c([d({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],$.prototype,"path",void 0),c([d({readOnly:!0})],$.prototype,"sublayers",void 0),c([h("sublayers",{layers:{type:[M]}})],$.prototype,"writeSublayers",null),c([d({json:{read:!1,write:!1}})],$.prototype,"popupEnabled",void 0),c([d({dependsOn:["parsedUrl"]})],$.prototype,"tileServers",null),c([m("tileServers")],$.prototype,"castTileServers",null),c([d({readOnly:!0,json:{read:!1}})],$.prototype,"type",void 0),c([d(_)],$.prototype,"url",void 0),$=c([f("esri.layers.TileLayer")],$);var C=$;export default C;