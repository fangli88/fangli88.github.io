import"./p-476cf7c4.js";import{a0 as r,m as e,ap as t}from"./p-ab028778.js";import{p as a}from"./p-f364f6e6.js";async function n(a=null,n){if(r.geometryServiceUrl)return new((await import("./p-b6a88f2a.js")).default)({url:r.geometryServiceUrl});if(!a)throw new e("internal:geometry-service-url-not-configured");let i;if(i="portal"in a?a.portal||t.getDefault():a,await i.load({signal:n}),i.helperServices&&i.helperServices.geometry&&i.helperServices.geometry.url)return new((await import("./p-b6a88f2a.js")).default)({url:i.helperServices.geometry.url});throw new e("internal:geometry-service-url-not-configured")}async function i(r,t,i=null,o){const s=await n(i,o),c=new a;c.geometries=[r],c.outSpatialReference=t;const f=await s.project(c,{signal:o});if(f&&Array.isArray(f)&&1===f.length)return f[0];throw new e("internal:geometry-service-projection-failed")}export{n as create,i as projectGeometry}