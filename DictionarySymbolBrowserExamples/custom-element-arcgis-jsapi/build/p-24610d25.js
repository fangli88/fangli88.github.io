import{D as t,E as e,I as s,K as i,L as r,Z as n,bQ as o,bR as a,k as h,z as u,b as c}from"./p-ab028778.js";import{i as l,Q as d}from"./p-fd91cc88.js";import{i as f}from"./p-77b9029e.js";import p from"./p-f16fbea1.js";import{D as y,R as m}from"./p-e2c62b7c.js";import{o as b}from"./p-8509ef38.js";import{c as I,u as x}from"./p-4b9da55e.js";import{t as j,c as v,y as g,f as G,S as w,p as R}from"./p-05d2fbdb.js";function P(t,e){return e}function F(t,e,s,i){switch(s){case 0:return N(t,e+i,0);case 1:return"lowerLeft"===t.originPosition?N(t,e+i,1):function({translate:t,scale:e},s,i){return t[i]-s*e[i]}(t,e+i,1)}}function O(t,e,s,i){switch(s){case 2:return N(t,e,2);default:return F(t,e,s,i)}}function k(t,e,s,i){switch(s){case 2:return N(t,e,3);default:return F(t,e,s,i)}}function S(t,e,s,i){switch(s){case 3:return N(t,e,3);default:return O(t,e,s,i)}}function N({translate:t,scale:e},s,i){return t[i]+s*e[i]}class M{constructor(t){this.options=t,this.geometryTypes=["esriGeometryPoint","esriGeometryMultipoint","esriGeometryPolyline","esriGeometryPolygon"],this.previousCoordinate=[0,0],this.transform=null,this.applyTransform=P,this.lengths=[],this.currentLengthIndex=0,this.toAddInCurrentPath=0,this.vertexDimension=0,this.coordinateBuffer=null,this.coordinateBufferPtr=0,this.AttributesConstructor=function(){}}createFeatureResult(){return{fields:[],features:[]}}finishFeatureResult(t){if(this.options.applyTransform&&(t.transform=null),this.AttributesConstructor=function(){},this.coordinateBuffer=null,this.lengths.length=0,!t.hasZ)return;const e=b(t.geometryType,this.options.sourceSpatialReference,t.spatialReference);if(e)for(const s of t.features)e(s.geometry)}createSpatialReference(){return{}}addField(t,e){t.fields.push(e);const s=t.fields.map((t=>t.name));this.AttributesConstructor=function(){for(const t of s)this[t]=null}}addFeature(t,e){t.features.push(e)}prepareFeatures(t){switch(this.transform=t.transform,this.options.applyTransform&&t.transform&&(this.applyTransform=this.deriveApplyTransform(t)),this.vertexDimension=2,t.hasZ&&this.vertexDimension++,t.hasM&&this.vertexDimension++,t.geometryType){case"esriGeometryPoint":this.addCoordinate=(t,e,s)=>this.addCoordinatePoint(t,e,s),this.createGeometry=t=>this.createPointGeometry(t);break;case"esriGeometryPolygon":this.addCoordinate=(t,e,s)=>this.addCoordinatePolygon(t,e,s),this.createGeometry=t=>this.createPolygonGeometry(t);break;case"esriGeometryPolyline":this.addCoordinate=(t,e,s)=>this.addCoordinatePolyline(t,e,s),this.createGeometry=t=>this.createPolylineGeometry(t);break;case"esriGeometryMultipoint":this.addCoordinate=(t,e,s)=>this.addCoordinateMultipoint(t,e,s),this.createGeometry=t=>this.createMultipointGeometry(t)}}createFeature(){return this.lengths.length=0,this.currentLengthIndex=0,this.previousCoordinate[0]=0,this.previousCoordinate[1]=0,this.coordinateBuffer=null,this.coordinateBufferPtr=0,{attributes:new this.AttributesConstructor}}addLength(t,e,s){0===this.lengths.length&&(this.toAddInCurrentPath=e),this.lengths.push(e)}addQueryGeometry(t,e){const{queryGeometry:s,queryGeometryType:i}=e,r=l(s.clone(),s,!1,!1,this.transform),n=d(r,i,!1,!1);t.queryGeometryType=i,t.queryGeometry={...n}}createPointGeometry(t){const e={x:0,y:0,spatialReference:t.spatialReference};return t.hasZ&&(e.z=0),t.hasM&&(e.m=0),e}addCoordinatePoint(t,e,s){switch(e=this.applyTransform(this.transform,e,s,0),s){case 0:t.x=e;break;case 1:t.y=e;break;case 2:"z"in t?t.z=e:t.m=e;break;case 3:t.m=e}}transformPathLikeValue(t,e){let s=0;return e<=1&&(s=this.previousCoordinate[e],this.previousCoordinate[e]+=t),this.applyTransform(this.transform,t,e,s)}addCoordinatePolyline(t,e,s){this.dehydratedAddPointsCoordinate(t.paths,e,s)}addCoordinatePolygon(t,e,s){this.dehydratedAddPointsCoordinate(t.rings,e,s)}addCoordinateMultipoint(t,e,s){0===s&&t.points.push([]);const i=this.transformPathLikeValue(e,s);t.points[t.points.length-1].push(i)}createPolygonGeometry(t){return{rings:[[]],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}createPolylineGeometry(t){return{paths:[[]],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}createMultipointGeometry(t){return{points:[],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}dehydratedAddPointsCoordinate(t,e,s){0===s&&0==this.toAddInCurrentPath--&&(t.push([]),this.toAddInCurrentPath=this.lengths[++this.currentLengthIndex]-1,this.previousCoordinate[0]=0,this.previousCoordinate[1]=0);const i=this.transformPathLikeValue(e,s),r=t[t.length-1];0===s&&(this.coordinateBufferPtr=0,this.coordinateBuffer=new Array(this.vertexDimension),r.push(this.coordinateBuffer)),this.coordinateBuffer[this.coordinateBufferPtr++]=i}deriveApplyTransform(t){const{hasZ:e,hasM:s}=t;return e&&s?S:e?O:s?k:F}}var q;const C={1:{id:1,rotation:0,mirrored:!1},2:{id:2,rotation:0,mirrored:!0},3:{id:3,rotation:180,mirrored:!1},4:{id:4,rotation:180,mirrored:!0},5:{id:5,rotation:-90,mirrored:!0},6:{id:6,rotation:90,mirrored:!1},7:{id:7,rotation:90,mirrored:!0},8:{id:8,rotation:-90,mirrored:!1}};let Q=q=class extends r{constructor(t){super(t),this.contentType=null,this.exifInfo=null,this.id=null,this.globalId=null,this.keywords=null,this.name=null,this.parentGlobalId=null,this.parentObjectId=null,this.size=null,this.url=null}get orientationInfo(){const{exifInfo:t}=this,e=function(t){const{exifInfo:e,exifName:s,tagName:i}=t;if(!e||!s||!i)return null;const r=e.find((t=>t.name===s));return r?function(t){const{tagName:e,tags:s}=t;if(!s||!e)return null;const i=s.find((t=>t.name===e));return i&&i.value||null}({tagName:i,tags:r.tags}):null}({exifName:"Exif IFD0",tagName:"Orientation",exifInfo:t});return C[e]||null}clone(){return new q({contentType:this.contentType,exifInfo:this.exifInfo,id:this.id,globalId:this.globalId,keywords:this.keywords,name:this.name,parentGlobalId:this.parentGlobalId,parentObjectId:this.parentObjectId,size:this.size,url:this.url})}};t([e({type:String})],Q.prototype,"contentType",void 0),t([e()],Q.prototype,"exifInfo",void 0),t([e({readOnly:!0,dependsOn:["exifInfo"]})],Q.prototype,"orientationInfo",null),t([e({type:s})],Q.prototype,"id",void 0),t([e({type:String})],Q.prototype,"globalId",void 0),t([e({type:String})],Q.prototype,"keywords",void 0),t([e({type:String})],Q.prototype,"name",void 0),t([e({json:{read:!1}})],Q.prototype,"parentGlobalId",void 0),t([e({json:{read:!1}})],Q.prototype,"parentObjectId",void 0),t([e({type:s})],Q.prototype,"size",void 0),t([e({json:{read:!1}})],Q.prototype,"url",void 0),Q=q=t([i("esri.layers.support.AttachmentInfo")],Q);var T=Q;function A(t){const e=t.toJSON();return e.attachmentTypes&&(e.attachmentTypes=e.attachmentTypes.join(",")),e.keywords&&(e.keywords=e.keywords.join(",")),e.globalIds&&(e.globalIds=e.globalIds.join(",")),e.objectIds&&(e.objectIds=e.objectIds.join(",")),e.size&&(e.size=e.size.join(",")),e}function Z(t,e){const s={};for(const i of t){const{parentObjectId:t,parentGlobalId:r,attachmentInfos:n}=i;for(const i of n){const{id:n}=i,h=o(a(`${e}/${t}/attachments/${n}`)),u=T.fromJSON(i);u.set({url:h,parentObjectId:t,parentGlobalId:r}),s[t]?s[t].push(u):s[t]=[u]}}return s}function z(t,e,s){let i={query:j({...t.query,f:"json",...A(e)})};return s&&(i={...s,...i,query:{...s.query,...i.query}}),n(t.path+"/queryAttachments",i)}function D(t,e){const s=t.toJSON();return s.objectIds&&(s.objectIds=s.objectIds.join(",")),s.orderByFields&&(s.orderByFields=s.orderByFields.join(",")),!s.outFields||null!=e&&e.returnCountOnly?delete s.outFields:s.outFields=-1!==s.outFields.indexOf("*")?"*":s.outFields.join(","),s.outSpatialReference&&(s.outSR=s.outSR.wkid||JSON.stringify(s.outSR.toJSON()),delete s.outSpatialReference),s.dynamicDataSource&&(s.layer=JSON.stringify({source:s.dynamicDataSource}),delete s.dynamicDataSource),s}async function L(t,e,s={},i){const r=j({...t.query,f:"json",...i,...D(e,i)});return n(t.path+"/queryRelatedRecords",{...s,query:{...s.query,...r}})}let E=class extends f{constructor(t){super(t),this.dynamicDataSource=null,this.format="json",this.gdbVersion=null,this.sourceSpatialReference=null}execute(t,e){return this.executeJSON(t,e).then((t=>p.fromJSON(t)))}async executeJSON(t,e){var s;const i={...this.requestOptions,...e},r=this._normalizeQuery(t),n=null!=(null==(s=t.outStatistics)?void 0:s[0]),o=h("featurelayer-pbf-statistics"),a=!n||o;let u;if("pbf"===this.format&&a){const e=!r.quantizationParameters;try{u=(await v(this.parsedUrl,r,new M({sourceSpatialReference:this.sourceSpatialReference,applyTransform:e}),i)).data}catch(t){if("query:parsing-pbf"!==t.name)throw t;this.format="json"}}return"json"!==this.format&&a||(u=(await g(this.parsedUrl,r,this.sourceSpatialReference,i)).data),this._normalizeFields(u.fields),u}executeForCount(t,e){return G(this.parsedUrl,this._normalizeQuery(t),{...this.requestOptions,...e}).then((t=>t.data.count))}executeForExtent(t,e){return w(this.parsedUrl,this._normalizeQuery(t),{...this.requestOptions,...e}).then((t=>({count:t.data.count,extent:u.fromJSON(t.data.extent)})))}executeForIds(t,e){return R(this.parsedUrl,this._normalizeQuery(t),{...this.requestOptions,...e}).then((t=>t.data.objectIds))}executeRelationshipQuery(t,e){return t=I.from(t),(this.gdbVersion||this.dynamicDataSource)&&((t=t.clone()).gdbVersion=t.gdbVersion||this.gdbVersion,t.dynamicDataSource=t.dynamicDataSource||this.dynamicDataSource),async function(t,e,s){const i=await L(t,e,s),r=i.data,n=r.geometryType,o=r.spatialReference,a={};for(const t of r.relatedRecordGroups){const e={fields:void 0,objectIdFieldName:void 0,geometryType:n,spatialReference:o,hasZ:!!r.hasZ,hasM:!!r.hasM,features:t.relatedRecords};if(null!=t.objectId)a[t.objectId]=e;else for(const s in t)t.hasOwnProperty(s)&&"relatedRecords"!==s&&(a[t[s]]=e)}return{...i,data:a}}(this.parsedUrl,t,{...this.requestOptions,...e}).then((t=>{const e=t.data,s={};return Object.keys(e).forEach((t=>s[t]=p.fromJSON(e[t]))),s}))}executeRelationshipQueryForCount(t,e){return t=I.from(t),(this.gdbVersion||this.dynamicDataSource)&&((t=t.clone()).gdbVersion=t.gdbVersion||this.gdbVersion,t.dynamicDataSource=t.dynamicDataSource||this.dynamicDataSource),async function(t,e,s){const i=await L(t,e,s,{returnCountOnly:!0}),r=i.data,n={};for(const t of r.relatedRecordGroups)null!=t.objectId&&(n[t.objectId]=t.count);return{...i,data:n}}(this.parsedUrl,t,{...this.requestOptions,...e}).then((t=>t.data))}executeAttachmentQuery(t,e){return z(this.parsedUrl,x.from(t),{...this.requestOptions,...e}).then((t=>Z(t.data.attachmentGroups,this.parsedUrl.path)))}_normalizeQuery(t){const e=m.from(t);if(!this.gdbVersion&&!this.dynamicDataSource)return e;const s=e===t?e.clone():e;return s.gdbVersion=t.gdbVersion||this.gdbVersion,s.dynamicDataSource=t.dynamicDataSource?y.from(t.dynamicDataSource):this.dynamicDataSource,s}_normalizeFields(t){if(c(this.fieldsIndex)&&c(t))for(const e of t){const t=this.fieldsIndex.get(e.name);t&&Object.assign(e,t.toJSON())}}};t([e({type:y})],E.prototype,"dynamicDataSource",void 0),t([e()],E.prototype,"fieldsIndex",void 0),t([e()],E.prototype,"format",void 0),t([e()],E.prototype,"gdbVersion",void 0),t([e()],E.prototype,"sourceSpatialReference",void 0),E=t([i("esri.tasks.QueryTask")],E);var J=E;export{J as O,Z as a,T as l}