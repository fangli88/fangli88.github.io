import"./p-476cf7c4.js";import{l as t,D as e,E as i,z as n,bZ as s,y as r,K as a,Z as l,b as o,aN as h,w as u,L as c,m as f,bh as d,be as p,ab as m,h as y,i as w,U as g,T as v,W as x,d as M,ah as I,al as b,a2 as R,aR as T,I as S,J as k,bL as j,F as C}from"./p-ab028778.js";import"./p-2ef6e039.js";import{y as F}from"./p-7575e94f.js";import"./p-098cc742.js";import"./p-73b795c3.js";import"./p-e07a8dfe.js";import"./p-b92ca348.js";import"./p-3cd8f347.js";import"./p-c6c7c9c2.js";import P from"./p-f16fbea1.js";import{l as D,b as B}from"./p-1ff061ae.js";import"./p-8fc84c2d.js";import{p as N,l as _,c as A}from"./p-1cce98ff.js";import{x as E}from"./p-e7501203.js";import{d as L}from"./p-c5691699.js";import{x as O}from"./p-8a0d1aa6.js";import{n as H,L as z}from"./p-7e1b53f9.js";import"./p-f3cc8f75.js";import"./p-dc697c54.js";import"./p-754df0ae.js";import"./p-89accc4e.js";import{t as $}from"./p-48626aa9.js";import{o as G}from"./p-f53b64f4.js";import{s as W}from"./p-b9c578c1.js";import{a as U}from"./p-0913eaf8.js";import"./p-abda1e64.js";import"./p-a8e713de.js";import"./p-fb40af74.js";import{D as J,H as q,J as V,O as Y}from"./p-4f43bb64.js";import"./p-920b2088.js";import"./p-49a8c628.js";import{R as X,c as K,a as Z,U as Q,r as tt,b as et,A as it,o as nt,d as st,I as rt,m as at,u as lt,e as ot,y as ht,p as ut,S as ct,g as ft,w as dt}from"./p-f98f4081.js";import{a as pt,o as mt,x as yt,T as wt,y as gt,f as vt,u as xt,l as Mt}from"./p-18375c8b.js";const It=t.getLogger("esri.layers.mixins.ImageryTileMixin"),bt=t=>{let u=class extends t{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set multidimensionalDefinition(t){this.raster&&(this._sliceId=this.raster.getSliceIndex(t)),this._set("multidimensionalDefinition",t)}set url(t){this._set("url",E(t,It))}set renderer(t){this._set("renderer",t),this.updateRenderer()}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const t=this._rasterJobHandler.instance;t&&(this.symbolizer.rendererJSON=this.renderer.toJSON(),this.symbolizer.bind(),await t.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(t,e){const i=t&&t.pixelBlock;if(!(i&&i.pixels&&i.pixels.length>0))return null;let n;this.updateRenderer();const s=this._rasterJobHandler.instance,{bandIds:r}=this;return n=s?await s.symbolize({...t,simpleStretchParams:e,bandIds:r}):this.symbolizer.symbolize({...t,simpleStretchParams:e,bandIds:r}),n}getTileUrl(t,e,i){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${t}/${e}/${i}`:""}getCompatibleTileInfo(t,e){if(!this.loaded)return null;const i=h(t);return O.create({size:256,spatialReference:t,origin:i?{x:i.origin[0],y:i.origin[1]}:{x:e.xmin,y:e.ymax}})}getCompatibleFullExtent(t){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(t)||(this._compatibleFullExtent=this.raster.computeExtent(t)),this._compatibleFullExtent):null}async fetchTile(t,e,i,n={}){if(n.requestAsImageElement){const s=this.getTileUrl(t,e,i);return l(s,{responseType:"image",query:{sliceId:this._sliceId,_ts:n.timestamp},signal:n.signal}).then((t=>t.data))}return await this._initJobHandler(),this.multidimensionalDefinition&&(n={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:this._sliceId,...n}),"raster-shaded-relief"===this.renderer.type&&(n={buffer:{cols:1,rows:1},...n}),this.raster.fetchTile(t,e,i,n)}async fetchPixels(t,e,i,n){return await this._initJobHandler(),this.multidimensionalDefinition&&(n={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:this._sliceId,...n}),this.raster.fetchPixels(t,e,i,n)}identify(t,e={}){return this.multidimensionalDefinition&&!e.multidimensionalDefinition&&(e={...e,multidimensionalDefinition:this.multidimensionalDefinition}),this.raster.identify(t,e)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}_configDefaultSettings(){this._configDefaultInterpolation(),this._configDefaultSlice(),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const t=new vt;return this._rasterJobHandler.connectionPromise=t.initialize().then((()=>{this._rasterJobHandler.instance=t,this.raster.rasterJobHandler=t,this.renderer&&this.updateRenderer()})).catch((()=>null)),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(null==this.interpolation){var t;const e=yt(this.rasterInfo,this.raster.tileType,null==(t=this.sourceJSON)?void 0:t.defaultResamplingMethod);this._set("interpolation",e)}}_configDefaultSlice(){const{multidimensionalInfo:t}=this.raster.rasterInfo;if(o(t)){if(!this.multidimensionalDefinition){const e=t.variables[0],i=[];e.dimensions.forEach((t=>{i.push(new pt({variableName:e.name,dimensionName:t.name,values:t.hasRegularIntervals?t.extent[0]:t.values[0],isSlice:!0}))})),this.multidimensionalDefinition=i}this._sliceId=this.raster.getSliceIndex(this.multidimensionalDefinition)}}_configDefaultRenderer(){const t=this.raster.rasterInfo;var e;this.bandIds||(this.bandIds=wt(t)),this.renderer||(this.renderer=gt(t,{bandIds:this.bandIds,variableName:null==(e=this.multidimensionalDefinition)?void 0:e[0].variableName})),this.symbolizer?(this.symbolizer.rendererJSON=this.renderer.toJSON(),this.symbolizer.rasterInfo=t):this.symbolizer=new X({rendererJSON:this.renderer.toJSON(),rasterInfo:t}),this.symbolizer.bind()||It.warn("imagery-tile-mixin","The given renderer is not supported by the layer.")}};return e([i()],u.prototype,"_cachedRendererJson",void 0),e([i()],u.prototype,"_sliceId",void 0),e([i()],u.prototype,"_compatibleFullExtent",void 0),e([i()],u.prototype,"_rasterJobHandler",void 0),e([i()],u.prototype,"bandIds",void 0),e([i()],u.prototype,"copyright",void 0),e([i({type:n}),s("rasterInfo.extent")],u.prototype,"fullExtent",void 0),e([i()],u.prototype,"interpolation",void 0),e([i({type:[pt]})],u.prototype,"multidimensionalDefinition",null),e([i()],u.prototype,"raster",void 0),e([i({readOnly:!0}),s("raster.rasterInfo")],u.prototype,"rasterInfo",void 0),e([i()],u.prototype,"sourceJSON",void 0),e([i({type:r}),s("rasterInfo.spatialReference")],u.prototype,"spatialReference",void 0),e([i({type:O,dependsOn:["rasterInfo"]}),s("rasterInfo.storageInfo.tileInfo")],u.prototype,"tileInfo",void 0),e([i(N)],u.prototype,"url",null),e([i({types:mt})],u.prototype,"renderer",null),e([i()],u.prototype,"symbolizer",void 0),u=e([a("esri.layers.ImageryTileMixin")],u),u};let Rt=class extends c{constructor(){super(...arguments),this.blockWidth=void 0,this.blockHeight=void 0,this.compression=null,this.origin=null,this.firstPyramidLevel=null,this.maximumPyramidLevel=null,this.pyramidScalingFactor=2,this.pyramidBlockWidth=null,this.pyramidBlockHeight=null,this.isVirtualTileInfo=!1,this.tileInfo=null,this.blockBoundary=null}};e([i({type:Number,json:{write:!0}})],Rt.prototype,"blockWidth",void 0),e([i({type:Number,json:{write:!0}})],Rt.prototype,"blockHeight",void 0),e([i({type:String,json:{write:!0}})],Rt.prototype,"compression",void 0),e([i({type:u,json:{write:!0}})],Rt.prototype,"origin",void 0),e([i({type:Number,json:{write:!0}})],Rt.prototype,"firstPyramidLevel",void 0),e([i({type:Number,json:{write:!0}})],Rt.prototype,"maximumPyramidLevel",void 0),e([i()],Rt.prototype,"pyramidScalingFactor",void 0),e([i({type:Number,json:{write:!0}})],Rt.prototype,"pyramidBlockWidth",void 0),e([i({type:Number,json:{write:!0}})],Rt.prototype,"pyramidBlockHeight",void 0),e([i({type:Boolean,json:{write:!0}})],Rt.prototype,"isVirtualTileInfo",void 0),e([i({json:{write:!0}})],Rt.prototype,"tileInfo",void 0),e([i()],Rt.prototype,"blockBoundary",void 0),Rt=e([a("esri.layers.support.RasterStorageInfo")],Rt);var Tt=Rt;const St=function(t,e){const i=(t.isWGS84||t.isWebMercator)&&(e.isWGS84||e.isWebMercator);return!(t.equals(e)||i)};function kt(t,e,i,s=null){if(t.spatialReference.equals(e))return t;const r=St(t.spatialReference,e);if(r&&!J())throw new f("rasterprojectionhelper-projectResolution","projection engine is not loaded");const a=i.center,l=new n({xmin:a.x-t.x/2,xmax:a.x+t.x/2,ymin:a.y-t.y/2,ymax:a.y+t.y/2,spatialReference:t.spatialReference}),o=r?Y(l,e,s):d(l,e);return null==o?null:{x:o.xmax-o.xmin,y:o.ymax-o.ymin}}function jt(t,e=.01){return p(t)?e/p(t):0}function Ct(t,e,i=null,n=!0){const s=t.spatialReference;if(s.equals(e))return t;const r=St(s,e);if(r&&!J())throw new f("rasterprojectionhelper-projectResolution","projection engine is not loaded");const a=r?Y(t,e,i):d(t,e);if(a&&n&&e.isGeographic){var l,o;const[e,i]=s.isWebMercator?h(s).origin:null!=(l=null==(o=h(s))?void 0:o.valid)?l:[],n=jt(s);n&&null!=e&&null!=i&&(Math.abs(t.x-e)<n&&Math.abs(180-a.x)<5e-4?a.x-=360:Math.abs(t.x-i)<n&&Math.abs(180+a.x)<5e-4&&(a.x+=360))}return a}function Ft(t,e,i=null,n=!0){var s,r,a,l;const o=t.spatialReference;if(o.equals(e))return t;const c=St(o,e);if(c&&!J())throw new f("rasterprojectionhelper-projectExtent","projection engine is not loaded");const p=c?Y(t,e,i):d(t,e);let[m,y]=null!=(s=null==(r=h(o))?void 0:r.origin)?s:[];if(p&&n&&o.isWebMercator&&e.isGeographic&&null!=m&&null!=y){const n=.001,s=1e3;if(Math.abs(t.xmin-m)<n&&Math.abs(y-t.xmax)>s&&Math.abs(180-p.xmax)<5e-4){p.xmin=-180;const n=[];n.push(new u(t.xmax,t.ymin,o)),n.push(new u(t.xmax,(t.ymin+t.ymax)/2,o)),n.push(new u(t.xmax,t.ymax,o));const s=n.map((t=>Ct(t,e,i))).filter((t=>!isNaN(null==t?void 0:t.x))).map((t=>t.x));p.xmax=Math.max.apply(null,s)}if(Math.abs(t.xmax-y)<n&&Math.abs(m-t.xmin)>s&&Math.abs(180+p.xmin)<5e-4){p.xmax=180;const n=[];n.push(new u(t.xmin,t.ymin,o)),n.push(new u(t.xmin,(t.ymin+t.ymax)/2,o)),n.push(new u(t.xmin,t.ymax,o));const s=n.map((t=>Ct(t,e,i))).filter((t=>!isNaN(null==t?void 0:t.x))).map((t=>t.x));p.xmin=Math.min.apply(null,s)}}[m,y]=e.isWebMercator?h(e).origin:null!=(a=null==(l=h(e))?void 0:l.valid)?a:[];const w=jt(e);return w&&null!=m&&null!=y&&(Math.abs(p.xmin-m)<w&&(p.xmin=m),Math.abs(p.xmax-y)<w&&(p.xmax=y)),p}function Pt(t,e,i,n=null,s=null,r=!1,a=[32,32]){var l,o;if(St(t.spatialReference,e.spatialReference)&&!J())throw new f("rasterprojectionhelper-projectResolution","projection engine is not loaded");if(!(t&&e&&i))return null;const{xmin:c,ymin:d,xmax:p,ymax:m}=t,y=t.spatialReference,w=e.spatialReference,[g,v]=null!=(l=null==(o=h(y))?void 0:o.valid)?l:[],x={x:a[0]*i.x,y:a[1]*i.y},M={cols:Math.ceil((p-c)/x.x-.1)+1,rows:Math.ceil((m-d)/x.y-.1)+1},I=x.x,b=x.y,R=[];let T,S=!1;for(let t=0;t<M.cols;t++){const i=[];for(let a=0;a<M.rows;a++){let l=Ct(new u({x:c+I*t,y:m-b*a,spatialReference:y}),w,n);s&&(l=s.inverseTransform(l)),i.push(l),t>0&&r&&l&&T[a]&&null!=g&&l.x<T[a].x&&(l.x+=v-g),l?(R.push((l.x-e.xmin)/(e.xmax-e.xmin)),R.push((e.ymax-l.y)/(e.ymax-e.ymin))):(R.push(NaN),R.push(NaN),S=!0)}T=i}const k=function(t,e){const i=(t[1]+t[5]+t[4*e.rows+1]+t[4*e.rows+5])/4;return[Math.abs((t[0]+t[4]+t[4*e.cols]+t[4*e.cols+4])/4-t[2*e.rows+2]),Math.abs(i-t[2*e.rows+3])]}(R,M),j=new Float32Array((M.cols-1)*(M.rows-1)*2*6),C=new Float32Array([-0,-1,1,-1,1,-0,1,-0,-0]),F=new Float32Array([-1,1,0,0,-1,1,1,0,0]);for(let t=0;t<M.cols-1;t++){for(let e=0;e<M.rows-1;e++){let i=t*M.rows*2+2*e;const n=R[i],s=R[i+1],r=R[i+2],a=R[i+3];i+=2*M.rows;const l=R[i],o=R[i+1],h=R[i+2],u=R[i+3];let c=0,f=12*(e*(M.cols-1)+t);for(let t=0;t<3;t++)j[f++]=C[c++]*n+C[c++]*r+C[c++]*h;c=0;for(let t=0;t<3;t++)j[f++]=C[c++]*s+C[c++]*a+C[c++]*u;c=0;for(let t=0;t<3;t++)j[f++]=F[c++]*n+F[c++]*l+F[c++]*h;c=0;for(let t=0;t<3;t++)j[f++]=F[c++]*s+F[c++]*o+F[c++]*u}if(S)for(let t=0;t<j.length;t++)isNaN(j[t])&&(j[t]=-1)}return{offsets:R,error:k,coefficients:j,spacing:a,size:[M.cols-1,M.rows-1]}}function Dt(t,e,i){const n=Math.log(t.x/e.pixelSize.x)/Math.LN2,s=Math.log(t.y/e.pixelSize.y)/Math.LN2,r=e.storageInfo.maximumPyramidLevel||0;let a="down"===i?Math.floor(Math.min(n,s)):"up"===i?Math.ceil(Math.max(n,s)):Math.round((n+s)/2),l=!1;a<0?a=0:a>r&&(l=a>r+3,a=r);const o=Math.pow(2,a);return{pyramidLevel:a,pyramidResolution:new u({x:o*e.nativePixelSize.x,y:o*e.nativePixelSize.y,spatialReference:e.spatialReference}),excessiveReading:l}}const Bt=new Map,Nt=new class{constructor(t=15e3,e=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=t,this._interval=Math.min(t,e)}decreaseRefCount(t,e){const i=t+"/"+e,n=this._cachedBlocks;if(n.has(i)){const t=n.get(i);return t.refCount--,t.refCount<=0&&(n.delete(i),t.controller&&t.controller.abort()),t.refCount}return 0}getBlock(t,e){const i=t+"/"+e,n=this._cachedBlocks;if(n.has(i)){const t=n.get(i);return t.ts=Date.now(),t.refCount++,n.delete(i),n.set(i,t),t.block}return null}putBlock(t,e,i,n=null){const s=this._cachedBlocks,r=t+"/"+e;if(s.has(r)){const t=s.get(r);t.ts=Date.now(),t.refCount++}else s.set(r,{block:i,ts:Date.now(),refCount:1,controller:n});this.trim(),this.updateTimer()}deleteBlock(t,e){const i=this._cachedBlocks,n=t+"/"+e;i.has(n)&&i.delete(n)}updateMaxSize(t){this._size=t,this.trim()}empty(){this._cachedBlocks.clear(),this.clearTimer()}getCurrentSize(){return this._cachedBlocks.size}updateTimer(){if(null!=this._timer)return;const t=this._cachedBlocks;this._timer=setInterval((()=>{const e=Array.from(t),i=Date.now();for(let n=0;n<e.length&&e[n][1].ts<=i-this._duration;n++)t.delete(e[n][0]);0===t.size&&this.clearTimer()}),this._interval)}trim(){const t=this._cachedBlocks;if(-1===this._size||this._size>=t.size)return;const e=Array.from(t);for(let i=0;i<e.length-this._size;i++)t.delete(e[i][0])}clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}};function _t(t,e){return null==e?t:`${t}?sliceId=${e}`}function At(t,e,i){if(!Bt.has(t))return null==e?Nt.decreaseRefCount(t,i):0;const n=Bt.get(t);if(null==n[e])return Nt.decreaseRefCount(t,i);const s=n[e].cache;if(s.has(i)){const t=s.get(i);if(t.refCount--,0===t.refCount){s.delete(i);for(let t=0;t<n.length;t++)n[t]&&n[t].cache.has(i)&&n[t].cache.delete(i);t.controller&&t.controller.abort()}return t.refCount}return 0}function Et(t,e,i){if(!Bt.has(t))return null==e?Nt.getBlock(t,i):null;const n=Bt.get(t);if(null==n[e]){for(let t=0;t<n.length;t++)if(n[t]&&n[t].cache.has(i)){const e=n[t].cache.get(i);return e.refCount++,e.block}return Nt.getBlock(t,i)}const s=n[e].cache;if(s.has(i)){const t=s.get(i);return t.refCount++,t.block}for(let t=0;t<n.length;t++)if(t!==e&&n[t]&&n[t]&&n[t].cache.has(i)){const e=n[t].cache.get(i);return e.refCount++,s.set(i,e),e.block}return null}function Lt(t,e,i,n,s=null){if(!Bt.has(t))return void(null==e&&Nt.putBlock(t,i,n,s));const r=Bt.get(t);if(null==r[e])return void Nt.putBlock(t,i,n,s);const a={refCount:1,block:n,isResolved:!1,isRejected:!1,controller:s};n.then((()=>a.isResolved=!0)).catch((()=>a.isRejected=!0)),r[e].cache.set(i,a)}function Ot(t,e,i){if(!Bt.has(t))return void(null==e&&Nt.deleteBlock(t,i));const n=Bt.get(t);null!=n[e]?n[e].cache.delete(i):Nt.deleteBlock(t,i)}let Ht=class extends(m(c)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const t=async function(){if(J()||!q())return null;await V()}();this.addResolvingPromise(t),await this.when()}normalizeCtorArgs(t){return t&&t.ioConfig&&(t={...t,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:O.create(),...t.ioConfig}}),t}set url(e){this._set("url",E(e,t.getLogger(this.declaredClass)))}async open(t){throw new f("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(t,e,i,n={}){var s;const{tileInfo:r}=n,a=r.lodAt(t),l=new u({x:a.resolution,y:a.resolution,spatialReference:r.spatialReference}),h=this.getTileExtent(l,e,i,r);return null!=(s=n.multidimensionalDefinition)&&s.length&&o(this.rasterInfo.multidimensionalInfo)&&null==n.sliceId&&(n={...n,sliceId:this.getSliceIndex(n.multidimensionalDefinition)||0}),this.fetchPixels(h,r.size[0],r.size[1],n)}async identify(t,e={}){const{spatialReference:i,extent:n}=this.rasterInfo,{datumTransformation:s}=e,r=Ct(t,i,s);if(!n.intersects(r))return{location:r,value:null};let a=0;if(e.srcResolution)a=Dt(e.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(a=await this.computeBestPyramidLevelForLocation(t,e),null==a)return{location:r,value:null};const l=this.identifyPixelLocation(r,a,null);if(null===l)return{location:r,value:null};const{row:h,col:u,rowOffset:c,colOffset:f}=l,d=_t(this.url,e.sliceId),p=`${a}/${h}/${u}`;let m=Et(d,null,p);o(m)||(m=this.fetchRawTile(a,h,u,e),Lt(d,null,p,m));const y=await m;if(!(y&&y.pixels&&y.pixels.length>0))return{location:r,value:null};const w=c*this.rasterInfo.storageInfo.blockHeight+f;return{location:r,value:!y.mask||y.mask[w]?y.pixels.map((t=>t[w])):null,pyramidLevel:a}}async fetchPixels(t,e,i,n={}){const s=t.clone().normalize(),r=this.rasterInfo.spatialReference,a=!(t=s[0]).spatialReference.equals(r),{datumTransformation:l}=n,o=new u({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/i,spatialReference:t.spatialReference}),h=n.srcResolution||(a?kt(o,r,t,l):o);if(!h)return null;const{pyramidLevel:c,pyramidResolution:f,excessiveReading:d}=Dt(h,this.rasterInfo,this.ioConfig.sampling);if(d)return null;const p=this.rasterInfo.storageInfo;let m=a?Ft(t,r,l):t;const y=M(this.rasterInfo.transform);if(y&&(m=y.inverseTransform(m)),null==m)return null;const w={x:Math.floor((m.xmin-p.origin.x)/f.x+.1),y:Math.floor((p.origin.y-m.ymax)/f.y+.1)},g=Math.ceil((m.xmax-m.xmin)/f.x-.1),v=Math.ceil((m.ymax-m.ymin)/f.y-.1);if(g/e>8||v/i>8)return null;const x=await this.fetchRawPixels(c,w,{width:g,height:v},n);if(!x)return null;if(!a&&1===x.pixelBlocks.length&&(c>0?p.pyramidBlockWidth:p.blockWidth)===e&&(c>0?p.pyramidBlockHeight:p.blockHeight)===i&&h.x===o.x&&h.y===o.y)return{extent:t,srcExtent:m,pixelBlock:x.pixelBlocks[0],transformGrid:null};const I=Pt(t,x.extent,o,l,y);let b;const R=!n.requestRawData,T={rows:I.spacing[0],cols:I.spacing[1]},{pixelBlocks:S,mosaicSize:k,isPartiallyFilled:j}=x;if(this.rasterJobHandler)b=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:S,srcMosaicSize:k,destDimension:R?{width:e,height:i}:null,coefs:R?I.coefficients:null,sampleSpacing:R?T:null,interpolation:n.interpolation},n);else{const t=K(S,k);b=R?Z(t,{width:e,height:i},I.coefficients,T,n.interpolation):t}return{srcExtent:m,pixelBlock:b,transformGrid:I,extent:t,isPartiallyFilled:j}}async fetchRawPixels(t,e,i,s){const{origin:r,blockBoundary:a}=this.rasterInfo.storageInfo,l=t>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,o=t>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight;let{x:h,y:u}=e,{width:c,height:f}=i;s.buffer&&(h-=s.buffer.cols,u-=s.buffer.rows,c+=2*s.buffer.cols,f+=2*s.buffer.rows);const d=Math.floor(h/l),p=Math.floor(u/o),m=Math.floor((h+c-1)/l),g=Math.floor((u+f-1)/o),v=a[t];if(!v)return null;const{minRow:x,minCol:M,maxCol:I,maxRow:b}=v;if(g<x||m<M||p>b||d>I)return null;const R=[];let T,S=!1;for(let e=p;e<=g;e++)for(let i=d;i<=m;i++)e>=x&&i>=M&&b>=e&&I>=i?(T=this._fetchRawTile(t,e,i,s),this.ioConfig.allowPartialFill&&(T=y((t=>{T.then((e=>t(e))).catch((()=>{S=!0,t(null)}))}))),R.push(T)):R.push(null);if(0===R.length)return null;const k=await w(R),j={height:(g-p+1)*l,width:(m-d+1)*o},{nativePixelSize:C,spatialReference:F}=this.rasterInfo,P=C.x*Math.pow(2,t),D=C.y*Math.pow(2,t);return{extent:new n({xmin:r.x+d*l*P,xmax:r.x+(m+1)*l*P,ymin:r.y-(g+1)*o*D,ymax:r.y-p*o*D,spatialReference:F}),pixelBlocks:k,mosaicSize:j,isPartiallyFilled:S}}async fetchRawTile(t,e,i,n){throw new f("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(t){return Ft(this.rasterInfo.extent,t)}decodePixelBlock(t,e){return!this.rasterJobHandler||e.useCanvas?Q(t,e):this.rasterJobHandler.decode({data:t,options:e})}async request(t,e,i){var n,s;const{customFetchParameters:r}=this.ioConfig,{range:a,query:o,headers:h}=e;i=null!=(n=null!=(s=i)?s:e.retryCount)?n:this.ioConfig.retryCount;const u=a?{Range:`bytes=${a.from}-${a.to}`}:null;try{return await l(t,{...e,query:{...o,...r},headers:{...h,...u}})}catch(n){if(i>0)return i--,this.request(t,e,i);throw n}}getSliceIndex(t){const{multidimensionalInfo:e}=this.rasterInfo;if(!o(e)||null==t||!t.length)return null;let i=0;const n=t[0].variableName;for(let s=0;s<e.variables.length;s++){const r=e.variables[s],a=r.dimensions;if(r.name!==n){i+=a.map((t=>this._getDimensionValuesCount(t))).reduce(((t,e)=>t+e));break}const l=a.map((t=>this._getDimensionValuesCount(t))),o=a.length;for(let e=0;e<o;e++){const n=t.filter((t=>t.dimensionName===a[e].name))[0];if(null==n)return null;const s=Array.isArray(n.values[0])?n.values[0][0]:n.values[0],r=this._getIndexFromDimensions(s,a[e]);if(-1===r)return null;l.shift(),i+=e===o-1?r:r*l.reduce(((t,e)=>t+e))}}return i}updateTileInfo(){const{storageInfo:t,spatialReference:e,extent:i,pixelSize:n}=this.rasterInfo;if(!t.tileInfo){const s=[],r=t.maximumPyramidLevel||0;let a=Math.max(n.x,n.y),l=1/.0254*96*a;for(let t=0;t<=r;t++)s.push({level:r-t,resolution:a,scale:l}),a*=2,l*=2;const o=new u({x:i.xmin,y:i.ymax,spatialReference:e});t.tileInfo=new O({origin:o,size:[t.blockWidth,t.blockHeight],spatialReference:e,lods:s}),t.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(t,e=512,i=512,n){const{width:s,height:r,nativeExtent:a,pixelSize:l,spatialReference:o}=t,h=new u({x:a.xmin,y:a.ymax,spatialReference:o});null==n&&(n=Math.max(0,Math.round(Math.log(Math.max(s,r))/Math.LN2-8)));const c=this._computeBlockBoundary(a,l,n,512,512);t.storageInfo=new Tt({blockWidth:e,blockHeight:i,pyramidBlockWidth:e,pyramidBlockHeight:i,origin:h,firstPyramidLevel:1,maximumPyramidLevel:n,blockBoundary:c})}async computeBestPyramidLevelForLocation(t,e={}){return 0}identifyPixelLocation(t,e,i){const{spatialReference:n,pixelSize:s,extent:r}=this.rasterInfo,{blockWidth:a,blockHeight:l,maximumPyramidLevel:o,pyramidScalingFactor:h,origin:u}=this.rasterInfo.storageInfo,c=Ct(t,n,i);if(!r.intersects(c))return null;if(e<0||e>o)return null;const f=Math.pow(h,e),d=(u.y-c.y)/(f*s.y)/l,p=(c.x-u.x)/(f*s.x)/a,m=Math.min(l-1,Math.floor((d-Math.floor(d))*l)),y=Math.min(a-1,Math.floor((p-Math.floor(p))*a));return{pyramidLevel:e,row:Math.floor(d),col:Math.floor(p),rowOffset:m,colOffset:y,srcLocation:c}}getTileExtent(t,e,i,s){const{origin:r,spatialReference:a}=s,l=s.size[0],o=s.size[1],h=r.x+i*l*t.x,u=r.y-e*o*t.y;return new n({xmin:h,xmax:h+l*t.x,ymin:u-o*t.y,ymax:u,spatialReference:a})}_computeBlockBoundary(t,e,i,n,s){let{x:r,y:a}=e;const l=t.xmin,o=t.ymax,h=[{minCol:Math.floor((t.xmin-l+.1*r)/n/r),maxCol:Math.floor((t.xmax-l-.1*r)/n/r),minRow:Math.floor((o-t.ymax+.1*a)/s/a),maxRow:Math.floor((o-t.ymin-.1*a)/s/a)}];if(i>0)for(let e=0;e<i;e++)r*=2,a*=2,h.push({minCol:Math.floor((t.xmin-l+.1*r)/n/r),maxCol:Math.floor((t.xmax-l-.1*r)/n/r),minRow:Math.floor((o-t.ymax+.1*a)/s/r),maxRow:Math.floor((o-t.ymin-.1*a)/s/r)});return h}_fetchRawTile(t,e,i,n){const s=this.rasterInfo.storageInfo.blockBoundary[t];if(!s)return g(null);const{minRow:r,minCol:a,maxCol:l,maxRow:h}=s;if(e<r||i<a||e>h||i>l)return g(null);const u=_t(this.url,n.sliceId),c=`${t}/${e}/${i}`;let f=Et(u,n.registryId,c);if(!o(f)){const s=v();f=this.fetchRawTile(t,e,i,{...n,signal:s.signal}),Lt(u,n.registryId,c,f,s),f.catch((()=>{Ot(u,n.registryId,c)}))}return n.signal&&x(n,(()=>{At(u,n.registryId,c)})),f}_getIndexFromDimensions(t,e){const{extent:i,interval:n,unit:s,values:r}=e;if(null!=r&&r.length)return Array.isArray(r[0])?r.findIndex((e=>e[0]<=t&&e[1]>=t)):r.indexOf(t);if(t>i[1])return-1;const a=i[0];let l=-1;if("ISO8601"===s){var o;switch((null==(o=e.intervalUnit)?void 0:o.toLowerCase())||"seconds"){case"seconds":l=Math.round((t-a)/1e3/n);break;case"minutes":l=Math.round((t-a)/6e4/n);break;case"hours":l=Math.round((t-a)/36e5/n);break;case"days":l=Math.round((t-a)/864e5/n);break;case"years":l=Math.round((new Date(t).getUTCFullYear()-new Date(a).getUTCFullYear())/n);break;case"decades":l=Math.round((new Date(t).getUTCFullYear()-new Date(a).getUTCFullYear())/10/n)}return l}return Math.round((t-a)/n)}_getDimensionValuesCount(t){const{extent:e,interval:i,unit:n,values:s}=t;let r=(null==s?void 0:s.length)||0;if(r)return r;const a=e[0];if(0===r&&"ISO8601"===n){var l;switch((null==(l=t.intervalUnit)?void 0:l.toLowerCase())||"seconds"){case"seconds":r=Math.round((e[1]-e[0])/1e3/i);break;case"minutes":r=Math.round((e[1]-e[0])/6e4/i);break;case"hours":r=Math.round((e[1]-e[0])/36e5/i);break;case"days":r=Math.round((e[1]-e[0])/864e5/i);break;case"years":r=Math.round((new Date(e[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/i);break;case"decades":r=Math.round((new Date(e[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/10/i)}return r}return Math.round((e[1]-e[0])/i)}};e([i(N)],Ht.prototype,"url",null),e([i({type:String,json:{write:!0}})],Ht.prototype,"datasetName",void 0),e([i({type:String,json:{write:!0}})],Ht.prototype,"datasetFormat",void 0),e([i()],Ht.prototype,"rasterInfo",void 0),e([i()],Ht.prototype,"ioConfig",void 0),e([i()],Ht.prototype,"sourceJSON",void 0),Ht=e([a("esri.layers.support.rasterDatasets.BaseRaster")],Ht);var zt=Ht;class $t{static get supportedVersions(){return[5]}static parse(t){const e=new DataView(t),i=3&e.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const n=e.getUint32(4,!0),s=e.getUint16(8,!0),r=e.getUint16(10,!0),a={version:i,recordCount:n,headerByteCount:s,recordByteCount:r};let l=32;const o=[],h=[];let u;if(3===i){for(;13!==e.getUint8(l);)u=String.fromCharCode(e.getUint8(l+11)).trim(),o.push({name:tt(new Uint8Array(t,l,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:e.getUint8(l+16)}),l+=32;if(l+=1,o.length>0)for(;h.length<n&&t.byteLength-l>r;){const i=[];32===e.getUint8(l)?(l+=1,o.forEach((e=>{if("C"===e.type)i.push(tt(new Uint8Array(t,l,e.length)).trim());else if("N"===e.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(t,l,e.length)).trim(),10));else if("F"===e.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(t,l,e.length)).trim()));else if("D"===e.type){const n=String.fromCharCode.apply(null,new Uint8Array(t,l,e.length)).trim();i.push(new Date(parseInt(n.substring(0,4),10),parseInt(n.substring(4,6),10)-1,parseInt(n.substring(6,8),10)))}l+=e.length})),h.push(i)):l+=r}}const c=function(t){const e=t.fields,i=t.records,n=e.some((t=>"oid"===t.name.toLowerCase()))?"OBJECTID":"OID",s=[{name:n,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map((t=>({name:t.name,type:"esriFieldType"+t.typeName,alias:t.name})))),r=s.map((t=>t.name)),a=[];let l=0,o=0;return i.forEach((t=>{const e={};for(e[n]=l++,o=1;o<r.length;o++)e[r[o]]=t[o-1];a.push({attributes:e})})),{displayFieldName:"",fields:s,features:a}}({fields:o,records:h});return{header:a,fields:o,records:h,recordSet:c}}}const Gt=new Map;Gt.set("int16","esriFieldTypeSmallInteger"),Gt.set("int32","esriFieldTypeInteger"),Gt.set("int64","esriFieldTypeInteger"),Gt.set("float32","esriFieldTypeSingle"),Gt.set("float64","esriFieldTypeDouble"),Gt.set("text","esriFieldTypeString");let Wt=class extends zt{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(t){await this.init();const{data:e}=await this.request(this.url+"/conf.json",{signal:null==t?void 0:t.signal});if(!this._validateHeader(e))throw new f("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:n}=this._parseHeader(e);if("thematic"===n.dataType){const t=await this._fetchAuxiliaryInformation();n.attributeTable=t}this._set("storageInfo",i),this._set("rasterInfo",n),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(t,e,i,n={}){const s=this.rasterInfo.storageInfo.maximumPyramidLevel-t;if(s<0)return null;const r=this._buildCacheFilePath(s,e,i,n.multidimensionalDefinition),a=this._getIndexRecordFromBundle(e,i),l=await this.request(r,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:n.signal});if(!l)return null;const o=new Uint8Array(l.data),h=this._getTileEndAndContentType(o,a);if(0===h.recordSize)return null;const u=await this.request(r,{range:{from:h.position,to:h.position+h.recordSize},responseType:"array-buffer",signal:n.signal});return u?this.decodePixelBlock(u.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(t){return t&&"RasterInfo"===t.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some((e=>!t[e]))}_parseHeader(t){var e;const i=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][t.pixelType],{bandCount:s,histograms:a,colormap:l,blockWidth:o,blockHeight:h,firstPyramidLevel:c,maximumPyramidLevel:f}=t,d=t.statistics&&t.statistics.map((t=>({min:t.min,max:t.max,avg:t.mean,stddev:t.standardDeviation,median:t.median,mode:t.mode}))),p=new r(t.extent.spatialReference||t.geodataXform.spatialReference),m=new n({xmin:t.extent.xmin,ymin:t.extent.ymin,xmax:t.extent.xmax,ymax:t.extent.ymax,spatialReference:p}),y=new u({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:p}),w=null!=(e=t.properties)?e:{},g=t.format.toLowerCase().replace("cache/",""),v=new u(t.origin.x,t.origin.y,p);let x,M,I,b;if(l&&l.colors)for(x=[],M=0;M<l.colors.length;M++)I=l.colors[M],b=l.values?l.values[M]:M,x.push([b,255&I,I<<16>>>24,I<<8>>>24,I>>>24]);const R=t.LODInfos,T=[];for(M=0;M<R.levels.length;M++)T.push({level:R.levels[M],resolution:R.resolutions[M],scale:96/.0254*R.resolutions[M]});const S=new O({dpi:96,lods:T,format:g,origin:v,size:[o,h],spatialReference:p}),k={recordSize:8,packetSize:t.packetSize,headerSize:t.packetSize*t.packetSize*8+64},j=Math.round((m.xmax-m.xmin)/y.x),C=Math.round((m.ymax-m.ymin)/y.y),F=[{maxCol:Math.ceil(j/o)-1,maxRow:Math.ceil(C/h)-1,minCol:0,minRow:0}];let P=2;if(f>0)for(M=0;M<f;M++)F.push({maxCol:Math.ceil(j/P/o)-1,maxRow:Math.ceil(C/P/h)-1,minCol:0,minRow:0}),P*=2;return{storageInfo:k,rasterInfo:new et({width:j,height:C,pixelType:i,bandCount:s,extent:m,spatialReference:p,pixelSize:y,keyProperties:w,statistics:d,histograms:a,multidimensionalInfo:t.mdInfo,colormap:x,storageInfo:new Tt({blockWidth:o,blockHeight:h,pyramidBlockWidth:o,pyramidBlockHeight:h,origin:v,tileInfo:S,firstPyramidLevel:c,maximumPyramidLevel:f,blockBoundary:F})})}}async _fetchAuxiliaryInformation(t){const e=this.request(this.url+"/conf.vat.json",{signal:t}).then((t=>t.data)).catch((()=>null)),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:t}).then((t=>t.data)).catch((()=>null)),n=await w([e,i]);let s;if(n[0]){let t=n[0].fields;const e=n[0].values;if(t&&e){t=t.map((t=>({type:"OID"===t.name?"esriFieldTypeOID":Gt.get(t.type),name:t.name,alias:t.alias||t.name})));const i=e.map((t=>({attributes:t})));t&&e&&(s={fields:t,features:i})}}return!s&&n[1]&&(s=$t.parse(n[1]).recordSet),P.fromJSON(s)}_buildCacheFilePath(t,e,i,n){const s=this.storageInfo.packetSize,r=Math.floor(e/s)*s,a=Math.floor(i/s)*s,l="R"+this._toHexString4(r)+"C"+this._toHexString4(a);let h="L";h+=t>=10?t.toString():"0"+t.toString();const{multidimensionalInfo:u}=this.rasterInfo,c=null==n?void 0:n[0];if(!o(u)||!c)return`${this.url}/_alllayers/${h}/${l}.bundle`;let f=u.variables.filter((t=>t.name===c.variableName))[0].dimensions[0].values.indexOf(c.values[0]).toString(16);const d=4-f.length;for(let t=0;t<d;t++)f="0"+f;return f="S"+f,`${this.url}/_alllayers/${c.variableName}/${f}/${h}/${l}.bundle`}_getIndexRecordFromBundle(t,e){const i=this.storageInfo.packetSize,n=i*(t%i)+e%i;if(n<0)throw"Invalid level / row / col";return 20+n*this.storageInfo.recordSize+44}_getTileEndAndContentType(t,e){const i=t.subarray(e,e+8);let n,s=0;for(n=0;n<5;n++)s|=(255&i[n])<<8*n;const r=0xffffffffff&s;for(s=0,n=5;n<8;n++)s|=(255&i[n])<<8*(n-5);return{position:r,recordSize:0xffffffffff&s}}_toHexString4(t){let e=t.toString(16);if(4!==e.length){let t=4-e.length;for(;t-- >0;)e="0"+e}return e}};e([i({readOnly:!0})],Wt.prototype,"storageInfo",void 0),e([i({type:String,json:{write:!0}})],Wt.prototype,"datasetFormat",void 0),Wt=e([a("esri.layers.support.rasterDatasets.CloudRaster")],Wt);var Ut=Wt;let Jt=class extends zt{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(t){var e;await this.init();const{pixelBlock:i,statistics:s,histograms:a,name:l,keyProperties:o,nativeExtent:h,transform:u}=this.data,{width:c,height:f,pixelType:d}=i,p=this.data.extent||new n({xmin:-.5,ymin:.5,xmax:c-.5,ymax:f-.5,spatialReference:new r({wkid:3857})}),m=null!=(e=this.data.isPseudoSpatialReference)?e:!this.data.extent,y=new et({width:c,height:f,pixelType:d,extent:p,nativeExtent:h,transform:u,pixelSize:{x:p.width/c,y:p.height/f},spatialReference:p.spatialReference,bandCount:3,keyProperties:o||{},statistics:s,isPseudoSpatialReference:m,histograms:a});this.createRemoteDatasetStorageInfo(y,512,512),this._set("rasterInfo",y),this.updateTileInfo(),await this._buildInMemoryRaster(i,{width:512,height:512},t),this.datasetName=l,this.url="/InMemory/"+l}fetchRawTile(t,e,i,n={}){const s=this._pixelBlockTiles.get(`${t}/${e}/${i}`);return g(s)}async _buildInMemoryRaster(t,e,i){const n=this.rasterInfo.storageInfo.maximumPyramidLevel,s=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:t,tileSize:e,maximumPyramidLevel:n},i):g(it(t,e,n)),r=o(this.rasterInfo.statistics),a=o(this.rasterInfo.histograms),l=r&&a?g({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},i):g(nt(t)),h=await I([s,l]);if(!h[0].value&&h[1].value)throw new f("inmemory-raster:open","failed to build in memory raster");var u,c;this._pixelBlockTiles=h[0].value,r||(this.rasterInfo.statistics=null==(u=h[1].value)?void 0:u.statistics),a&&(this.rasterInfo.histograms=null==(c=h[1].value)?void 0:c.histograms)}};e([i({type:String,json:{write:!0}})],Jt.prototype,"datasetFormat",void 0),e([i()],Jt.prototype,"data",void 0),Jt=e([a("esri.layers.support.rasterDatasets.InMemoryRaster")],Jt);var qt=Jt;function Vt(t,e,i){const{x:n,y:s}=e;if(i<2)return{x:t[0]+n*t[2]+s*t[4],y:t[1]+n*t[3]+s*t[5]};if(2===i){const e=n*n,i=s*s,r=n*s;return{x:t[0]+n*t[2]+s*t[4]+e*t[6]+r*t[8]+i*t[10],y:t[1]+n*t[3]+s*t[5]+e*t[7]+r*t[9]+i*t[11]}}const r=n*n,a=s*s,l=n*s,o=r*n,h=r*s,u=n*a,c=s*a;return{x:t[0]+n*t[2]+s*t[4]+r*t[6]+l*t[8]+a*t[10]+o*t[12]+h*t[14]+u*t[16]+c*t[18],y:t[1]+n*t[3]+s*t[5]+r*t[7]+l*t[9]+a*t[11]+o*t[13]+h*t[15]+u*t[17]+c*t[19]}}function Yt(t,e,i){const{xmin:s,ymin:r,xmax:a,ymax:l,spatialReference:o}=e;let h=[];if(i<2)h.push({x:s,y:l}),h.push({x:a,y:l}),h.push({x:s,y:r}),h.push({x:a,y:r});else{let t=10;for(let e=0;e<t;e++)h.push({x:s,y:r+(l-r)*e/(t-1)}),h.push({x:a,y:r+(l-r)*e/(t-1)});t=8;for(let e=1;e<=t;e++)h.push({x:s+(a-s)*e/t,y:r}),h.push({x:s+(a-s)*e/t,y:l})}h=h.map((e=>Vt(t,e,i)));const u=h.map((t=>t.x)),c=h.map((t=>t.y));return new n({xmin:Math.min.apply(null,u),xmax:Math.max.apply(null,u),ymin:Math.min.apply(null,c),ymax:Math.max.apply(null,c),spatialReference:o})}let Xt=class extends c{constructor(){super(...arguments),this.polynomialOrder=1}get inverseCoefficients(){let t=this._get("inverseCoefficients");const e=this._get("forwardCoefficients");return!t&&e&&this.polynomialOrder<2&&(t=function(t){const[e,i,n,s,r,a]=t,l=n*a-r*s,o=r*s-n*a;return[(r*i-e*a)/l,(n*i-e*s)/o,a/l,s/o,-r/l,-n/o]}(e)),t}set inverseCoefficients(t){this._set("inverseCoefficients",t)}forwardTransform(t){if("point"===t.type){const e=Vt(this.forwardCoefficients,t,this.polynomialOrder);return new u({x:e.x,y:e.y,spatialReference:t.spatialReference})}return Yt(this.forwardCoefficients,t,this.polynomialOrder)}inverseTransform(t){if("point"===t.type){const e=Vt(this.inverseCoefficients,t,this.polynomialOrder);return new u({x:e.x,y:e.y,spatialReference:t.spatialReference})}return Yt(this.inverseCoefficients,t,this.polynomialOrder)}};e([i({json:{write:!0}})],Xt.prototype,"polynomialOrder",void 0),e([i({json:{write:!0}})],Xt.prototype,"forwardCoefficients",void 0),e([i({dependsOn:["forwardCoefficients"],json:{write:!0}})],Xt.prototype,"inverseCoefficients",null),Xt=e([a("esri.layers.support.rasterTransforms.PolynomialTransform")],Xt);var Kt=Xt;function Zt(t,e){if(!t||!e)return[];let i=e;e.indexOf("/")>-1?(i=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const n=[];if(e){const s=Zt(t,i);for(let t=0;t<s.length;t++)Zt(s[t],e).forEach((t=>n.push(t)));return n}const s=t.getElementsByTagNameNS("*",i);if(!s||0===s.length)return[];for(let t=0;t<s.length;t++)n.push(s[t]||s.item[t]);return n}function Qt(t,e){if(!t||!e)return null;let i=e;e.indexOf("/")>-1?(i=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const n=Zt(t,i);return n.length>0?e?Qt(n[0],e):n[0]:null}function te(t,e=null){const i=e?Qt(t,e):t;let n;return i?(n=i.textContent||i.nodeValue,n?n.trim():null):null}function ee(t,e){return function(t,e){const i=Zt(t,e),n=[];let s;for(let t=0;t<i.length;t++)s=i[t].textContent||i[t].nodeValue,s&&(s=s.trim(),""!==s&&n.push(s));return n}(t,e).map((t=>Number(t)))}function ie(t,e){const i=te(t,e);return Number(i)}function ne(t,e){var i;const n=null==t||null==(i=t.nodeName)?void 0:i.toLowerCase(),s=e.toLowerCase();return n.slice(n.lastIndexOf(":")+1)===s}function se(t,e){if(!t||!e)return null;const i=[];for(let n=0;n<t.length;n++)i.push(t[n]),i.push(e[n]);return i}function re(t){if(!t)return null;let e=Number(t);if(!isNaN(e)&&0!==e)return new r({wkid:e});const i=t.replace(/\]/g,"[").replace(/\"/g,"").split("[").map((t=>t.trim())).filter((t=>""!==t)),n=i[i.length-1].split(",");return"EPSG"!==n[0]||(e=Number(n[1]),isNaN(e)||0===e)?new r({wkt:t}):new r({wkid:e})}function ae(t){var e;if("pamdataset"!==(null==t||null==(e=t.documentElement.tagName)?void 0:e.toLowerCase()))return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};t.documentElement.childNodes.forEach((t=>{if(1===t.nodeType)if(ne(t,"SRS")){if(!i.spatialReference){const e=te(t);i.spatialReference=re(e)}}else if(ne(t,"Metadata"))if("xml:ESRI"===t.getAttribute("domain")){const{spatialReference:e,transform:n}=function(t){var e;const i=Qt(t,"GeodataXform"),n=re(ie(i,"SpatialReference/WKID")||te(i,"SpatialReference/WKT"));if("typens:PolynomialXform"!==i.getAttribute("xsi:type"))return{spatialReference:n,transform:null};const s=null!=(e=ie(i,"PolynomialOrder"))?e:1,r=ee(i,"CoeffX/Double"),a=ee(i,"CoeffY/Double"),l=ee(i,"InverseCoeffX/Double"),o=ee(i,"InverseCoeffY/Double"),h=se(r,a),u=se(l,o);return{spatialReference:n,transform:new Kt({polynomialOrder:s,forwardCoefficients:h,inverseCoefficients:u})}}(t);i.transform=n,i.spatialReference||(i.spatialReference=e)}else Zt(t,"MDI").forEach((t=>i.metadata[t.getAttribute("key")]=te(t)));else if(ne(t,"PAMRasterBand")){const e=function(t){var e;const i=ie(t,"NoDataValue"),n=Qt(t,"Histograms/HistItem"),s=ie(n,"HistMin"),r=ie(n,"HistMax"),a=ie(n,"BucketCount"),l=null==(e=te(n,"HistCounts"))?void 0:e.split("|").map((t=>Number(t)));let o,h,u,c;Zt(t,"Metadata/MDI").forEach((t=>{var e;const i=Number(null!=(e=t.textContent)?e:t.nodeValue);switch(t.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":o=i;break;case"STATISTICS_MAXIMUM":h=i;break;case"STATISTICS_MEAN":u=i;break;case"STATISTICS_STDDEV":c=i}}));const f=ie(t,"Metadata/SourceBandIndex");return{noDataValue:i,histogram:null!=l&&l.length&&null!=o&&null!=h?{min:s,max:r,size:a||l.length,counts:l}:null,sourceBandIndex:f,statistics:null!=o&&null!=h?{min:o,max:h,avg:u,stddev:c}:null}}(t);null!=e.sourceBandIndex&&null==i.rasterBands[e.sourceBandIndex]?i.rasterBands[e.sourceBandIndex]=e:i.rasterBands.push(e)}}));const n=i.rasterBands;return n&&(i.statistics=n[0].statistics?n.map((t=>t.statistics)):null,i.histograms=n[0].histogram?n.map((t=>t.histogram)):null),i}let le=class extends zt{async open(t){await this.init();const e=await this._fetchData(t);let{spatialReference:i,statistics:s,histograms:a,transform:l}=await this._fetchAuxiliaryData(t);const o=!i;o&&(i=new r({wkid:3857})),null!=a&&a.length&&null==s&&(s=st(a));const{width:h,height:u}=e;let c=new n({xmin:-.5,ymin:.5-u,xmax:h-.5,ymax:.5,spatialReference:i});const f=l?l.forwardTransform(c):c;let d=!0;if(l){const t=l.forwardCoefficients;d=t&&0===t[1]&&0===t[2],d&&(l=null,c=f)}const p=new qt({data:{extent:f,nativeExtent:c,transform:l,pixelBlock:e,statistics:s,histograms:a,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:o}});await p.open(),this._set("rasterInfo",p.rasterInfo),this._inMemoryRaster=p}fetchRawTile(t,e,i,n={}){return this._inMemoryRaster.fetchRawTile(t,e,i,n)}async _fetchData(t){const{data:e}=await this.request(this.url,{responseType:"array-buffer",signal:null==t?void 0:t.signal}),i=rt(e).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new f("image-aux-raster:open","the data is not a supported format");return this._set("datasetFormat",i),await this.decodePixelBlock(e,{format:"jpg",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(t){var e,i;const n=M(null==t?void 0:t.signal),s=null!=(e=this.ioConfig.skipExtensions)?e:[],r=s.indexOf("aux.xml")>-1?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:n}),a=this.datasetFormat,l="JPG"===a?"jgw":"PNG"===a?"pgw":"BMP"===a?"bpw":null,o=s.indexOf(l)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+l,{responseType:"text",signal:n}),h=await I([r,o]);if(null!=n&&n.aborted)throw b();const u=ae(null==(i=h[0].value)?void 0:i.data);if(!u.transform){const t=h[1].value?h[1].value.data.split("\n").slice(0,6).map((t=>Number(t))):null;u.transform=6===(null==t?void 0:t.length)?new Kt({forwardCoefficients:[t[4],t[5],t[0],-t[1],t[2],-t[3]]}):null}return u}};e([i({type:String,json:{write:!0}})],le.prototype,"datasetFormat",void 0),le=e([a("esri.layers.support.rasterDatasets.ImageAuxRaster")],le);var oe=le;let he=class extends zt{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer"}async open(t){await this.init();const e=t&&t.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:e});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const n=i.data;if(this.sourceJSON=n,this.tileType=n.cacheType,null==this.tileType&&(this.tileType=["jpg","jpeg","png","png8","png24","png32","mixed"].indexOf(n.tileInfo.format.toLowerCase())>-1?"Map":"lerc"===n.tileInfo.format.toLowerCase()?"Elevation":"Raster"),!n)throw new f("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!n.tileInfo)throw new f("imageserverraster:open","use ImageryLayer to open non-tiled image services");this.datasetName=n.name.slice(n.name.indexOf("/")+1);const s=await this._fetchRasterInfo({signal:e});if(!o(s))throw new f("image-server-raster:open","cannot initialize image service");{const t="Map"===this.tileType?H(n.tileInfo,n):O.fromJSON(n.tileInfo),{extent:e,pixelSize:i}=s,r=.5/s.width*i.x;let a,l;const o=t.lodAt(Math.max.apply(null,t.lods.map((t=>t.level))));"Map"!==this.tileType&&0!==n.maxScale&&("Raster"===this.tileType?(a=t.lods.filter((t=>t.resolution===i.x))[0],a||(a=t.lods[t.lods.length-1])):(a=t.lods.filter((t=>Math.abs(t.scale-n.maxScale)<r))[0],a||(a=t.lods.filter((t=>t.scale>n.maxScale)).sort(((t,e)=>t.scale>e.scale?1:-1))[0])),i.x=i.y=a.resolution,s.width=Math.ceil((e.xmax-e.xmin)/i.x-.1),s.height=Math.ceil((e.ymax-e.ymin)/i.y-.1)),a||(a=o);const h=t.lodAt(Math.min.apply(null,t.lods.map((t=>t.level))));"Map"===this.tileType?this._levelOffset=t.lods[0].level:0!==n.minScale&&"Elevation"===this.tileType&&(l=t.lods.filter((t=>Math.abs(t.scale-n.minScale)<r))[0],this._levelOffset=l.level-h.level),l||(l=h);const u=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>r||!t.lods.some((t=>Math.abs(t.resolution-u)<r)))&&(i.x=i.y=a.resolution,s.width=Math.ceil((e.xmax-e.xmin)/i.x-.1),s.height=Math.ceil((e.ymax-e.ymin)/i.y-.1));const c=a.level-l.level,[f,d]=t.size,p=t.origin;let{x:m,y}=i;const w=[{minCol:Math.floor((e.xmin-p.x+.1*m)/f/m),maxCol:Math.floor((e.xmax-p.x-.1*m)/f/m),minRow:Math.floor((p.y-e.ymax+.1*y)/d/y),maxRow:Math.floor((p.y-e.ymin-.1*y)/d/y)}];if(c>0)for(let t=0;t<c;t++)m*=2,y*=2,w.push({minCol:Math.floor((e.xmin-p.x+.1*m)/f/m),maxCol:Math.floor((e.xmax-p.x-.1*m)/f/m),minRow:Math.floor((p.y-e.ymax+.1*y)/d/m),maxRow:Math.floor((p.y-e.ymin-.1*y)/d/m)});s.storageInfo=new Tt({blockWidth:t.size[0],blockHeight:t.size[1],pyramidBlockWidth:t.size[0],pyramidBlockHeight:t.size[1],compression:t.format,origin:t.origin,firstPyramidLevel:1,maximumPyramidLevel:c,tileInfo:t,blockBoundary:w}),this._set("rasterInfo",s)}if(n.capabilities.toLowerCase().indexOf("tilemap")>-1){const t={tileInfo:s.storageInfo.tileInfo,parsedUrl:R(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new z({layer:t})}}async fetchRawTile(t,e,i,n={}){const{storageInfo:s,extent:r,pixelSize:a}=this.rasterInfo,l=`${this.url}/tile/${s.maximumPyramidLevel-t+this._levelOffset}/${e}/${i}`,o=this._slices?{sliceId:n.sliceId||0}:null,{data:h}=await this.request(l,{query:o,responseType:"array-buffer",signal:n.signal});if(!h)return null;const u=await this.decodePixelBlock(h,{width:s.tileInfo.size[0],height:s.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType}),c=s.blockBoundary[t];if("jpg"!==s.compression||i>c.minCol&&i<c.maxCol&&e>c.minRow&&e<c.maxRow)return u;const{origin:f,blockWidth:d,blockHeight:p}=s,m=Math.pow(2,t),y=Math.round((r.xmin-f.x)/(a.x*m))%d,w=Math.round((r.xmax-f.x)/(a.x*m))%d,g=Math.round((f.y-r.ymax)/(a.x*m))%p,v=Math.round((f.y-r.ymin)/(a.x*m))%p,x=i===c.minCol?y:0,M=e===c.minRow?g:0;return at(u,{x,y:M},{width:(i===c.maxCol?w:d)-x,height:(e===c.maxRow?v:p)-M}),u}getSliceIndex(t){if(null==t||!t.length||!this._slices)return null;const e=t;for(let t=0;t<this._slices.length;t++){const i=this._slices[t].multidimensionalDefinition;if(i.length===e.length&&!i.some((t=>{const i=e.filter((e=>t.variableName===e.variableName&&e.dimensionName===t.dimensionName))[0];return!i||(Array.isArray(t.values[0])?t.values[0][0]:t.values[0])!==(Array.isArray(i.values[0])?i.values[0][0]:i.values[0])})))return t}return null}async fetchVariableStatisticsHistograms(t,e){const i=this.request(this.url+"/statistics",{query:{variable:t,f:"json"},signal:e}).then((t=>{var e;return null==(e=t.data)?void 0:e.statistics})),n=this.request(this.url+"/histograms",{query:{variable:t,f:"json"},signal:e}).then((t=>{var e;return null==(e=t.data)?void 0:e.histograms})),s=await w([i,n]);return s[0]&&s[0].forEach((t=>{t.avg=t.mean,t.stddev=t.standardDeviation})),{statistics:s[0]||null,histograms:s[1]||null}}async computeBestPyramidLevelForLocation(t,e={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(t,0,e.datumTransformation);if(null===i)return null;let n=0;const{maximumPyramidLevel:s}=this.rasterInfo.storageInfo;let r=s-n+this._levelOffset;const a=i.srcLocation;for(;r>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(r,i.row,i.col,e))break}catch{}if(r--,n++,i=this.identifyPixelLocation(a,n,e.datumTransformation),null===i)return null}return-1===r||null==i?null:n}async _fetchRasterInfo(t){const e=this.sourceJSON,i=Math.ceil((e.extent.xmax-e.extent.xmin)/e.pixelSizeX-.1),s=Math.ceil((e.extent.ymax-e.extent.ymin)/e.pixelSizeY-.1),a=r.fromJSON(e.spatialReference||e.extent.spatialReference);if("Map"===this.tileType)return new et({width:i,height:s,bandCount:3,extent:n.fromJSON(e.extent),spatialReference:a,pixelSize:new u({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:a}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:l,signal:o}=t,h=!!e.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:l,f:"json"},signal:o}).then((t=>P.fromJSON(t.data))).catch((()=>null)),c=!!e.hasColormap&&this.request(this.url+"/colormap",{query:{slice:l,f:"json"},signal:o}).then((t=>{var e;return null==(e=t.data)?void 0:e.colormap})),f=!!e.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:l,f:"json"},signal:o}).then((t=>{var e;return null==(e=t.data)?void 0:e.histograms})),d=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:o}).then((t=>t.data)).catch((()=>{})),p=!!e.hasMultidimensions&&this._fetchMultidimensionalInfo(),m=!!e.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:o}).then((t=>t.data&&t.data.slices)).catch((()=>{}));return w([h,c,f,d,p,m]).then((t=>{let r=null;if(e.minValues&&e.minValues.length===e.bandCount){r=[];for(let t=0;t<e.minValues.length;t++)r.push({min:e.minValues[t],max:e.maxValues[t],avg:e.meanValues[t],stddev:e.stdvValues[t]})}return this._slices=t[5]||null,new et({width:i,height:s,bandCount:e.bandCount,extent:n.fromJSON(e.extent),spatialReference:a,pixelSize:new u({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:a}),pixelType:e.pixelType.toLowerCase(),statistics:r,attributeTable:t[0]||null,colormap:t[1]||null,histograms:t[2]||null,keyProperties:t[3]||{},multidimensionalInfo:t[4]||null})}))}async _fetchMultidimensionalInfo(t){var e;const i=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:t}).then((t=>{var e;return null==(e=t.data)?void 0:e.multidimensionalInfo}));return null!=(e=i.variables)&&e.length&&i.variables.forEach((t=>{var e;null!=(e=t.statistics)&&e.length&&t.statistics.forEach((t=>{t.avg=t.mean,t.stddev=t.standardDeviation}))})),i}};e([i({type:String,json:{write:!0}})],he.prototype,"datasetFormat",void 0),e([i()],he.prototype,"tileType",void 0),he=e([a("esri.layers.support.rasterDatasets.ImageServerRaster")],he);var ue=he;const ce=new Map;ce.set("Int8","s8"),ce.set("UInt8","u8"),ce.set("Int16","s16"),ce.set("UInt16","u16"),ce.set("Int32","s32"),ce.set("UInt32","u32"),ce.set("Float32","f32"),ce.set("Float64","f32"),ce.set("Double64","f32");const fe=new Map;fe.set("lerc",".lrc"),fe.set("none",".til"),fe.set("deflate",".pzp"),fe.set("jpeg",".jzp");let de=class extends zt{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(t){var e;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const i=t?M(t.signal):null,n=await this.request(this.url,{responseType:"xml",signal:i}),{rasterInfo:s,files:r}=this._parseHeader(n.data);if(-1===(null==(e=this.ioConfig.skipExtensions)?void 0:e.indexOf("aux.xml"))){const e=await this._fetchAuxiliaryData(t);var a;null!=e&&(s.statistics=null!=(a=e.statistics)?a:s.statistics,s.histograms=e.histograms,e.histograms&&!o(s.statistics)&&(s.statistics=st(e.histograms)))}this._set("rasterInfo",s),this._files=r;const l=await this.request(r.index,{responseType:"array-buffer",signal:i});this._storageIndex=this._parseIndex(l.data);let h,u,c=0,f=-1;const{blockWidth:d,blockHeight:p,compression:m}=this.rasterInfo.storageInfo,y=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:w,height:g,bandCount:v}=this.rasterInfo,x=[],I="none"===m?1:v;for(;c<this._storageIndex.length;)f++,h=Math.ceil(w/d/Math.pow(y,f)),u=Math.ceil(g/p/Math.pow(y,f)),c+=h*u*I*4,x.push({maxRow:u,maxCol:h,minCol:0,minRow:0});this.rasterInfo.storageInfo.blockBoundary=x,f>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=f),this.updateTileInfo()}async fetchRawTile(t,e,i,n={}){const{blockWidth:s,blockHeight:r,blockBoundary:a,compression:l}=this.rasterInfo.storageInfo,o=a[t];if(!o||o.maxRow<e||o.maxCol<i||o.minRow>e||o.minCol>i)return null;const{bandCount:h,pixelType:u}=this.rasterInfo,{ranges:c,actualTileWidth:f,actualTileHeight:d}=this._getTileLocation(t,e,i);if(!c||0===c.length)return null;if(0===c[0].from&&0===c[0].to){const t=new Uint8Array(s*r);return new lt({width:s,height:r,pixels:null,mask:t,validPixelCount:0})}const{bandIds:p}=this.ioConfig,m="none"===l?1:h,y=[];let g=0;for(g=0;g<m;g++)(!p||p.indexOf[g]>-1)&&y.push(this.request(this._files.data,{range:{from:c[g].from,to:c[g].to},responseType:"array-buffer",signal:n.signal}));const v=await w(y),x=v.map((t=>t.data.byteLength)).reduce(((t,e)=>t+e)),M=new Uint8Array(x);let I=0;for(g=0;g<m;g++)M.set(new Uint8Array(v[g].data),I),I+=v[g].data.byteLength;const b="lerc"===this.rasterInfo.storageInfo.compression?"lerc":"bip",R=await this.decodePixelBlock(M.buffer,{width:s,height:r,format:b,pixelType:u});let T=0,S=0;if(f!==s||d!==r){let t=R.mask;if(t)for(g=0;g<r;g++)if(S=g*s,g<d)for(T=f;T<s;T++)t[S+T]=0;else for(T=0;T<s;T++)t[S+T]=0;else for(t=new Uint8Array(s*r),R.mask=t,g=0;g<d;g++)for(S=g*s,T=0;T<f;T++)t[S+T]=1}return R}_parseIndex(t){if(t.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let e,i,n,s,r,a;if(ot){for(i=new Uint8Array(t),s=new ArrayBuffer(t.byteLength),n=new Uint8Array(s),r=0;r<t.byteLength/4;r++)for(a=0;a<4;a++)n[4*r+a]=i[4*r+3-a];e=new Uint32Array(s)}else e=new Uint32Array(t);return e}_getTileLocation(t,e,i){const{blockWidth:n,blockHeight:s,pyramidScalingFactor:r,compression:a}=this.rasterInfo.storageInfo,{width:l,height:o,bandCount:h}=this.rasterInfo,u="none"===a?1:h;let c,f,d,p=0,m=0;for(d=0;d<t;d++)m=Math.pow(r,d),c=Math.ceil(l/n/m),f=Math.ceil(o/s/m),p+=c*f;m=Math.pow(r,t),c=Math.ceil(l/n/m),f=Math.ceil(o/s/m),p+=e*c+i,p*=4*u;const y=this._storageIndex.subarray(p,p+4*u);let w=0,g=0;const v=[];for(let t=0;t<u;t++)w=y[4*t+0]*Math.pow(2,32)+y[4*t+1],g=w+y[4*t+2]*Math.pow(2,32)+y[4*t+3],v.push({from:w,to:g});return{ranges:v,actualTileWidth:i<c-1?n:Math.ceil(l/m)-n*(c-1),actualTileHeight:e<f-1?s:Math.ceil(o/m)-s*(f-1)}}_parseHeader(t){const e=Qt(t,"MRF_META/Raster");if(!e)throw new f("mrf:open","not a valid MRF format");const i=Qt(e,"Size"),s=parseInt(i.getAttribute("x"),10),a=parseInt(i.getAttribute("y"),10),l=parseInt(i.getAttribute("c"),10),o=(te(e,"Compression")||"none").toLowerCase();if(!o||-1===["none","lerc"].indexOf(o))throw new f("mrf:open","currently does not support compression "+o);const h=te(e,"DataType")||"UInt8",c=ce.get(h);if(null==c)throw new f("mrf:open","currently does not support pixel type "+h);const d=Qt(e,"PageSize"),p=parseInt(d.getAttribute("x"),10),m=parseInt(d.getAttribute("y"),10),y=Qt(e,"DataValues");let w,g;if(y&&(g=y.getAttribute("NoData"),null!=g&&(w=g.trim().split(" ").map((t=>parseFloat(t))))),Qt(t,"MRF_META/CachedSource"))throw new f("mrf:open","currently does not support MRF referencing other data files");const v=Qt(t,"MRF_META/GeoTags"),x=Qt(v,"BoundingBox");if(null==x)throw new f("mrf:open","missing node MRF_META/GeoTags/BoundingBox");const M=parseFloat(x.getAttribute("minx")),I=parseFloat(x.getAttribute("miny")),b=parseFloat(x.getAttribute("maxx")),R=parseFloat(x.getAttribute("maxy")),T=te(v,"Projection"),S=te(t,"datafile"),k=te(t,"IndexFile");let j;"LOCAL_CS[]"!==T&&(j=new r({wkt:T}));const C=new n(M,I,b,R);C.spatialReference=j;const F=Qt(t,"MRF_META/Rsets"),P=parseInt(F&&F.getAttribute("scale")||"2",10),D=new Tt({origin:new u({x:C.xmin,y:C.ymax,spatialReference:j}),blockWidth:p,blockHeight:m,pyramidBlockWidth:p,pyramidBlockHeight:m,compression:o,pyramidScalingFactor:P}),B=new u({x:(b-M)/s,y:(R-I)/a,spatialReference:j});return{rasterInfo:new et({width:s,height:a,extent:C,spatialReference:j,bandCount:l,pixelType:c,pixelSize:B,noDataValue:w,storageInfo:D}),files:{mrf:this.url,index:k||this.url.replace(".mrf",".idx"),data:S||this.url.replace(".mrf",fe.get(o))}}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==t?void 0:t.signal});return ae(e)}catch{return null}}};e([i()],de.prototype,"_files",void 0),e([i()],de.prototype,"_storageIndex",void 0),e([i({type:String,json:{write:!0}})],de.prototype,"datasetFormat",void 0),de=e([a("esri.layers.support.rasterIO.MRFRaster")],de);var pe=de;const me=function(t,e){const i=t.get(e);return i&&i.values},ye=function(t,e){const i=t.get(e);return i&&i.values[0]};let we=class extends zt{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(t){var e;await this.init();const i=t?M(t.signal):null,{data:s}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:i});if(!s)throw new f("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:r,firstIFD:a,isBigTiff:l}=ht(s),h=[];await this.readIFDs(h,s,r,a,0,l?8:4,i);const c=ut(h),{width:d,height:p,tileWidth:m,tileHeight:y,planes:w,pixelType:g,compression:v,firstPyramidLevel:x,maximumPyramidLevel:I,pyramidBlockWidth:b,pyramidBlockHeight:R,tileBoundary:T,metadata:S}=c,k=n.fromJSON(c.extent),j=k.spatialReference,C=new u(k?{x:k.xmin,y:k.ymax,spatialReference:j}:{x:0,y:0}),F=new Tt({blockWidth:m,blockHeight:y,pyramidBlockWidth:b,pyramidBlockHeight:R,compression:v,origin:C,firstPyramidLevel:x,maximumPyramidLevel:I,blockBoundary:T}),P=new u({x:(k.xmax-k.xmin)/d,y:(k.ymax-k.ymin)/p,spatialReference:j}),D=new et({width:d,height:p,bandCount:w,pixelType:g,compression:v,pixelSize:P,storageInfo:F,spatialReference:j,keyProperties:S?{BandProperties:S.bandProperties,DataType:S.dataType}:{},extent:k,statistics:S?S.statistics:null});if(-1===(null==(e=this.ioConfig.skipExtensions)?void 0:e.indexOf("aux.xml"))){const e=await this._fetchAuxiliaryData(t);var B;null!=e&&(D.statistics=null!=(B=e.statistics)?B:D.statistics,D.histograms=e.histograms,e.histograms&&!o(D.statistics)&&(D.statistics=st(e.histograms)))}if(this._set("rasterInfo",D),this._headerInfo={littleEndian:r,isBigTiff:l,ifds:h,...c},!this._headerInfo.isSupported)throw new f("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(t,e,i,n={}){if(!this._headerInfo&&this._headerInfo.isSupported)return null;const{blockBoundary:s}=this.rasterInfo.storageInfo,r=t>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,a=t>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight,l=s[t];if(!l||l.maxRow<e||l.maxCol<i||l.minRow>e||l.minCol>i)return null;const o=this.getTileLocation(t,e,i);if(!o)return null;const{range:h,actualTileWidth:u,actualTileHeight:c,ifd:f}=o,{data:d}=await this.request(this.url,{range:h,responseType:"array-buffer",signal:n.signal}),p=await this.decodePixelBlock(d,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:f,offset:0,size:0},width:r,height:a,planes:null,pixelType:null});let m,y,w;if(u!==r||c!==a){let t=p.mask;if(t)for(m=0;m<a;m++)if(w=m*r,m<c)for(y=u;y<r;y++)t[w+y]=0;else for(y=0;y<r;y++)t[w+y]=0;else for(t=new Uint8Array(r*a),p.mask=t,m=0;m<c;m++)for(w=m*r,y=0;y<u;y++)t[w+y]=1}return p}async readIFDs(t,e,i,n,s,r=4,a){if(!n)return null;(n>=e.byteLength||n<0)&&(e=(await this.request(this.url,{range:{from:n+s,to:n+s+this._bufferSize},responseType:"array-buffer",signal:a})).data,s=n+s,n=0);const l=await this.readIFD(e,i,n,s,ct.TIFF_TAGS,r,a);if(t.push(l.ifd),!l.nextIFD)return null;await this.readIFDs(t,e,i,l.nextIFD-s,s,r,a)}async readIFD(t,e,i,n,s=ct.TIFF_TAGS,r=4,a){if(!t)return null;const l=ft(t,e,i,n,s,r);if(l.success){const i=[];if(l.ifd.forEach((t=>{t.values||i.push(t)})),i.length>0){const s=i.map((t=>t.offlineOffsetSize)),r=Math.min.apply(null,s.map((t=>t[0])));if(Math.min.apply(null,s.map((t=>t[0]+t[1])))-r<=this._bufferSize){const{data:s}=await this.request(this.url,{range:{from:r,to:r+this._bufferSize},responseType:"array-buffer",signal:a});t=s,n=r,i.forEach((i=>dt(t,e,i,n)))}}if(l.ifd.has("GEOKEYDIRECTORY")){const i=l.ifd.get("GEOKEYDIRECTORY"),s=i.values;if(s&&s.length>4){const r=s[0]+"."+s[1]+"."+s[2],l=await this.readIFD(t,e,i.valueOffset+6-n,n,ct.GEO_KEYS,2,a);i.data=l.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[r]})}}return l}if(l.requiredBufferSize&&l.requiredBufferSize!==t.byteLength){const i=await this.request(this.url,{range:{from:n,to:n+l.requiredBufferSize+4},responseType:"array-buffer",signal:a});return(t=i.data).byteLength<l.requiredBufferSize?null:this.readIFD(t,e,0,n,ct.TIFF_TAGS,4,a)}}getTileLocation(t,e,i){const{firstPyramidLevel:n,blockBoundary:s}=this.rasterInfo.storageInfo,r=0===t?0:t-(n-1),a=this._headerInfo.ifds[r];if(!a)return null;const l=me(a,"TILEOFFSETS");if(void 0===l)return null;const o=me(a,"TILEBYTECOUNTS"),{minRow:h,minCol:u,maxRow:c,maxCol:f}=s[r];if(e>c||i>f||e<h||i<u)return null;const d=ye(a,"IMAGEWIDTH"),p=ye(a,"IMAGELENGTH"),m=ye(a,"TILEWIDTH"),y=ye(a,"TILELENGTH"),w=e*(f+1)+i,g=l[w],v=o[w];return null==g||null==v?null:{range:{from:g,to:g+v-1},ifd:a,actualTileWidth:i===f?d%m:m,actualTileHeight:e===c?p%y:y}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==t?void 0:t.signal});return ae(e)}catch{return null}}};e([i()],we.prototype,"_files",void 0),e([i()],we.prototype,"_headerInfo",void 0),e([i()],we.prototype,"_bufferSize",void 0),e([i({type:String,json:{write:!0}})],we.prototype,"datasetFormat",void 0),we=e([a("esri.layers.support.rasterDatasets.TIFFRaster")],we);var ge=we;const ve=new Map;ve.set("CRF",{desc:"Cloud Raster Format",constructor:Ut}),ve.set("MRF",{desc:"Meta Raster Format",constructor:pe}),ve.set("TIFF",{desc:"GeoTIFF",constructor:ge}),ve.set("RasterTileServer",{desc:"Raster Tile Server",constructor:ue}),ve.set("JPG",{desc:"JPG Raster Format",constructor:oe}),ve.set("PNG",{desc:"PNG Raster Format",constructor:oe}),ve.set("GIF",{desc:"GIF Raster Format",constructor:oe}),ve.set("BMP",{desc:"BMP Raster Format",constructor:oe});const xe=T()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"});function Me(){return{enabled:!this.loaded||"RasterTileServer"===this.raster.datasetFormat&&"Raster"===this.raster.tileType}}let Ie=class extends($(W(G(_(L(bt(D(B)))))))){constructor(...t){super(...t),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null}normalizeCtorArgs(t,e){return"string"==typeof t?{url:t,...e}:t}load(t){const e=o(t)?t.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},t).then((()=>this._openRaster(e)),(()=>this._openRaster(e)))),g(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get fields(){var t,e;let i=[new F({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const n=null==(t=this.rasterInfo)||null==(e=t.attributeTable)?void 0:e.fields;if(n){const t=n.filter((t=>"oid"!==t.type&&"value"!==t.name.toLowerCase())).map((t=>{const e=t.clone();return e.name="Raster."+t.name,e}));i=i.concat(t)}return i}set renderer(t){this._set("renderer",t),this.updateRenderer()}readRenderer(t,e,i){const n=xt(e&&e.layerDefinition&&e.layerDefinition.drawingInfo&&e.layerDefinition.drawingInfo.renderer,i)||void 0;if(null!=n)return n}createPopupTemplate(t){return U(this,t)}write(t,e){const{raster:i}=this;return(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))?super.write(t,e):(e&&e.messages&&e.messages.push(new f("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e.origin}/${e.layerContainerType||"operational-layers"}'`,{layer:this})),null)}async _openRaster(t){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await class{static get supportedFormats(){const t=new Set;return ve.forEach(((e,i)=>t.add(i))),t}static async open(t){const{url:e,ioConfig:i,sourceJSON:n}=t;let s=t.datasetFormat;null==s&&e.lastIndexOf(".")&&(s=e.slice(e.lastIndexOf(".")+1).toUpperCase()),"OVR"===s||"TIF"===s?s="TIFF":"JPG"!==s&&"JPEG"!==s&&"JFIF"!==s||(s="JPG"),e.toLowerCase().indexOf("/imageserver")>-1&&-1===e.toLowerCase().indexOf("/wcsserver")&&(s="RasterTileServer");const r={url:e,sourceJSON:n,datasetFormat:s,ioConfig:i||{bandIds:null,sampling:null}};let a,l;if(this.supportedFormats.has(s))return a=ve.get(s).constructor,l=new a(r),await l.open({signal:t.signal}),l;if(s)throw new f("rasterfactory:open","not a supported format "+s);const o=Array.from(ve.keys());let h=0;const u=function(){return s=o[h++],s?(a=ve.get(s).constructor,l=new a(r),l.open({signal:t.signal}).then((()=>l)).catch((()=>u()))):null};return u()}static register(t,e,i){ve.has(t.toUpperCase())||ve.set(t.toUpperCase(),{desc:e,constructor:i})}}.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:this.ioConfig,signal:t});const{rasterInfo:e}=this.raster;if(!e)throw new f("imagery-tile-layer:load","cannot load resources on "+this.url);this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON&&(this._set("version",this.sourceJSON.currentVersion),this._set("copyright",this.sourceJSON.copyrightText)),null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings()}};e([i()],Ie.prototype,"ioConfig",void 0),e([i({type:[S],json:{write:{overridePolicy:Me}}})],Ie.prototype,"bandIds",void 0),e([i({json:{write:{overridePolicy:Me}}}),k(xe)],Ie.prototype,"interpolation",void 0),e([i({json:{write:!0}})],Ie.prototype,"multidimensionalDefinition",void 0),e([i(A)],Ie.prototype,"legendEnabled",void 0),e([i({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Ie.prototype,"isReference",void 0),e([i({type:["show","hide"]})],Ie.prototype,"listMode",void 0),e([i()],Ie.prototype,"sourceJSON",void 0),e([i({readOnly:!0})],Ie.prototype,"version",void 0),e([i()],Ie.prototype,"title",void 0),e([i({readOnly:!0,json:{read:!1}})],Ie.prototype,"type",void 0),e([i({type:["ArcGISTiledImageServiceLayer"]})],Ie.prototype,"operationalLayerType",void 0),e([i({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(t,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy:Me,writer(t,e,i){e[i]=!t}}}})],Ie.prototype,"popupEnabled",void 0),e([i({type:j,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:Me}}})],Ie.prototype,"popupTemplate",void 0),e([i({readOnly:!0,dependsOn:["title"]})],Ie.prototype,"defaultPopupTemplate",null),e([i({readOnly:!0,type:[F],dependsOn:["rasterInfo"]})],Ie.prototype,"fields",null),e([i({types:mt,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:Me},origins:{"web-scene":{types:Mt,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:t=>({enabled:t&&"vector-field"!==t.type})}}}}})],Ie.prototype,"renderer",null),e([C("renderer")],Ie.prototype,"readRenderer",null),Ie=e([a("esri.layers.ImageryTileLayer")],Ie);var be=Ie;export default be;