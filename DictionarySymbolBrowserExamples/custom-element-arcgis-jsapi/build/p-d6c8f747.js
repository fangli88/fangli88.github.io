import"./p-476cf7c4.js";import{U as e,D as t,E as r,ae as s,F as o,K as i}from"./p-ab028778.js";import"./p-2ef6e039.js";import"./p-7575e94f.js";import"./p-73b795c3.js";import"./p-e07a8dfe.js";import"./p-b92ca348.js";import"./p-3cd8f347.js";import"./p-f16fbea1.js";import{l as n,b as l}from"./p-1ff061ae.js";import"./p-2ceb0941.js";import"./p-8fc84c2d.js";import{l as p}from"./p-1cce98ff.js";import"./p-e7501203.js";import"./p-00f58755.js";import{d as a}from"./p-c5691699.js";import"./p-f3cc8f75.js";import"./p-e2c62b7c.js";import"./p-dc697c54.js";import"./p-a1a69fdc.js";import"./p-754df0ae.js";import"./p-89accc4e.js";import"./p-4a36891c.js";import c from"./p-11ca1b07.js";import"./p-8509ef38.js";import"./p-15538a25.js";import"./p-48626aa9.js";import"./p-a747e129.js";import"./p-f53b64f4.js";import"./p-b9c578c1.js";import"./p-dd888632.js";import"./p-8ff7604b.js";import"./p-c3d3c04d.js";import"./p-2500de92.js";import"./p-311069c2.js";import"./p-6501f469.js";import"./p-bfb72207.js";import"./p-17b09f4f.js";import"./p-0913eaf8.js";import"./p-4b9da55e.js";let u=class extends(p(a(n(l)))){constructor(...e){super(...e),this.type="route"}get barrierLines(){return this._getNamedFeatureLayer("PolylineBarriers")}get barrierPoints(){return this._getNamedFeatureLayer("Barriers")}get barrierPolygons(){return this._getNamedFeatureLayer("PolygonBarriers")}get directionLines(){return this._getNamedFeatureLayer("DirectionLines")}get directionPoints(){return this._getNamedFeatureLayer("DirectionPoints")}readFeatureCollectionsFromItem(e,t,r){return this.revert("featureCollections","portal-item"),t.layers.map((e=>{const t=new c;return t.read(e,r),t}))}readFeatureCollectionsFromWebMap(e,t,r){return t.featureCollection.layers.map((e=>{const t=new c;return t.read(e,r),t}))}get fullExtent(){return this.featureCollections?this.featureCollections.reduce(((e,t)=>e?e.union(t.fullExtent):t.fullExtent),null):null}get maxScale(){return this.featureCollections?this.featureCollections.reduce(((e,t)=>null==e?t.maxScale:Math.min(e,t.maxScale)),null):0}set maxScale(e){this.featureCollections.forEach((t=>{t.maxScale=e})),this._set("maxScale",e)}get minScale(){return this.featureCollections?this.featureCollections.reduce(((e,t)=>null==e?t.minScale:Math.min(e,t.minScale)),null):0}set minScale(e){this.featureCollections.forEach((t=>{t.minScale=e})),this._set("minScale",e)}get routeInfo(){return this._getNamedFeatureLayer("RouteInfo")}get stops(){return this._getNamedFeatureLayer("Stops")}load(t){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},t)),e(this)}_getNamedFeatureLayer(e){if(this.featureCollections)return this.featureCollections.find((t=>t.title===e))}};t([r({dependsOn:["featureCollections"]})],u.prototype,"barrierLines",null),t([r({dependsOn:["featureCollections"]})],u.prototype,"barrierPoints",null),t([r({dependsOn:["featureCollections"]})],u.prototype,"barrierPolygons",null),t([r({dependsOn:["featureCollections"]})],u.prototype,"directionLines",null),t([r({dependsOn:["featureCollections"]})],u.prototype,"directionPoints",null),t([r({type:s.ofType(c)})],u.prototype,"featureCollections",void 0),t([o("portal-item","featureCollections",["layers"])],u.prototype,"readFeatureCollectionsFromItem",null),t([o("web-map","featureCollections",["featureCollection.layers"])],u.prototype,"readFeatureCollectionsFromWebMap",null),t([r({dependsOn:["featureCollections"],readOnly:!0})],u.prototype,"fullExtent",null),t([r({type:["show","hide"]})],u.prototype,"listMode",void 0),t([r({dependsOn:["featureCollections"]})],u.prototype,"maxScale",null),t([r({dependsOn:["featureCollections"]})],u.prototype,"minScale",null),t([r({dependsOn:["featureCollections"]})],u.prototype,"routeInfo",null),t([r({dependsOn:["featureCollections"]})],u.prototype,"stops",null),t([r({readOnly:!0,json:{read:!1}})],u.prototype,"type",void 0),u=t([i("esri.layers.RouteLayer")],u);var m=u;export default m;