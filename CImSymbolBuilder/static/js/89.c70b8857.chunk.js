(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[89],{414:function(e,a,n){"use strict";n.r(a),n.d(a,"fromUrl",(function(){return u}));var t=n(6),l=n(14),r=n(50),s=n(114),i=n(526);async function u(e){const a=await async function(e){const a=Object(s.e)(e);if(!a)throw new l.a("arcgis-layers:url-mismatch","The url '${url}' is not a valid arcgis resource",{url:e});const{serverType:n,sublayer:t}=a;let r;const u={FeatureServer:"FeatureLayer",StreamServer:"StreamLayer",VectorTileServer:"VectorTileLayer"};switch(n){case"MapServer":r=null!=t?"FeatureLayer":async function(e){return(await c(e)).tileInfo}(e).then(e=>e?"TileLayer":"MapImageLayer");break;case"ImageServer":r=c(e).then(e=>{const a=e.tileInfo&&e.tileInfo.format;return e.tileInfo?a&&"LERC"===a.toUpperCase()&&e.cacheType&&"elevation"===e.cacheType.toLowerCase()?"ElevationLayer":"ImageryTileLayer":"ImageryLayer"});break;case"SceneServer":r=c(a.url.path).then(e=>{const a={Point:"SceneLayer","3DObject":"SceneLayer",IntegratedMesh:"IntegratedMeshLayer",PointCloud:"PointCloudLayer",Building:"BuildingSceneLayer"};if(e&&Array.isArray(e.layers)&&e.layers.length>0){const n=e.layers[0].layerType;if(null!=a[n])return a[n]}return"SceneLayer"});break;default:r=u[n]}const y="FeatureServer"===n,d={parsedUrl:a,Constructor:null,layerOrTableId:y?t:null,sublayerIds:null,tableIds:null},f=await r;if({FeatureLayer:!0,SceneLayer:!0}[f]&&null==t){const a=await async function(e,a){var n,t;let l,r=!1;if("FeatureServer"===a){const a=await async function(e){var a,n;let t=await c(e);t=t||{},t.layers=(null==(a=t.layers)?void 0:a.filter(o))||[];const l={serviceJSON:t};if(t.currentVersion<10.5)return l;const r=await c(e+"/layers");return l.layersJSON={layers:(null==r||null==(n=r.layers)?void 0:n.filter(o))||[],tables:(null==r?void 0:r.tables)||[]},l}(e);r=!!a.layersJSON,l=a.layersJSON||a.serviceJSON}else l=await c(e);const s=null==(n=l)?void 0:n.layers,i=null==(t=l)?void 0:t.tables;return{layerIds:(null==s?void 0:s.map(e=>e.id).reverse())||[],tableIds:(null==i?void 0:i.map(e=>e.id).reverse())||[],layerInfos:r?s:[],tableInfos:r?i:[]}}(e,n);if(y&&(d.sublayerInfos=a.layerInfos,d.tableInfos=a.tableInfos),1!==a.layerIds.length+a.tableIds.length)d.sublayerIds=a.layerIds,d.tableIds=a.tableIds;else if(y){var b,h;d.layerOrTableId=null!=(b=a.layerIds[0])?b:a.tableIds[0],d.sourceJSON=null!=(h=a.layerInfos[0])?h:a.tableInfos[0]}}return d.Constructor=await async function(e){return(0,i.a[e])()}(f),d}(e.url),r={...e.properties,url:e.url};if(!a.sublayerIds)return null!=a.layerOrTableId&&(r.layerId=a.layerOrTableId,r.sourceJSON=a.sourceJSON),new a.Constructor(r);const u=new(0,(await n.e(30).then(n.bind(null,572))).default)({title:a.parsedUrl.title});return function(e,a,n){function l(e,l){const r={...n,layerId:e,sublayerTitleMode:"service-name"};return Object(t.h)(l)&&(r.sourceJSON=l),new a.Constructor(r)}a.sublayerIds.forEach(n=>{const t=l(n,y(a.sublayerInfos,n));e.add(t)}),a.tableIds.forEach(n=>{const t=l(n,y(a.tableInfos,n));e.tables.add(t)})}(u,a,r),u}function y(e,a){return e?e.find(e=>e.id===a):null}function o(e){return!e.type||"Feature Layer"===e.type}async function c(e){return(await Object(r.default)(e,{responseType:"json",query:{f:"json"}})).data}},526:function(e,a,n){"use strict";n.d(a,"a",(function(){return t}));const t={BingMapsLayer:async()=>(await n.e(140).then(n.bind(null,630))).default,BuildingSceneLayer:async()=>(await Promise.all([n.e(20),n.e(141)]).then(n.bind(null,617))).default,CSVLayer:async()=>(await n.e(86).then(n.bind(null,631))).default,ElevationLayer:async()=>(await n.e(23).then(n.bind(null,628))).default,FeatureLayer:async()=>(await Promise.resolve().then(n.bind(null,313))).default,GroupLayer:async()=>(await n.e(30).then(n.bind(null,572))).default,GeoRSSLayer:async()=>(await n.e(142).then(n.bind(null,600))).default,ImageryLayer:async()=>(await Promise.all([n.e(9),n.e(17),n.e(87)]).then(n.bind(null,619))).default,ImageryTileLayer:async()=>(await Promise.all([n.e(9),n.e(17),n.e(62)]).then(n.bind(null,618))).default,IntegratedMeshLayer:async()=>(await n.e(60).then(n.bind(null,625))).default,KMLLayer:async()=>(await n.e(70).then(n.bind(null,632))).default,MapImageLayer:async()=>(await Promise.all([n.e(12),n.e(26)]).then(n.bind(null,604))).default,MapNotesLayer:async()=>(await n.e(143).then(n.bind(null,605))).default,OpenStreetMapLayer:async()=>(await n.e(71).then(n.bind(null,606))).default,PointCloudLayer:async()=>(await n.e(52).then(n.bind(null,620))).default,RouteLayer:async()=>(await n.e(144).then(n.bind(null,607))).default,SceneLayer:async()=>(await Promise.all([n.e(20),n.e(145)]).then(n.bind(null,633))).default,StreamLayer:async()=>(await n.e(146).then(n.bind(null,634))).default,TileLayer:async()=>(await Promise.all([n.e(12),n.e(65)]).then(n.bind(null,608))).default,UnknownLayer:async()=>(await n.e(147).then(n.bind(null,609))).default,UnsupportedLayer:async()=>(await n.e(148).then(n.bind(null,610))).default,VectorTileLayer:async()=>(await Promise.all([n.e(27),n.e(55)]).then(n.bind(null,621))).default,WebTileLayer:async()=>(await n.e(88).then(n.bind(null,534))).default,WMSLayer:async()=>(await n.e(64).then(n.bind(null,635))).default,WMTSLayer:async()=>(await n.e(72).then(n.bind(null,623))).default}}}]);
//# sourceMappingURL=89.c70b8857.chunk.js.map