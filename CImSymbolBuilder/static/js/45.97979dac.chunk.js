(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[45],{433:function(e,t,s){"use strict";function i(e,t){if(null!==t){e.push(t.length);for(const s of t)s.serialize(e);return e}e.push(0)}function r(e,t,s){const i=e.readInt32(),r=new Array(i);for(let a=0;a<r.length;a++)r[a]=t.deserialize(e,s);return r}s.d(t,"a",(function(){return r})),s.d(t,"b",(function(){return i}))},439:function(e,t,s){"use strict";var i=s(4),r=s(419),a=s(275),n=s(458),o=s(433);const l=i.a.getLogger("esri/views/2d/engine/webgl/collisions/Metric");class d{constructor(e,t,s,i,r){this.id=e,this.range=t,this.boxes=null,this.minZoom=-1,this.size=0,this.directionX=0,this.directionY=0,this.offsetX=0,this.offsetY=0,this.placementPadding=0,this.anchor=Object(a.b)(s,i),this.baseZoom=r}add(e,t,s){e.x=e.x+t,e.y=e.y+s,this.bounds?this.boxes?(this.boxes.push(e),this.bounds.extend(e)):(this.boxes=[this.bounds,e],this.bounds=this.bounds.clone(),this.bounds.extend(e)):this.bounds=e}computeIndex(){const e=this.anchor[0],t=this.anchor[1],s=Math.floor(e/r.d),i=Math.floor(t/r.d);this.xBucket=s,this.yBucket=i;const a=r.F/r.d;if(this.hasVV)return this.xOverflow=a,void(this.yOverflow=a);this.xOverflow=Math.min(a,Math.ceil(2*this.bounds.width/r.d)),this.yOverflow=Math.min(a,Math.ceil(2*this.bounds.height/r.d))}findCollisionDelta(e){const t=this.bounds.findCollisionDelta(e.bounds),s=this.boxes&&this.boxes.length,i=e.boxes&&e.boxes.length;return Math.abs(t)>r.f||!s&&!i?t:s&&i?this._boxesToBoxes(e):s?this._boxesToBox(e):this._boxToBoxes(e)}computeVVOffset(e,t){t||l.error("mapview-labeling","Unable to compute label offset. Expected an evaluator function but found "+t);let s=this.size;if(this.hasVV){const i=t(e);s=isNaN(i)||null==i||i===1/0?this.size:i}this._computeOffset(s)}setPlacementOffset(e,t,s,i,r){this.hasVV=e,this.size=t,this.placementPadding=Math.round(s),this.directionX=i,this.directionY=r}clone(){const e=new d(this.id,this.range,this.anchor[0],this.anchor[1],this.baseZoom);return e.minZoom=this.minZoom,this.bounds&&(e.bounds=this.bounds.clone()),this.boxes&&(e.boxes=this.boxes.map(e=>e.clone())),e.xBucket=this.xBucket,e.yBucket=this.yBucket,e.xOverflow=this.xOverflow,e.yOverflow=this.yOverflow,e.hasVV=this.hasVV,e.size=this.size,e.directionX=this.directionX,e.directionY=this.directionY,e.offsetX=this.offsetX,e.offsetY=this.offsetY,e}_boxToBoxes(e){let t=-1/0;for(const s of e.boxes){const e=this.bounds.findCollisionDelta(s);t=Math.max(e,t)}return t}_boxesToBox(e){let t=this.boxes[0].findCollisionDelta(e.bounds);for(let s=1;s<this.boxes.length;s++){const i=this.boxes[s].findCollisionDelta(e.bounds);t=Math.max(i,t)}return t}_boxesToBoxes(e){let t=-1/0;for(let s=0;s<this.boxes.length;s++){const i=this.boxes[s];for(const s of e.boxes){const e=i.findCollisionDelta(s);t=Math.max(e,t)}}return t}_computeOffset(e){this.offsetX=this.directionX*(e/2+this.placementPadding),this.offsetY=this.directionY*(e/2+this.placementPadding)}serialize(e){return e.push(this.id),this.bounds.serialize(e),e.push(this.range.from),e.push(this.range.count),e.push(this.anchor[0]),e.push(this.anchor[1]),e.push(this.baseZoom),e.push(this.hasVV?1:0),e.push(this.size),e.writeF32(this.directionX),e.writeF32(this.directionY),e.push(this.offsetX),e.push(this.offsetY),e.push(this.placementPadding),Object(o.b)(e,this.boxes),e}static deserialize(e){const t=e.readInt32(),s=n.a.deserialize(e),i={from:e.readInt32(),count:e.readInt32()},r=e.readInt32(),a=e.readInt32(),l=e.readInt32(),u=e.readInt32(),h=e.readInt32(),c=e.readF32(),f=e.readF32(),p=e.readInt32(),y=e.readInt32(),m=e.readInt32(),b=Object(o.a)(e,n.a),x=new d(t,i,r,a,l);return x.bounds=s,x.boxes=b,x.setPlacementOffset(!!u,h,m,c,f),x.offsetX=p,x.offsetY=y,x.computeIndex(),u||x._computeOffset(h),x}}t.a=d},440:function(e,t,s){"use strict";var i=s(421),r=class{constructor(){this.vertexData=new Map,this.vertexCount=0,this.indexData=[]}clear(){this.vertexData.clear(),this.vertexCount=0,this.indexData=[]}update(e,t,s){for(const i in e)this.vertexData.set(i,e[i]);for(const i in this.vertexData)null===e[i]&&this.vertexData.delete(i);this.vertexCount=t,this.indexData=s}};class a{constructor(e,t,s,i=0,r=0){this.id=e,this.geometryType=t,this.materialKey=s,this.minZoom=i,this.maxZoom=r,this.meshData=null,this.symbolLevel=0,this.zOrder=0,this.vertexFrom=0,this.vertexCount=0,this.indexFrom=0,this.indexCount=0}get sortKey(){return void 0===this._sortKey&&this._computeSortKey(),this._sortKey}clone(){return this.copy()}copy(){const e=new a(this.id,this.geometryType,this.materialKey);return e.vertexFrom=this.vertexFrom,e.vertexCount=this.vertexCount,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e.zOrder=this.zOrder,e.symbolLevel=this.symbolLevel,e.meshData=this.meshData,e.minZoom=this.minZoom,e.maxZoom=this.maxZoom,e}setMeshDataFromBuffers(e,t,s){const a=new r;for(const r in t){const s=t[r].stride,n=t[r].data,o=[],l=Object(i.o)(s);for(let t=0;t<s*e.vertexCount/l;++t)o[t]=n[t+s*e.vertexFrom/l];a.vertexData.set(r,o)}a.indexData.length=0;for(let i=0;i<e.indexCount;++i)a.indexData[i]=s[i+e.indexFrom]-e.vertexFrom;a.vertexCount=e.vertexCount,this.meshData=a}readMeshDataFromBuffers(e,t){this.meshData?this.meshData.clear():this.meshData=new r;for(const s in e){const t=e[s].stride,r=e[s].data,a=[],n=Object(i.o)(t);for(let e=0;e<t*this.vertexCount/n;++e)a[e]=r[e+t*this.vertexFrom/n];this.meshData.vertexData.set(s,a)}this.meshData.indexData.length=0;for(let s=0;s<this.indexCount;++s)this.meshData.indexData[s]=t[s+this.indexFrom]-this.vertexFrom;this.meshData.vertexCount=this.vertexCount}writeMeshDataToBuffers(e,t,s,r){for(const a in t){const s=t[a].stride,r=this.meshData.vertexData.get(a),n=t[a].data,o=Object(i.o)(s);for(let t=0;t<s*this.meshData.vertexCount/o;++t)n[t+s*e/o]=r[t]}for(let i=0;i<this.meshData.indexData.length;++i)r[i+s]=this.meshData.indexData[i]+e;this.vertexFrom=e,this.vertexCount=this.meshData.vertexCount,this.indexFrom=s,this.indexCount=this.meshData.indexData.length}static writeAllMeshDataToBuffers(e,t,s){let i=0,r=0;for(const a of e)a.writeMeshDataToBuffers(i,t,r,s),i+=a.vertexCount,r+=a.indexCount}_computeSortKey(){this._sortKey=(31&this.symbolLevel)<<12|(127&this.zOrder)<<4|7&this.geometryType}serialize(e){return e.push(this.geometryType),e.push(this.materialKey),e.push(this.vertexFrom),e.push(this.vertexCount),e.push(this.indexFrom),e.push(this.indexCount),e.push(this.minZoom),e.push(this.maxZoom),e}static deserialize(e,t){const s=e.readInt32(),i=e.readInt32(),r=new a(t.id,s,i);return r.vertexFrom=e.readInt32(),r.vertexCount=e.readInt32(),r.indexFrom=e.readInt32(),r.indexCount=e.readInt32(),r.minZoom=e.readInt32(),r.maxZoom=e.readInt32(),r}}t.a=a},441:function(e,t,s){"use strict";t.a=class{constructor(e,t){this._pos=0;const s=t?this._roundToNearest(t,e.BYTES_PER_ELEMENT):40;this._array=new ArrayBuffer(s),this._buffer=new e(this._array),this._ctor=e}get length(){return this._pos}_roundToNearest(e,t){const s=Math.round(e);return s+(t-s%t)}_ensureSize(e){if(this._pos+e>=this._buffer.length){const t=this._roundToNearest(1.5*(this._array.byteLength+e*this._buffer.BYTES_PER_ELEMENT),this._buffer.BYTES_PER_ELEMENT),s=new ArrayBuffer(t),i=new this._ctor(s);i.set(this._buffer,0),this._array=s,this._buffer=i}}writeF32(e){this._ensureSize(1);const t=this._pos;return new Float32Array(this._array,4*this._pos,1)[0]=e,this._pos++,t}push(e){this._ensureSize(1);const t=this._pos;return this._buffer[this._pos++]=e,t}writeFixed(e){this._buffer[this._pos++]=e}setValue(e,t){this._buffer[e]=t}getValue(e){return this._buffer[e]}incr(e){this._buffer[e]++}decr(e){this._buffer[e]--}writeRegion(e){this._ensureSize(e.length);const t=this._pos;return this._buffer.set(e,this._pos),this._pos+=e.length,t}buffer(){const e=this._array.slice(0,4*this._pos);return this.destroy(),e}toArray(){const e=this._array,t=[];for(let s=0;s<e.byteLength/4;s++)t.push(e[s]);return t}seek(e){this._pos=e}destroy(){this._array=null,this._buffer=null}}},449:function(e,t,s){"use strict";s.d(t,"a",(function(){return o}));s(5);var i=s(161),r=s(160),a=s(231),n=s(452);class o extends n.a{constructor(e,t,s,i=s){super(),this.triangleCountReportedInDebug=0,this.transforms={dvs:Object(a.b)(),tileMat3:Object(a.b)()},this.triangleCount=0,this.key=new r.a(e),this.bounds=t,this.size=s,this.coordRange=i}destroy(){this.texture&&(this.texture.dispose(),this.texture=null)}get coords(){return this._coords}get bounds(){return this._bounds}set bounds(e){this._coords=[e[0],e[3]],this._bounds=e}setTransform(e,t){const s=t/(e.resolution*e.pixelRatio),r=this.transforms.tileMat3,[a,n]=e.toScreenNoRotation([0,0],this.coords),o=this.size[0]/this.coordRange[0]*s,l=this.size[1]/this.coordRange[1]*s;Object(i.i)(r,o,0,0,0,l,0,a,n,1),Object(i.f)(this.transforms.dvs,e.displayViewMat3,r)}}},453:function(e,t,s){"use strict";var i=s(440),r=s(433),a=s(439);class n{constructor(e){this.insertAfter=null,this.id=e,this.displayRecords=[],this.metrics=[]}copy(){const e=new n(this.id);return e.set(this),e}clone(){const e=new n(this.id);return e.displayRecords=this.displayRecords.map(e=>e.clone()),e.metrics=this.metrics.map(e=>e.clone()),e.insertAfter=this.insertAfter,e}set(e){this.id=e.id,this.displayRecords=e.displayRecords,this.metrics=e.metrics,this.insertAfter=e.insertAfter}serialize(e){return e.push(this.id),Object(r.b)(e,this.metrics),Object(r.b)(e,this.displayRecords),e}static deserialize(e){const t=e.readInt32(),s=new n(t),o={id:t},l=Object(r.a)(e,a.a);return l.length&&(s.metrics=l),s.displayRecords=Object(r.a)(e,i.a,o),s}}t.a=n},454:function(e,t,s){"use strict";var i=s(420),r=s(507),a=s(505),n=s(483);const o=(e,t)=>e.key.level-t.key.level!=0?e.key.level-t.key.level:e.key.row-t.key.row!=0?e.key.row-t.key.row:e.key.col-t.key.col;t.a=class extends n.a{constructor(e){super(),this._tileInfoView=e}renderChildren(e){this.sortChildren(o),this.setStencilReference(),super.renderChildren(e)}createRenderParams(e){const{state:t}=e;return{...super.createRenderParams(e),requiredLevel:this._tileInfoView.getClosestInfoForScale(t.scale).level,displayLevel:this._tileInfoView.tileInfo.scaleToZoom(t.scale)}}prepareRenderPasses(e){const t=e.registerRenderPass({name:"stencil",brushes:[a.a],drawPhase:i.c.DEBUG|i.c.MAP,target:()=>this.getStencilTarget()}),s=e.registerRenderPass({name:"tileInfo",brushes:[r.a],drawPhase:i.c.DEBUG,target:()=>this.children,has:"esri-tiles-debug"});return[...super.prepareRenderPasses(e),t,s]}getStencilTarget(){return this.children}updateTransforms(e){for(const t of this.children){const s=this._tileInfoView.getTileResolution(t.key);t.setTransform(e,s)}}setStencilReference(){let e=1;for(const t of this.children)t.stencilRef=e++}}},455:function(e,t,s){"use strict";s.d(t,"a",(function(){return r})),s.d(t,"b",(function(){return i}));const i=(e,t)=>e&&((...e)=>t.warn("DEBUG:",...e))||(()=>null),r=!1},459:function(e,t,s){"use strict";s.d(t,"a",(function(){return a}));var i=s(421);class r{constructor(e,t,s){this.data=e,this.stride=t,this.vertexCount=s}static decode(e){const t=Object(i.c)(e.data,e.stride),s=e.stride,a=e.vertexCount;return new r(t,s,a)}static fromVertexVector(e){const t=Object(i.c)(e.data.buffer(),e.stride),s=e.stride,a=e.vertexCount;return new r(t,s,a)}}class a{constructor(e,t,s){this.geometryType=e,this.indexBuffer=new Uint32Array(t),this.namedBuffers=s}static decode(e){const t=e.geometryType,s=e.indexBuffer,i={};for(const a in e.namedBuffers)i[a]=r.decode(e.namedBuffers[a]);return new a(t,s,i)}static fromVertexVectors(e){const t=e.geometryType,s=e.indexVector.buffer(),i={};for(const a in e.namedVectors)i[a]=r.fromVertexVector(e.namedVectors[a]);return new a(t,s,i)}}},461:function(e,t,s){"use strict";s.d(t,"a",(function(){return d}));var i=s(440),r=s(433),a=s(439),n=s(453),o=class{constructor(e){this._pos=0,this._buffer=e,this._i32View=new Int32Array(this._buffer),this._f32View=new Float32Array(this._buffer)}readInt32(){return this._i32View[this._pos++]}readF32(){return this._f32View[this._pos++]}},l=s(441);class d{constructor(e,t){this.vertexVectorsMap=e,this._currentIndex=-1,this._currentRecordOffset=0,this._currentMetricOffset=0;const s=4*(4*t.features+1),i=4*(8*t.records+1),r=4*(20*t.metrics+1);this._bufDisplayObjects=new l.a(Uint32Array,s+4),this._bufDisplayRecords=new l.a(Uint32Array,i+4),this._bufMetrics=new l.a(Uint32Array,r+4),this._bufDisplayObjects.push(0),this._bufDisplayRecords.push(0),this._bufMetrics.push(0)}get vertexBuffersMap(){if(!this._vertexBuffersMap){this._vertexBuffersMap={};for(let e=0;e<this.vertexVectorsMap.length;e++)this._vertexBuffersMap[e]=this.vertexVectorsMap[e].intoBuffers();this.vertexVectorsMap=null}return this._vertexBuffersMap}get(e){return this.vertexVectorsMap[e]}currentDisplayRecordCount(){return this._bufDisplayRecords[this._currentRecordOffset]}writeDisplayObject(e,t){this._bufDisplayObjects.incr(0),this._currentIndex=this._bufDisplayObjects.push(e),this._bufDisplayObjects.push(t),this._bufDisplayObjects.push(0),this._bufDisplayObjects.push(0),this._currentRecordOffset=0,this._currentMetricOffset=0}hasDisplayRecords(){return!(0===this._currentRecordOffset)}endDisplayObject(){this.hasDisplayRecords()||this._rollbackDisplayObject()}writeDisplayRecord(e,t,s,i,r,a,n=0,o=0){0===this._currentRecordOffset&&(this._currentRecordOffset=this._bufDisplayRecords.push(0),this._bufDisplayObjects.setValue(this._currentIndex+2,this._currentRecordOffset)),this._bufDisplayRecords.incr(this._currentRecordOffset),this._bufDisplayRecords.push(e),this._bufDisplayRecords.push(t),this._bufDisplayRecords.push(s),this._bufDisplayRecords.push(i),this._bufDisplayRecords.push(r),this._bufDisplayRecords.push(a),this._bufDisplayRecords.push(n),this._bufDisplayRecords.push(o)}writeMetrics(e){0===this._currentMetricOffset&&(this._bufDisplayObjects.setValue(this._currentIndex+3,this._bufMetrics.length),this._currentMetricOffset=this._bufMetrics.length),Object(r.b)(this._bufMetrics,e)}static deserializeDisplayObjects(e){const{bufDisplayObjects:t,bufMetrics:s,bufRecords:l}=e,d=new o(t),u=new o(l),h=new o(s),c=[];let f=d.readInt32();for(u.readInt32(),h.readInt32();f--;){const e=d.readInt32(),t=d.readInt32(),s=d.readInt32(),o=d.readInt32(),l=new n.a(e);0!==t&&(l.insertAfter=t),0!==s&&(l.displayRecords=Object(r.a)(u,i.a,{id:e})),0!==o&&(l.metrics=Object(r.a)(h,a.a)),c.push(l)}return c}encode(e,t){const s={};for(let i=0;i<this.vertexVectorsMap.length;i++){const e=this.vertexVectorsMap[i];s[i]={},e.transfer(s[i],t)}e.bufDisplayObjects=this._bufDisplayObjects.buffer(),e.bufRecords=this._bufDisplayRecords.buffer(),e.bufMetrics=this._bufMetrics.buffer(),t.push(e.bufDisplayObjects),t.push(e.bufMetrics),t.push(e.bufRecords),e.vertexBuffersMap=s,this.destroy()}destroy(){this.vertexVectorsMap=null,this._bufDisplayObjects=null,this._bufDisplayRecords=null,this._bufMetrics=null}_rollbackDisplayObject(){this._bufDisplayObjects.decr(0),this._bufDisplayObjects.seek(this._bufDisplayObjects.length-4),this._currentIndex=this._bufDisplayObjects.length}}},471:function(e,t,s){"use strict";s.d(t,"a",(function(){return D}));s(5);var i=s(6),r=s(481),a=s(30),n=s(419),o=s(72),l=s(301),d=s(275),u=s(449),h=s(420),c=s(421);function f(e,t,s){if(!e.allDirty)if(null!=e.from&&null!=e.count){const i=Math.min(e.from,t),r=Math.max(e.from+e.count,t+s)-i;e.from=i,e.count=r}else e.from=t,e.count=s}var p=class{constructor(){this._dirties=Object(c.e)(()=>({indices:{from:null,count:null,allDirty:!1}}),()=>({vertices:{from:null,count:null,allDirty:!1}}))}hasDirty(){for(const e of this._dirties)if(null!==e.data.indices.count||e.data.indices.allDirty)return!0;return!1}markAllClean(){for(const e of this._dirties){e.data.indices.from=null,e.data.indices.count=null,e.data.indices.allDirty=!1;for(const t in e.buffers)e.buffers[t].data.vertices.from=null,e.buffers[t].data.vertices.count=null,e.buffers[t].data.vertices.allDirty=!1}}markAllDirty(){for(const e of this._dirties){e.data.indices.allDirty=!0;for(const t in e.buffers)e.buffers[t].data.vertices.allDirty=!0}}forEach(e){for(let t=0;t<this._dirties.length;++t){const s=this._dirties[t],i={};for(const e in s.buffers){const t=s.buffers[e].data.vertices;(t.allDirty||null!=t.from&&null!=t.count&&t.count>0)&&(i[e]=t)}const r=s.data.indices;let a;a=r.allDirty||null!=r.from&&null!=r.count&&r.count>0?{indices:r,vertices:i}:{indices:null,vertices:i},(a.indices||Object.keys(a).length>0)&&e(a,t)}}markDirtyIndices(e,t,s){f(this._dirties[e].data.indices,t,s)}markDirtyVertices(e,t,s,i){f(this._dirties[e].buffers[t].data.vertices,s,i)}};class y{constructor(e){this._largestRange=null,this._parent=e,this._updateLargestRange()}get largestRange(){return this._largestRange}rangeCreated(e){(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}rangeResized(e,t){e===this._largestRange?e.count<t&&this._updateLargestRange():(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}findBestRange(e){let t=this._parent._freeHead,s=null;for(;null!==t;)t.count>=e&&(!s||t.count-e<s.count-e)&&(s=t),t=t.next;return s}findAdjacentRanges(e,t){let s=!0,i=!1,r=null,a=this._parent._freeHead;for(;s&&!i;){const n=null!==r?r.from+r.count:0,o=null!==a?a.from:this._parent._size;e>=n&&e+t<=o?(s=!1,i=!0):null!==a?(r=a,a=a.next):s=!1}return[r,a]}_updateLargestRange(){let e=null,t=this._parent._freeHead;for(;null!==t;)(!e||t.count>e.count)&&(e=t),t=t.next;this._largestRange=e}}class m{constructor(e,t){this._allocated=0,this._size=e,this._freeHead=e>0?{from:0,count:e,prev:null,next:null}:null,this._bookKeeper=t||new y(this),this._freeHead&&this._bookKeeper.rangeCreated(this._freeHead)}allocate(e){const t=this._bookKeeper.findBestRange(e);if(null===t)return-1;const s=t.from,i=t.count;if(t.from+=e,t.count-=e,this._bookKeeper.rangeResized(t,s,i),this._allocated+=e,0===t.count){const e=null!==t.prev?this._freeHead:t.next;m._removeRange(t),this._freeHead=e}return s}free(e,t){const[s,i]=this._bookKeeper.findAdjacentRanges(e,t),r={from:e,count:t,prev:s,next:i};if(null!==s&&(s.next=r),null!==i&&(i.prev=r),this._bookKeeper.rangeCreated(r),this._allocated-=t,null!==i&&r.from+r.count===i.from){const e=r.from,t=r.count;m._fuse(r,i),m._removeRange(i),this._bookKeeper.rangeResized(r,e,t),this._bookKeeper.rangeResized(i,void 0,0)}if(null!==s&&s.from+s.count===r.from){const e=s.from,t=s.count;m._fuse(s,r),m._removeRange(r),this._bookKeeper.rangeResized(s,e,t),this._bookKeeper.rangeResized(r,void 0,0)}this._freeHead=null!==r.prev?this._freeHead:r}get fragmentation(){const e=this._size-this._allocated;return 0===e?0:1-this._bookKeeper.largestRange.count/e}static _removeRange(e){null!==e.prev?null!==e.next?(e.prev.next=e.next,e.next.prev=e.prev):e.prev.next=null:null!==e.next&&(e.next.prev=null)}static _fuse(e,t){e.count+=t.count,e.next=t.next,t.from+=t.count,t.count=0,null!==t.next&&(t.next.prev=e)}}const b=["FILL","LINE","MARKER","TEXT","LABEL"];class x{constructor(e,t,s,i){this._strides=e,this._displayList=t,this._freeListsAndStorage={},this._dirtyMap=null,this._dirtyMap=s;for(const r in e){this._freeListsAndStorage[r]={vtxFreeList:i?new m(i):null,idxFreeList:i?new m(i):null,vertexBuffers:{},indexBuffer:i?new Uint32Array(i):null};for(const t in e[r])this._freeListsAndStorage[r].vertexBuffers[t]={data:i?Object(c.b)(i,e[r][t]):null,stride:e[r][t]}}}static fromTileData(e,t){const s=function(e){const t=e.getStrides(),s={};for(let i=0;i<t.length;i++)s[b[i]]=t[i];return s}(e),i=[0,0,0,0,0],r=[0,0,0,0,0],a=e.tileDisplayData.displayObjects;for(const o of a)for(const e of o.displayRecords)i[e.geometryType]=Math.max(i[e.geometryType],e.vertexFrom+e.vertexCount),r[e.geometryType]=Math.max(r[e.geometryType],e.indexFrom+e.indexCount);const n=new x(s,e.tileDisplayData.displayList,t,null);for(let o=0;o<e.tileBufferData.geometries.length;++o){const t=i[o],s=r[o],a=e.tileBufferData.geometries[o],l=b[o],d=n._storageFor(l),u=e.tileBufferData.geometries[o].indexBuffer;let h;d.indexBuffer=u,d.idxFreeList=new m(u.length),d.idxFreeList.allocate(s);for(const i in a.vertexBuffer){const t=e.tileBufferData.geometries[o].vertexBuffer[i];d.vertexBuffers[i].data=t.data,d.vertexBuffers[i].stride=t.stride;const s=Object(c.o)(t.stride),r=t.data.length*s/t.stride;h||(h=r)}d.vtxFreeList=new m(h),d.vtxFreeList.allocate(t)}return n}delete(e){const t=b[e.geometryType];this._freeVertices(t,e.vertexFrom,e.vertexCount),this._freeIndices(t,e.indexFrom,e.indexCount),this._displayList.removeFromList(e),e.vertexFrom=void 0,e.indexFrom=void 0}setMeshData(e,t,s,i,r){const a=b[e.geometryType];e.meshData=null;let n=void 0,o=void 0;void 0===e.vertexFrom?(o=t.vertexCount,n=this._allocateVertices(a,o)):t.vertexCount>e.vertexCount?(this._freeVertices(a,e.vertexFrom,e.vertexCount),o=t.vertexCount,n=this._allocateVertices(a,o)):t.vertexCount===e.vertexCount?(n=e.vertexFrom,o=e.vertexCount):(this._freeVertices(a,e.vertexFrom+t.vertexCount,e.vertexCount-t.vertexCount),n=e.vertexFrom,o=t.vertexCount);let l=!0,d=void 0,u=void 0,h=void 0;if(void 0===e.indexFrom?(d=r,h=t.indexCount,u=this._allocateIndices(a,h)):t.indexCount>e.indexCount?(d=this._displayList.removeFromList(e),this._freeIndices(a,e.indexFrom,e.indexCount),h=t.indexCount,u=this._allocateIndices(a,h)):t.indexCount===e.indexCount?(l=!1,u=e.indexFrom,h=e.indexCount):(d=this._displayList.removeFromList(e),this._freeIndices(a,e.indexFrom+t.indexCount,e.indexCount-t.indexCount),u=e.indexFrom,h=t.indexCount),-1!==n&&-1!==u){const r=this._storageFor(a);if(Object(c.d)(n,u,r.vertexBuffers,r.indexBuffer,t,s,i),e.vertexFrom=n,e.indexFrom=u,e.vertexCount=t.vertexCount,e.indexCount=t.indexCount,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in s)this._dirtyMap.markDirtyVertices(e.geometryType,t,e.vertexFrom,e.vertexCount)}return l&&this._displayList.addToList(e,d),!0}return-1!==n&&this._freeVertices(a,n,o),-1!==u&&this._freeIndices(a,u,h),e.setMeshDataFromBuffers(t,s,i),e.vertexFrom=void 0,e.vertexCount=0,e.indexFrom=void 0,e.indexCount=0,!1}tryAddMeshData(e,t){const s=t.vertexBuffer,i=t.indexBuffer,r=b[e.geometryType],a=this._allocateVertices(r,e.vertexCount);if(-1===a)return this._freeVertices(r,a,e.vertexCount),!1;const n=this._allocateIndices(r,e.indexCount);if(-1===n)return this._freeVertices(r,a,e.vertexCount),this._freeIndices(r,n,e.indexCount),!1;const o=this._storageFor(r);if(Object(c.d)(a,n,o.vertexBuffers,o.indexBuffer,e,s,i),e.vertexFrom=a,e.indexFrom=n,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in s)this._dirtyMap.markDirtyVertices(e.geometryType,t,a,e.vertexCount)}return this._displayList.addToList(e),!0}_allocateVertices(e,t){const s=this._storageFor(e),i=s.vtxFreeList.allocate(t);return-1===i||s.vtxFreeList.fragmentation>.5?-1:i}_freeVertices(e,t,s){this._storageFor(e).vtxFreeList.free(t,s)}_freeIndices(e,t,s){this._storageFor(e).idxFreeList.free(t,s)}_allocateIndices(e,t){const s=this._storageFor(e),i=s.idxFreeList.allocate(t);return-1===i||s.idxFreeList.fragmentation>.5?-1:i}_storageFor(e){return this._freeListsAndStorage[e]}_stridesFor(e,t){return this._strides[e][t]}}var _=x,g=(s(53),s(429),s(474));s(426),s(428);const v=new Set;class D extends u.a{constructor(e,t,s=!1){super(e,t,[n.F,n.F]),this._data=null,this._displayList=null,this._wglBuffers=null,this._deferPatches=!1,this._dirtyMap=new p,this._labelIndex=null,this._lastCommitTime=0,this._patchQueue=new r.a(100),this.fader=new class{constructor(e=400){this.duration=e,this._lastTime=0,this._elapsed=0,this._value=0,this._finished=!1}get value(){return this._value}reset(){this._lastTime=0,this._elapsed=0,this._value=0}step(){const e=performance.now();if(0===this._lastTime)return this._lastTime=e,this._value=0,!0;if(this._elapsed>=this.duration)return!0;const t=e-this._lastTime;return this._elapsed+=t,this._lastTime=e,this._value=Math.min(this._elapsed/this.duration,1),!1}},this._dirty=!0,this._replaceBuffers=!1,this._uploadsLocked=!1,this._hasData=!1,this._invalidated=!1,this.transforms.labelMat2d=Object(l.a)(),this._ensureCorrectZOrder=s,this._deferPatches=!s}destroy(){super.destroy(),this.clear()}get displayObjects(){var e;return null!=(e=this._displayObjects)?e:[]}get isDirty(){return this._dirty}get hasData(){return!!this._hasData}get labelIndex(){return this._labelIndex}set isDirty(e){this._dirty=e,this.requestRender()}getGeometry(e){return this._wglBuffers&&this._wglBuffers.has(e)?this._wglBuffers.get(e):null}getDisplayList(){return this._displayList}setTransform(e,t){super.setTransform(e,t);const s=this.transforms.labelMat2d,i=e.getScreenTransform(s,t),r=Object(d.a)();Object(a.n)(r,this.coords,i),Object(o.d)(s),Object(o.h)(s,s,r),Object(o.e)(s,e.viewMat2d,s)}setData(e){const t=e.addOrUpdate,s=e.remove;e.clear&&(this.clear(),this._patchQueue.clear(),this._hasData=!1),"replace"===e.type&&(this._replaceBuffers=!0,this._patchQueue.clear(),this._data=null),!this._data&&t&&t.tileDisplayData.displayObjects.length?(t.tileDisplayData.computeDisplayList(this._ensureCorrectZOrder),this._dirtyMap=new p,this._dispRecStore=_.fromTileData(t,this._dirtyMap),this._data=t,this._dirtyMap.markAllDirty(),this._hasData=!0,e.end&&this.ready()):this._data&&(t&&t.tileDisplayData.displayObjects.length||s.length)?this._deferPatches?this._patchQueue.enqueue(e):this._doPatchData(e):e.end&&this.ready(),e.end&&!this._data&&this.clear(),this.requestRender(),this.emit("change")}lockUploads(){this._uploadsLocked=!0}unlockUploads(){this._uploadsLocked=!1,this.requestRender()}commitChanges(e){if(!e.time||e.time!==this._lastCommitTime){if(this._lastCommitTime=e.time,this.fader.step()||this.requestRender(),this._patchQueue.size){const e=this._patchQueue.dequeue();Object(i.h)(e)&&(e.end&&this.ready(),this._doPatchData(e),this.requestRender(),this._hasData=!0)}if(this._uploadsLocked)this.requestRender();else if(this.visible&&this._data){if(this._replaceBuffers)for(this._wglBuffers&&this._wglBuffers.dispose(),this._wglBuffers=null,this._replaceBuffers=!1;this._patchQueue.size;){const e=this._patchQueue.dequeue();Object(i.h)(e)&&(e.end&&this.ready(),this._doPatchData(e),this._hasData=!0)}this._wglBuffers||(this._wglBuffers=new class{constructor(e){this.geometryMap=Object(c.e)(()=>({indexBuffer:g.a.createIndex(e,35044),vao:null}),(t,s)=>({vertexBuffer:g.a.createVertex(e,c.a[s])}))}dispose(){for(let e=0;e<5;e++){const t=this.geometryMap[e];if(t){t.data.vao&&t.data.vao.dispose(!1),t.data.indexBuffer&&t.data.indexBuffer.dispose();for(const e in t.buffers)t.buffers[e]&&t.buffers[e].data.vertexBuffer.dispose()}}}get(e){const t=this.geometryMap[e],s={};for(const i in t.buffers)s[i]=t.buffers[i].data.vertexBuffer;return{indexBuffer:t.data.indexBuffer,get vao(){return t.data.vao},set vao(e){t.data.vao=e},vertexBufferMap:s}}has(e){return null!=this.geometryMap[e]}upload(e,t){t.forEach((t,s)=>{this._upload(t,s,e)})}_upload(e,t,s){if(e.indices&&(e.indices.allDirty?this._uploadIndices(s,t):null!=e.indices.from&&null!=e.indices.count&&this._uploadIndices(s,t,e.indices.from,e.indices.count)),e.vertices){const i=e.vertices;for(const e in i){const r=i[e];r.allDirty?this._uploadVertices(s,t,e):null!=r.from&&null!=r.count&&this._uploadVertices(s,t,e,r.from,r.count)}}}_uploadVertices(e,t,s,i,r){const a=this.geometryMap[t];if(!a)return;const n=e.geometries[t].vertexBuffer[s];if(!n)return;const o=n.stride,l=n.data.buffer;a.buffers[s]&&l.byteLength>0&&(null!=i&&null!=r?a.buffers[s].data.vertexBuffer.setSubData(l,i*o,i*o,(i+r)*o):a.buffers[s].data.vertexBuffer.setData(l))}_uploadIndices(e,t,s,i){const r=this.geometryMap[t];if(!r)return;const a=e.geometries[t].indexBuffer.buffer;r.data.indexBuffer&&a.byteLength>0&&(null!=s&&null!=i?r.data.indexBuffer.setSubData(a,4*s,4*s,4*(s+i)):r.data.indexBuffer.setData(a))}}(e.context)),(this._dirtyMap.hasDirty()||this._invalidated)&&(this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),this._rebuildLabelIndex(),this._dirtyMap.markAllClean())}}}clear(){this._data=null,this._displayList=null,this._dispRecStore=null,this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null)}_doPatchData(e){try{if("new"===e.type){if(!e.addOrUpdate)return;this._invalidated=!0;const t=this._bulkAddFeatures(e);t&&(this._dirtyMap.markAllDirty(),this._data.reshuffleV2(e,t.objectIndex,t.recordIndex),this._dispRecStore=_.fromTileData(this._data,this._dirtyMap))}else this._invalidated=!0,this._patchData(e)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=_.fromTileData(this._data,this._dirtyMap))}catch(e){}this.requestRender()}_rebuildLabelIndex(){var e,t;if(null==(e=this._data)||null==(t=e.tileBufferData.geometries[h.d.LABEL])?void 0:t.indexBuffer.length){this.isDirty=!0,this._labelIndex=this._initLabelIndex();for(const e of this.displayObjects)for(const t of e.metrics)this._insertIntoLabelIndex(t)}}_insertIntoLabelIndex(e){e.xBucket<0||e.yBucket<0||e.yBucket>3||e.xBucket>3||this.labelIndex[e.yBucket][e.xBucket].push(e)}_initLabelIndex(){const e=[];for(let t=0;t<n.F/n.d;t++){e.push([]);for(let s=0;s<n.F/n.d;s++)e[t].push([])}return e}_bulkAddFeatures(e){const t=e.addOrUpdate.tileDisplayData.displayObjects,s=this._data.tileDisplayData.displayObjects;for(let i=0;i<t.length;i++){const r=t[i];for(let t=0;t<r.displayRecords.length;++t){const s=r.displayRecords[t],a=e.addOrUpdate.tileBufferData.geometries[s.geometryType];if(!this._dispRecStore.tryAddMeshData(s,a))return{objectIndex:i,recordIndex:t}}this._data.tileDisplayData.hasRegistry&&this._data.tileDisplayData.displayObjectRegistry.set(r.id,r),s.push(r)}return null}_patchData(e){let t=!0;const s=e.addOrUpdate&&e.addOrUpdate.tileDisplayData&&e.addOrUpdate.tileDisplayData.displayObjects||[],i=(e.remove||[]).slice();for(const r of s)null!=r.insertAfter&&i.push(r.id);for(const r of i){const e=this._data.tileDisplayData.displayObjectRegistry.get(r);if(e){this._data.tileDisplayData.displayList.removeFromList(e.displayRecords);for(const s of e.displayRecords)this._dispRecStore.delete(s);this._data.tileDisplayData.displayObjectRegistry.delete(r);const t=this._data.tileDisplayData.displayObjects.indexOf(e);this._data.tileDisplayData.displayObjects.splice(t,1)}}for(const r of s){let s,i=this._data.tileDisplayData.displayObjectRegistry.get(r.id);if(i){const e=i.displayRecords;i.set(r),i.displayRecords=e;const t=i.displayRecords.length;for(let s=0;s<t;++s){const e=i.displayRecords[s],t=r.displayRecords[s];(s>=r.displayRecords.length||e.geometryType!==t.geometryType||e.symbolLevel!==t.symbolLevel||e.zOrder!==t.zOrder||e.materialKey!==t.materialKey)&&(this._dispRecStore.delete(i.displayRecords[s]),s<r.displayRecords.length&&(i.displayRecords[s]=void 0))}i.displayRecords.length=r.displayRecords.length,i.metrics=r.metrics}else{let e;i=r.copy(),i.displayRecords=[],this._data.tileDisplayData.displayObjectRegistry.set(r.id,i);const t=this._data.tileDisplayData.displayObjects;if(null!=i.insertAfter)if(s={},i.insertAfter>=0){const s=this._data.tileDisplayData.displayObjectRegistry.get(i.insertAfter);s?(e=t.indexOf(s)+1,e<t.length?t.splice(e,0,i):(t.push(i),e=t.length)):(t.push(i),e=t.length)}else t.unshift(i),e=0;else t.push(i),e=t.length;if(s){let i;if(this._data.tileDisplayData.displayList.unified)i=r.displayRecords.length>0?1:0;else{v.clear();for(const e of r.displayRecords){const t=this._data.tileDisplayData.displayList.getDPInfoType(e.geometryType);v.add(t)}i=v.size}let a=0;for(let r=e-1;r>=0&&a<i;--r)for(let e=t[r].displayRecords.length-1;e>=0&&a<i;--e){const i=t[r].displayRecords[e],n=this._data.tileDisplayData.displayList.getDPInfoType(i.geometryType);s[n]||(s[n]=i,++a)}}}const a=r.displayRecords.length;for(let n=0;n<a;++n){const a=r.displayRecords[n];let o=i.displayRecords[n];o?(o.meshData=a.meshData,o.materialKey=a.materialKey):(o=a.copy(),o.vertexFrom=void 0,o.indexFrom=void 0,i.displayRecords[n]=o);const l=a.geometryType,d=this._data.tileDisplayData.displayList.getDPInfoType(l),u=e.addOrUpdate.tileBufferData.geometries[l],h=u.vertexBuffer,c=u.indexBuffer;let f=void 0;s&&(f=s[d]?this._data.tileDisplayData.displayList.splitAfter(s[d]):-1),t=this._dispRecStore.setMeshData(o,a,h,c,f)&&t,s&&null!=o.indexFrom&&null!=o.indexFrom&&(s[d]=o)}}return t}}},475:function(e,t,s){"use strict";s.d(t,"a",(function(){return F}));var i=s(421),r=class{constructor(){this._byGeometryType=null}get satisfied(){return!this._byGeometryType}reset(){this._byGeometryType=null}verticesFor(e){return this._byGeometryType?this._byGeometryType[e].vertices:0}indicesFor(e){return this._byGeometryType?this._byGeometryType[e].indices:0}needMore(e,t,s){if(!t&&!s)return;this._byGeometryType||(this._byGeometryType=[{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0}]);const i=this._byGeometryType[e];i.vertices+=t,i.indices+=s}};class a{constructor(){this.geometries=[{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}}]}clone(){const e=new a;for(let t=0;t<this.geometries.length;t++){const s=this.geometries[t],i=e.geometries[t];i.indexBuffer=s.indexBuffer.slice(),i.vertexBuffer={};for(const e in s.vertexBuffer){const{data:t,stride:r}=s.vertexBuffer[e];i.vertexBuffer[e]={data:t.slice(),stride:r}}}return e}static deserialize(e){const t=new a;for(let s=0;s<5;++s){t.geometries[s].indexBuffer=new Uint32Array(e.geometries[s].indexBuffer),t.geometries[s].vertexBuffer={};for(const r in e.geometries[s].vertexBuffer)t.geometries[s].vertexBuffer[r]={data:Object(i.c)(e.geometries[s].vertexBuffer[r].data,e.geometries[s].vertexBuffer[r].stride),stride:e.geometries[s].vertexBuffer[r].stride}}return t}serialize(){const e={geometries:[{indexBuffer:this.geometries[0].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[1].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[2].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[3].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[4].indexBuffer.buffer,vertexBuffer:{}}]};for(let t=0;t<5;++t)for(const s in this.geometries[t].vertexBuffer)e.geometries[t].vertexBuffer[s]={data:this.geometries[t].vertexBuffer[s].data.buffer,stride:this.geometries[t].vertexBuffer[s].stride};return e}getBuffers(){const e=[];for(let t=0;t<5;++t){e.push(this.geometries[t].indexBuffer.buffer);for(const s in this.geometries[t].vertexBuffer)e.push(this.geometries[t].vertexBuffer[s].data.buffer)}return e}}var n=a,o=s(440),l=s(4),d=s(420);const u=l.a.getLogger("esri.views.2d.engine.webgl.WGLDisplayList");function h(e,t,s,...i){t<e.length?e.splice(t,s,...i):e.push(...i)}const c=new Map;c.set(d.c.MAP,[d.d.FILL,d.d.LINE,d.d.MARKER,d.d.TEXT]),c.set(d.c.LABEL,[d.d.LABEL]),c.set(d.c.LABEL_ALPHA,[d.d.LABEL]);class f{constructor(e=!1){this.symbolLevels=[],this.unified=e}replay(e,t,s){if(this.unified)for(const i of this.symbolLevels)for(const r of i.zLevels){const i=r.geometryDPInfo.unified;if(i)for(const r of i){const i=e.painter.getGeometryBrush(r.geometryType),a=t.getGeometry(r.geometryType);i.prepareState(e,t),i.drawGeometry(e,t,r,a,s)}}}get empty(){return!this.symbolLevels||0===this.symbolLevels.length}clear(){this.symbolLevels.length=0}addToList(e,t){if(Array.isArray(e))for(const s of e)this._addToList(s,t);else this._addToList(e,t)}removeFromList(e){Array.isArray(e)||(e=[e]);let t=null;for(const s of e)t=this._removeFromList(s);return t}byType(e,t){for(const s of this.symbolLevels)for(const i of s.zLevels){const s=i.geometryDPInfo,r=this.getDPInfoType(e);if(s[r])for(const e of s[r])t(e)}}clone(){const e=new f(this.unified);for(const t of this.symbolLevels)e.symbolLevels.push(t.clone());return e}splitAfter(e){const t=this._getDisplayList(e.symbolLevel,e.zOrder,e.geometryType),s=t.length,i=e.indexFrom+e.indexCount;for(let r=0;r<s;++r){const s=t[r];if(s.geometryType===e.geometryType&&i>s.indexFrom&&i<=s.indexFrom+s.indexCount){if(i<s.indexFrom+s.indexCount){const e=new p;e.geometryType=s.geometryType,e.materialKey=s.materialKey,e.indexFrom=i,e.indexCount=s.indexFrom+s.indexCount-i,t.splice(r+1,0,e),s.indexCount=i-s.indexFrom}return r}}}_addToList(e,t){const s=e.symbolLevel,i=e.zOrder,r=this._getDisplayList(s,i,e.geometryType),a=null!=t?t:r.length-1,n=a>=0&&a<r.length?r[a]:null;if(null===n||n.materialKey!==e.materialKey||n.indexFrom+n.indexCount!==e.indexFrom||this.unified&&n.geometryType!==e.geometryType){const t=new p;t.indexFrom=e.indexFrom,t.indexCount=e.indexCount,t.materialKey=e.materialKey,t.geometryType=e.geometryType,h(r,a+1,0,t)}else n.indexCount+=e.indexCount}_removeFromList(e){const t=e.symbolLevel,s=e.zOrder,i=this._getDisplayList(t,s,e.geometryType),r=i.length;let a=void 0;for(let n=0;n<r;++n){const t=i[n];if(e.indexFrom+e.indexCount>t.indexFrom&&e.indexFrom<t.indexFrom+t.indexCount&&(!this.unified||t.geometryType===e.geometryType)){a=n;break}}if(void 0!==a){const t=i[a];if(e.indexFrom===t.indexFrom)return t.indexCount-=e.indexCount,t.indexFrom+=e.indexCount,0===t.indexCount&&h(i,a,1),a-1;if(e.indexFrom+e.indexCount===t.indexFrom+t.indexCount)return t.indexCount-=e.indexCount,0===t.indexCount?(h(i,a,1),a-1):a;{const s=t.indexFrom,r=e.indexFrom-t.indexFrom,n=e.indexCount,o=t.indexFrom+t.indexCount-(e.indexFrom+e.indexCount);t.indexCount=r;const l=new p;return l.geometryType=t.geometryType,l.materialKey=t.materialKey,l.indexFrom=s+r+n,l.indexCount=o,h(i,a+1,0,l),a}}return null}_getDisplayList(e,t,s){let i;const r=this.symbolLevels.length;for(let l=0;l<r;l++)if(this.symbolLevels[l].symbolLevel===e){i=this.symbolLevels[l];break}let a;i||(i=new b,i.symbolLevel=e,this.symbolLevels.push(i));const n=i.zLevels.length;for(let l=0;l<n;l++)if(i.zLevels[l].zLevel===t){a=i.zLevels[l];break}let o;if(a||(a=new m,a.geometryDPInfo=new y,a.zLevel=t,i.zLevels.push(a)),this.unified)a.geometryDPInfo.unified||(a.geometryDPInfo.unified=[]),o=a.geometryDPInfo.unified;else switch(s){case d.d.FILL:a.geometryDPInfo.fill||(a.geometryDPInfo.fill=[]),o=a.geometryDPInfo.fill;break;case d.d.LINE:a.geometryDPInfo.line||(a.geometryDPInfo.line=[]),o=a.geometryDPInfo.line;break;case d.d.MARKER:a.geometryDPInfo.marker||(a.geometryDPInfo.marker=[]),o=a.geometryDPInfo.marker;break;case d.d.TEXT:a.geometryDPInfo.text||(a.geometryDPInfo.text=[]),o=a.geometryDPInfo.text;break;case d.d.LABEL:a.geometryDPInfo.label||(a.geometryDPInfo.label=[]),o=a.geometryDPInfo.label;break;default:console.error("Trying to add a record with geometry type '"+s+"'.")}return o}getDPInfoType(e){if(this.unified)return"unified";switch(e){case d.d.FILL:return"fill";case d.d.LINE:return"line";case d.d.MARKER:return"marker";case d.d.TEXT:return"text";case d.d.LABEL:return"label";default:return void u.error("DisplayList: Tried to convert unknown geometryType: "+e)}}}class p{constructor(){this.materialKey=null,this.indexFrom=0,this.indexCount=0}clone(){const e=new p;return e.geometryType=this.geometryType,e.materialKey=this.materialKey,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e}}class y{constructor(){this.fill=null,this.line=null,this.marker=null,this.text=null,this.label=null,this.unified=null}clone(){const e=new y;return e.fill=this.fill&&this.fill.map(e=>e.clone()),e.line=this.line&&this.line.map(e=>e.clone()),e.marker=this.marker&&this.marker.map(e=>e.clone()),e.text=this.text&&this.text.map(e=>e.clone()),e.label=this.label&&this.label.map(e=>e.clone()),e.unified=this.unified&&this.unified.map(e=>e.clone()),e}}class m{constructor(){this.geometryDPInfo=new y}clone(){const e=new m;return e.zLevel=this.zLevel,e.geometryDPInfo=this.geometryDPInfo.clone(),e}}class b{constructor(){this.zLevels=[]}clone(){const e=new b;e.symbolLevel=this.symbolLevel;for(const t of this.zLevels)e.zLevels.push(t.clone());return e}}var x=f,_=s(433),g=s(453);function v(e){const t=[[],[],[],[],[]],s=e;for(const i of s)for(const e of i.displayRecords)t[e.geometryType].push(e);return t}class D{constructor(){}get hasRegistry(){return!!this._displayObjectRegistry}get displayObjectRegistry(){if(!this._displayObjectRegistry){this._displayObjectRegistry=new Map;for(const e of this.displayObjects)this._displayObjectRegistry.set(e.id,e)}return this._displayObjectRegistry}get displayList(){return this._displayList}computeDisplayList(e){if(this._displayList=new x(e),e)for(const t of this.displayObjects)for(const e of t.displayRecords)this._displayList.addToList(e);else{const e=v(this.displayObjects),t=e.length;for(let s=0;s<t;++s){const t=e[s];this._displayList.addToList(t)}}}clone(){const e=new D;return this.displayObjects&&(e.displayObjects=this.displayObjects.map(e=>e.clone())),e}serialize(e){return Object(_.b)(e,this.displayObjects),e}_deserializeObjects(e){const t=e.readInt32(),s=new Array(t),i=new Map;for(let r=0;r<s.length;++r){const t=g.a.deserialize(e);s[r]=t,i.set(t.id,t)}this.displayObjects=s,this._displayList=null,this._displayObjectRegistry=i}static deserialize(e){const t=new D;return t._deserializeObjects(e),t}}var O=D,w=s(441),B=s(461),T=s(459);const j=new r,R=new r;function L(e,t){const s={};for(const r in e){const a={data:Object(i.b)(t,e[r]),stride:e[r]};s[r]=a}return s}class F{constructor(){this.tileDisplayData=null,this.tileBufferData=null}reshuffle(){j.reset();const e=v(this.tileDisplayData.displayObjects);for(const i of e)for(const e of i)e&&j.needMore(e.geometryType,e.meshData?e.meshData.vertexCount:e.vertexCount,e.meshData?e.meshData.indexData.length:e.indexCount);const t=e.length,s=new n;for(let r=0;r<t;++r){s.geometries[r].indexBuffer=new Uint32Array(Math.round(1.5*j.indicesFor(r)));const e=[];for(const s in this.tileBufferData.geometries[r].vertexBuffer)e.push(this.tileBufferData.geometries[r].vertexBuffer[s].stride);const t=F._computeVertexAlignment(e),a=Math.round(1.5*j.verticesFor(r)),n=F._align(a,t);for(const o in this.tileBufferData.geometries[r].vertexBuffer){const e=this.tileBufferData.geometries[r].vertexBuffer[o].stride;s.geometries[r].vertexBuffer[o]={stride:e,data:Object(i.b)(n,e)}}}R.reset(),this.tileDisplayData.displayList.clear();for(let r=0;r<t;++r){const t=e[r];for(const e of t){if(e.meshData)e.writeMeshDataToBuffers(R.verticesFor(r),s.geometries[r].vertexBuffer,R.indicesFor(r),s.geometries[r].indexBuffer),e.meshData=null;else{const t=this.tileBufferData.geometries[r].vertexBuffer,a=this.tileBufferData.geometries[r].indexBuffer,n=s.geometries[r].vertexBuffer,o=s.geometries[r].indexBuffer,l=R.verticesFor(r),d=R.indicesFor(r);Object(i.d)(l,d,n,o,e,t,a),e.vertexFrom=l,e.indexFrom=d}R.needMore(r,e.vertexCount,e.indexCount)}this.tileDisplayData.displayList.unified||this.tileDisplayData.displayList.addToList(t)}if(this.tileDisplayData.displayList.unified)for(const i of this.tileDisplayData.displayObjects)this.tileDisplayData.displayList.addToList(i.displayRecords);this.tileBufferData=s}reshuffleV2(e,t,s){const r=e.addOrUpdate.tileDisplayData.displayObjects,a=this.tileDisplayData.displayObjects;j.reset();for(let i=0;i<a.length;i++){const e=a[i];for(let t=0;t<e.displayRecords.length;t++){const s=e.displayRecords[t];j.needMore(s.geometryType,s.vertexCount,s.indexCount)}}for(let i=t;i<r.length;i++){const e=r[i];for(let r=i===t?s:0;r<e.displayRecords.length;r++){const t=e.displayRecords[r];j.needMore(t.geometryType,t.vertexCount,t.indexCount)}}const o=new n;for(let n=0;n<5;n++){o.geometries[n].indexBuffer=new Uint32Array(Math.round(1.5*j.indicesFor(n)));const e=[],t=this.tileBufferData.geometries[n].vertexBuffer;for(const i in t)e.push(t[i].stride);const s=F._computeVertexAlignment(e),r=Math.round(1.5*j.verticesFor(n)),a=F._align(r,s);for(const l in t){const e=t[l].stride,s=Object(i.b)(a,e);o.geometries[n].vertexBuffer[l]={stride:e,data:s}}}R.reset(),this.tileDisplayData.displayList.clear();for(let n=0;n<a.length;n++){const e=a[n];for(let t=0;t<e.displayRecords.length;t++){const s=e.displayRecords[t],r=s.geometryType,a=this.tileBufferData.geometries[r].vertexBuffer,n=this.tileBufferData.geometries[r].indexBuffer,l=o.geometries[r].vertexBuffer,d=o.geometries[r].indexBuffer,u=R.verticesFor(r),h=R.indicesFor(r);Object(i.d)(u,h,l,d,s,a,n),s.vertexFrom=u,s.indexFrom=h,R.needMore(r,s.vertexCount,s.indexCount),this.tileDisplayData.displayList.addToList(s)}}if(0!==s){const e=r[t];for(let t=0;t<s;t++){const s=e.displayRecords[t],r=s.geometryType,a=this.tileBufferData.geometries[r].vertexBuffer,n=this.tileBufferData.geometries[r].indexBuffer,l=o.geometries[r].vertexBuffer,d=o.geometries[r].indexBuffer,u=R.verticesFor(r),h=R.indicesFor(r);Object(i.d)(u,h,l,d,s,a,n),s.vertexFrom=u,s.indexFrom=h,R.needMore(r,s.vertexCount,s.indexCount),this.tileDisplayData.displayList.addToList(s)}}for(let n=t;n<r.length;n++){const a=r[n];for(let r=n===t?s:0;r<a.displayRecords.length;r++){const t=a.displayRecords[r],s=t.geometryType,n=e.addOrUpdate.tileBufferData.geometries[s],l=n.vertexBuffer,d=n.indexBuffer,u=o.geometries[s].vertexBuffer,h=o.geometries[s].indexBuffer,c=R.verticesFor(s),f=R.indicesFor(s);Object(i.d)(c,f,u,h,t,l,d),t.vertexFrom=c,t.indexFrom=f,R.needMore(s,t.vertexCount,t.indexCount),this.tileDisplayData.displayList.addToList(t)}this.tileDisplayData.hasRegistry&&this.tileDisplayData.displayObjectRegistry.set(a.id,a),this.tileDisplayData.displayObjects.push(a)}this.tileBufferData=o}getStrides(){const e=[];for(let t=0;t<this.tileBufferData.geometries.length;++t){const s=this.tileBufferData.geometries[t];e[t]={};for(const i in s.vertexBuffer)e[t][i]=s.vertexBuffer[i].stride}return e}clone(){const e=new F;return e.tileBufferData=this.tileBufferData.clone(),e.tileDisplayData=this.tileDisplayData.clone(),e}_guessSize(){const{displayObjects:e}=this.tileDisplayData,t=Math.min(e.length,4);let s=0;for(let i=0;i<t;i++)s=Math.max(s,e[i].displayRecords.length);return 2*(12*e.length+e.length*s*40)}serialize(){const e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),s=this.tileDisplayData.serialize(new w.a(Int32Array,this._guessSize())).buffer();return t.push(s),{result:{displayData:s,bufferData:e},transferList:t}}static decode(e){const t=B.a.deserializeDisplayObjects(e),s={};for(const i in e.vertexBuffersMap)s[i]=T.a.decode(e.vertexBuffersMap[i]);return F.fromMeshData({displayObjects:t,vertexBuffersMap:s})}static fromMeshData(e){const t=new F,s=new O,i=new n;s.displayObjects=e.displayObjects;for(const r in e.vertexBuffersMap){const t=e.vertexBuffersMap[r];i.geometries[r].indexBuffer=t.indexBuffer,i.geometries[r].vertexBuffer=t.namedBuffers}return t.tileDisplayData=s,t.tileBufferData=i,t}static bind(e,t){const s=new F;return s.tileDisplayData=e,s.tileBufferData=t,s}static create(e,t){const s=new F;s.tileDisplayData=new O,s.tileDisplayData.displayObjects=e;const i=[0,0,0,0,0],r=[0,0,0,0,0],a=[[],[],[],[],[]];for(const n of e)for(const e of n.displayRecords)a[e.geometryType].push(e),i[e.geometryType]+=e.meshData.vertexCount,r[e.geometryType]+=e.meshData.indexData.length;const l=new n,d=function(e){return[e.fill||{},e.line||{},e.icon||{},e.text||{},e.label||{}]}(t);for(let n=0;n<5;n++){const e=new Uint32Array(r[n]),t=L(d[n],i[n]);o.a.writeAllMeshDataToBuffers(a[n],t,e),l.geometries[n]={indexBuffer:e,vertexBuffer:t}}return s.tileBufferData=l,s}static _align(e,t){const s=e%t;return 0===s?e:e+(t-s)}static _computeVertexAlignment(e){let t=!1,s=!1;for(const i of e)i%4==2?t=!0:i%4!=0&&(s=!0);return s?4:t?2:1}}},481:function(e,t,s){"use strict";var i=s(6);t.a=class{constructor(e=Number.POSITIVE_INFINITY){this.size=0,this._start=0,this.maxSize=e,this._buffer=isFinite(e)?new Array(e):[]}get entries(){return this._buffer}enqueue(e){if(this.size===this.maxSize){const t=this._buffer[this._start];return this._buffer[this._start]=e,this._start=(this._start+1)%this.maxSize,t}return isFinite(this.maxSize)?this._buffer[(this._start+this.size++)%this.maxSize]=e:this._buffer[this._start+this.size++]=e,null}dequeue(){if(0===this.size)return null;const e=this._buffer[this._start];return this._buffer[this._start]=null,this.size--,this._start=(this._start+1)%this.maxSize,e}clear(){for(;Object(i.h)(this.dequeue()););}}},487:function(e,t,s){"use strict";s.d(t,"a",(function(){return f})),s.d(t,"b",(function(){return d}));var i=s(6),r=s(22),a=s(419),n=s(420),o=s(424),l=s(451);function d(e,t){if(!e||!t)return e;switch(t){case"radius":case"distance":return 2*e;case"diameter":case"width":return e;case"area":return Math.sqrt(e)}return e}function u(e){return e.map(e=>function(e){return{value:e.value,size:Object(r.f)(e.size)}}(e))}function h(e){if("string"==typeof e||"number"==typeof e)return Object(r.f)(e);const t=e;return{type:"size",expression:t.expression,stops:u(t.stops)}}const c=e=>{const t=[],s=[],i=u(e),n=i.length;for(let o=0;o<6;o++){const e=i[Math.min(o,n-1)];t.push(e.value),s.push(null==e.size?a.p:Object(r.d)(e.size))}return{values:new Float32Array(t),sizes:new Float32Array(s)}};function f(e){const t=e&&e.length>0?{}:null,s=t?{}:null;if(!t)return{vvFields:t,vvRanges:s};for(const i of e)if(i.field&&(t[i.type]=i.field),"size"===i.type){s.size||(s.size={});const e=i;switch(Object(l.a)(e)){case n.e.SIZE_MINMAX_VALUE:s.size.minMaxValue={minDataValue:e.minDataValue,maxDataValue:e.maxDataValue,minSize:h(e.minSize),maxSize:h(e.maxSize)};break;case n.e.SIZE_SCALE_STOPS:s.size.scaleStops={stops:u(e.stops)};break;case n.e.SIZE_FIELD_STOPS:if(e.levels){const t={};for(const s in e.levels)t[s]=c(e.levels[s]);s.size.fieldStops={type:"level-dependent",levels:t}}else s.size.fieldStops={type:"static",...c(e.stops)};break;case n.e.SIZE_UNIT_VALUE:s.size.unitValue={unit:e.valueUnit,valueRepresentation:e.valueRepresentation}}}else if("color"===i.type)s.color=m(i);else if("opacity"===i.type)s.opacity=p(i);else if("rotation"===i.type){const e=i;s.rotation={type:e.rotationType}}return{vvFields:t,vvRanges:s}}function p(e){const t={values:[0,0,0,0,0,0,0,0],opacities:[0,0,0,0,0,0,0,0]};if("string"==typeof e.field){if(!e.stops)return null;{if(e.stops.length>8)return null;const s=e.stops;for(let e=0;e<8;++e){const i=s[Math.min(e,s.length-1)];t.values[e]=i.value,t.opacities[e]=i.opacity}}}else{if(!(e.stops&&e.stops.length>=0))return null;{const s=e.stops&&e.stops.length>=0&&e.stops[0].opacity;for(let e=0;e<8;e++)t.values[e]=1/0,t.opacities[e]=s}}return t}function y(e,t,s){e[4*t+0]=s.r/255,e[4*t+1]=s.g/255,e[4*t+2]=s.b/255,e[4*t+3]=s.a}function m(e){if(Object(i.g)(e))return null;if(e.normalizationField)return null;const t={field:null,values:[0,0,0,0,0,0,0,0],colors:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]};if("string"==typeof e.field){if(!e.stops)return null;{if(e.stops.length>8)return null;t.field=e.field;const s=e.stops;for(let e=0;e<8;++e){const i=s[Math.min(e,s.length-1)];t.values[e]=i.value,y(t.colors,e,i.color)}}}else{if(!(e.stops&&e.stops.length>=0))return null;{const s=e.stops&&e.stops.length>=0&&e.stops[0].color;for(let e=0;e<8;e++)t.values[e]=1/0,y(t.colors,e,s)}}for(let s=0;s<32;s+=4)Object(o.b)(t.colors,s,!0);return t}},501:function(e,t,s){"use strict";s.d(t,"a",(function(){return z}));var i=s(8),r=s(99),a=s(238),n=s(475),o=s(471),l=s(5),d=s(6),u=s(4),h=s(14),c=s(419),f=(s(429),s(438)),p=s(426),y=(s(428),s(421)),m=s(455);const b=u.a.getLogger("esri.views.2d.engine.webgl.AttributeStoreView"),x=Object(m.b)(m.a,b),_=e=>2147483647&e;class g{constructor(e,t,s){this._texture=null,this._lastTexture=null,this._fbos={},this.texelSize=4;const{buffer:i,pixelType:r,textureOnly:a}=e,n=Object(y.i)(r);this.shared=s,this.pixelType=r,this.size=t,this.textureOnly=a,a||(this.data=new n(Object(d.n)(i))),this._resetRange()}destroy(){Object(d.a)(this._texture,e=>e.dispose());for(const e in this._fbos)Object(d.a)(this._fbos[e],t=>{"0"===e&&t.detachColorTexture(),t.dispose()}),this._fbos[e]=null;this._texture=null}get _textureDesc(){return{target:3553,wrapMode:33071,pixelFormat:6408,dataType:this.pixelType,samplingMode:9728,width:this.size,height:this.size}}setData(e,t,s){const i=_(e),r=Object(d.n)(this.data),a=i*this.texelSize+t;!r||a>=r.length||(r[a]=s,this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,i))}getData(e,t){if(Object(d.g)(this.data))return null;const s=_(e)*this.texelSize+t;return!this.data||s>=this.data.length?null:this.data[s]}getTexture(e){return Object(d.o)(this._texture,()=>this._initTexture(e))}getFBO(e,t=0){if(Object(d.g)(this._fbos[t])){const s={colorTarget:0,depthStencilTarget:0},i=0===t?this.getTexture(e):this._textureDesc;this._fbos[t]=new p.a(e,s,i)}return this._fbos[t]}get locked(){return!(5121!==this.pixelType||!this.shared||this.textureOnly||!Object(l.a)("esri-atomics")||!this.data)&&1===Atomics.load(this.data,0)}updateTexture(e){if(!this.locked)try{const t=this.dirtyStart,s=this.dirtyEnd;if(t>s)return;this._resetRange();const i=Object(d.n)(this.data).buffer,r=this.getTexture(e),a=4,n=(t-t%this.size)/this.size,o=(s-s%this.size)/this.size,l=n,u=this.size,c=o,f=n*this.size*a,p=(u+c*this.size)*a-f,m=Object(y.i)(this.pixelType),x=m.BYTES_PER_ELEMENT;try{new m(i,f*x,p)}catch(e){console.debug(e)}const _=new m(i,f*x,p),g=this.size,v=c-l+1;if(v>this.size)return void b.error(new h.a("mapview-webgl","Out-of-bounds index when updating AttributeData"));r.updateData(0,0,l,g,v,_)}catch(e){console.debug(e)}}update(e){const{data:t,start:s,end:i}=e;if(Object(d.h)(t)){const i=this.data,r=s*this.texelSize;for(let s=0;s<t.length;s++){const a=1<<s%this.texelSize;e.layout&a&&(i[r+s]=t[s])}}this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,i)}resize(e,t){const s=this.size;if(this.size=t,this.textureOnly)return void(s!==this.size&&(this._lastTexture=this._texture,this._texture=null));const i=Object(y.i)(this.pixelType);this.destroy(),this.data=new i(Object(d.n)(e.buffer))}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}_initTexture(e){const t=new f.a(e,this._textureDesc,Object(d.o)(this.data,void 0));if(Object(d.h)(this._lastTexture)&&this._fbos[0]){const s=this._lastTexture.descriptor.width,i=this._lastTexture.descriptor.height,r=this._lastTexture.descriptor.dataType,a=this._lastTexture.descriptor.pixelFormat,n=this.getFBO(e),o=Object(y.j)(r),l=new(Object(y.i)(r))(new ArrayBuffer(s*i*o*this.texelSize)),d=e.getBoundFramebufferObject(),{x:u,y:h,width:c,height:f}=e.getViewport();e.bindFramebuffer(n),n.readPixels(0,0,s,i,a,r,l),t.updateData(0,0,0,2*s,i/2,l),e.setViewport(u,h,c,f),e.bindFramebuffer(d)}return this.destroy(),this._texture=t,this._texture}}class v{constructor(){this._initialized=!1,this._forceNextUpload=!1,this._locked=!1}initialize(e){const{blocks:t,shared:s,size:i}=e;if(this.shared=s,this.size=i,x("Initializing AttributeStoreView",e),Object(d.g)(this._data))this._data=Object(d.j)(t,e=>new g(e,i,s));else for(let r=0;r<this._data.length;r++){const e=this._data[r],a=t[r];Object(d.h)(a)&&(Object(d.g)(e)?this._data[r]=new g(a,i,s):e.resize(a,i))}this._initialized=!0}destroy(){Object(d.a)(this._data,e=>Object(d.j)(e,e=>e.destroy())),Object(d.a)(this._defaultTexture,e=>e.dispose())}getBlock(e){return Object(d.g)(this._data)?null:this._data[e]}setLabelMinZoom(e,t){this.setData(e,0,1,t)}getLabelMinZoom(e){return this.getData(e,0,1,255)}getFilterFlags(e){return this.getData(e,0,0,0)}getVVSize(e){return this.getData(e,c.b,0,0)}getData(e,t,s,i){if(!this._data)return 0;const r=Object(d.n)(this._data)[t];if(Object(d.g)(r))return 0;const a=r.getData(e,s);return Object(d.h)(a)?a:i}setData(e,t,s,i){const r=Object(d.n)(this._data)[t];Object(d.n)(r).setData(e,s,i)}lockTextureUpload(){this._locked=!0}unlockTextureUpload(){this._locked=!1}forceTextureUpload(){this._forceNextUpload=!0}async requestUpdate(e){if(this._pendingAttributeUpdate)return void b.error(new h.a("mapview-webgl","Tried to update attribute data with a pending update"));const t=Object(i.g)();return x("AttributeStoreView Update Requested",e),this._pendingAttributeUpdate={data:e,resolver:t},t.promise}update(){if(this._initialized&&Object(d.h)(this._pendingAttributeUpdate)){const{data:e,resolver:t}=this._pendingAttributeUpdate,s=Object(d.n)(this._data);for(let i=0;i<e.blocks.length;i++){const t=e.blocks[i],r=s[i];Object(d.a)(r,e=>Object(d.a)(t,t=>{x("Updating block "+i,t),e.update(t)}))}this._pendingAttributeUpdate=null,t()}}bindTextures(e){this.update();const t=this._getDefaultTexture(e);if(!this._initialized)return e.bindTexture(t,c.s),e.bindTexture(t,c.t),e.bindTexture(t,c.u),void e.bindTexture(t,c.v);const s=Object(d.n)(this._data);this._locked&&!this._forceNextUpload||(Object(d.e)(s,t=>t.updateTexture(e)),this._forceNextUpload=!1),e.bindTexture(Object(d.k)(s[0],t,t=>t.getTexture(e)),c.s),e.bindTexture(Object(d.k)(s[1],t,t=>t.getTexture(e)),c.t),e.bindTexture(Object(d.k)(s[2],t,t=>t.getTexture(e)),c.u),e.bindTexture(Object(d.k)(s[3],t,t=>t.getTexture(e)),c.v)}_getDefaultTexture(e){if(Object(d.g)(this._defaultTexture)){const t={wrapMode:33071,pixelFormat:6408,dataType:5121,samplingMode:9728,width:1,height:1};this._defaultTexture=new f.a(e,t,new Uint8Array(4))}return this._defaultTexture}}var D=s(454),O=s(26),w=s(22),B=s(42),T=s(183),j=s(309),R=s(512);function L(e,t){const s=t.length;if(e<t[0].value||1===s)return t[0].size;for(let i=1;i<s;i++)if(e<t[i].value){const s=(e-t[i-1].value)/(t[i].value-t[i-1].value);return t[i-1].size+s*(t[i].size-t[i-1].size)}return t[s-1].size}function F(e,t,s=0){if(Object(d.g)(t))return e[s+0]=0,e[s+1]=0,e[s+2]=0,void(e[s+3]=0);const{r:i,g:r,b:a,a:n}=t;e[s+0]=i*n/255,e[s+1]=r*n/255,e[s+2]=a*n/255,e[s+3]=n}const C=(e,t,s)=>{const i=16*s;for(let r=i,a=0;r<Math.min(i+16,e.length);r++,a++)e[r]=t[a]},M=Object(R.b)();class I{constructor(){this.symbolLevels=[],this.vvColorValues=new Float32Array(8),this.vvColors=new Float32Array(32),this.vvOpacityValues=new Float32Array(8),this.vvOpacities=new Float32Array(8),this.vvSizeMinMaxValue=new Float32Array(4),this.ddColors=new Float32Array(32),this.ddBackgroundColor=new Float32Array(4),this.ddActiveDots=new Float32Array(8),this.insideEffect=new Float32Array(16*c.o),this.insideOpacity=1,this.outsideEffect=new Float32Array(16*c.o),this.outsideOpacity=1,this.effectCount=0,this._vvMaterialParameters={vvSizeEnabled:!1,vvColorEnabled:!1,vvRotationEnabled:!1,vvRotationType:"geographic",vvOpacityEnabled:!1},this._buf0=new Float32Array(2),this._buf1=new Float32Array(2),this.symbolLevels.push(0);for(let e=0;e<c.o;e++)C(this.insideEffect,M,e),C(this.outsideEffect,M,e)}get insideOpacities(){return this._buf0[0]=1,this._buf0[1]=this.insideOpacity,this._buf0}get outsideOpacities(){return this._buf1[0]=0,this._buf1[1]=this.outsideOpacity,this._buf1}getSizeVVFieldStops(e){const t=this._vvSizeFieldStops;switch(t.type){case"static":return t;case"level-dependent":return Object(d.o)(t.levels[e],()=>{let s=1/0,i=0;for(const l in t.levels){const t=parseFloat(l),r=Math.abs(e-t);r<s&&(s=r,i=t)}if(s===1/0)return{sizes:new Float32Array([0,0,0,0,0,0]),values:new Float32Array([0,0,0,0,0,0])};const r=e-i,a=Math.pow(2,r/2),n=Object(d.n)(t.levels[i]),o=new Float32Array(n.values);return o[2]*=a,o[3]*=a,{sizes:Object(d.n)(n.sizes),values:o}})}}get vvMaterialParameters(){return this._vvMaterialParameters}update(e){Object(d.h)(this._vvInfo)&&this._updateVisualVariables(this._vvInfo.vvRanges,e)}setInfo(e,t,s){switch(Object(d.h)(s)?(s.forEach((e,t)=>this._updateEffects(t,e)),this.effectCount=s.length):this.effectCount=0,this._vvInfo=t,e.type){case"dot-density":this._updateDotDensityInfo(e)}}getVariation(){return{ddDotBlending:this.ddDotBlending,outsideLabelsVisible:this.outsideLabelsVisible,effectCount:this.effectCount,oesTextureFloat:Object(j.a)().supportsTextureFloat}}getVariationHash(){return(this.ddDotBlending?1:0)|(this.outsideLabelsVisible?1:0)<<1|this.effectCount<<2}_updateEffects(e,t){const s=e+1;if(Object(d.h)(t)&&t.filter&&t.filter.enabled){this.outsideLabelsVisible=t.excludedLabelsVisible;const{parsedIncludedEffect:e,parsedExcludedEffect:i}=t;Object(d.h)(e)?(C(this.insideEffect,e.getColorMatrix(),s),this.insideOpacity=e.getOpacity()):(C(this.insideEffect,M,s),this.insideOpacity=1),Object(d.h)(i)?(C(this.outsideEffect,i.getColorMatrix(),s),this.outsideOpacity=i.getOpacity()):(C(this.outsideEffect,M,s),this.outsideOpacity=1)}else C(this.insideEffect,M,s),C(this.outsideEffect,M,s),this.insideOpacity=1,this.outsideOpacity=1}_updateVisualVariables(e,t){const s=this._vvMaterialParameters;if(s.vvOpacityEnabled=!1,s.vvSizeEnabled=!1,s.vvColorEnabled=!1,s.vvRotationEnabled=!1,!e)return;const i=e.size;if(i){if(s.vvSizeEnabled=!0,i.minMaxValue){const e=i.minMaxValue;let s,r;if(Object(y.m)(e.minSize)&&Object(y.m)(e.maxSize))if(Object(y.n)(e.minSize)&&Object(y.n)(e.maxSize))s=Object(w.d)(e.minSize),r=Object(w.d)(e.maxSize);else{const i=t.scale;s=Object(w.d)(L(i,e.minSize.stops)),r=Object(w.d)(L(i,e.maxSize.stops))}this.vvSizeMinMaxValue.set([e.minDataValue,e.maxDataValue,s,r])}if(i.scaleStops&&(this.vvSizeScaleStopsValue=Object(w.d)(L(t.scale,i.scaleStops.stops))),i.unitValue){const e=Object(B.c)(t.spatialReference)/T.a[i.unitValue.unit];this.vvSizeUnitValueToPixelsRatio=e/t.resolution}i.fieldStops&&(this._vvSizeFieldStops=i.fieldStops)}const r=e.color;r&&(s.vvColorEnabled=!0,this.vvColorValues.set(r.values),this.vvColors.set(r.colors));const a=e.opacity;a&&(s.vvOpacityEnabled=!0,this.vvOpacityValues.set(a.values),this.vvOpacities.set(a.opacities));const n=e.rotation;n&&(s.vvRotationEnabled=!0,s.vvRotationType=n.type)}_updateDotDensityInfo(e){const t=e.attributes;this.ddDotValue=e.dotValue,this.ddDotScale=e.referenceScale,this.ddDotSize=e.dotSize,this.ddDotBlending=e.dotBlendingEnabled,this.ddSeed=e.seed;for(let s=0;s<c.g;s++){const e=s>=t.length?new O.a([0,0,0,0]):t[s].color;F(this.ddColors,e,4*s)}for(let s=0;s<8;s++)this.ddActiveDots[s]=s<e.attributes.length?1:0;F(this.ddBackgroundColor,e.backgroundColor)}}class z extends D.a{constructor(e){super(e),this._rendererInfo=new I,this._materialItemsRequestQueue=new a.a,this.attributeView=new v}destroy(){this.removeAllChildren(),this.children.forEach(e=>e.destroy()),this.attributeView.destroy(),this._materialItemsRequestQueue.clear()}setRendererInfo(e,t,s){this._rendererInfo.setInfo(e,t,s),this.requestRender()}async getMaterialItems(e,t){if(!e||0===e.length)return null;const s=Object(i.g)();return this._materialItemsRequestQueue.push({items:e,abortOptions:t,resolver:s}),this.requestRender(),s.promise}onTileData(e,t){if(t.addOrUpdate&&"tileDisplayData"in t.addOrUpdate)e.setData(t);else{const s=t.addOrUpdate&&n.a.decode(t.addOrUpdate),i={...t,addOrUpdate:s};e.setData(i)}this.contains(e)||this.addChild(e),this.requestRender()}onTileError(e){e.clear(),this.contains(e)||this.addChild(e)}doRender(e){if(e.context.capabilities.textureFloat,e.context.capabilities.vao,this._materialItemsRequestQueue.length>0){let t=this._materialItemsRequestQueue.pop();for(;t;)this._processMaterialItemRequest(e,t),t=this._materialItemsRequestQueue.pop()}super.doRender(e)}renderChildren(e){for(const t of this.children)t.commitChanges(e);this._rendererInfo.update(e.state),this.attributeView.bindTextures(e.context),super.renderChildren(e)}createTile(e){const t=this._tileInfoView.getTileBounds(Object(r.d)(),e);return new o.a(e,t)}destroyTile(e){this.removeChild(e),e.destroy()}createRenderParams(e){return{...super.createRenderParams(e),rendererInfo:this._rendererInfo,attributeView:this.attributeView}}_processMaterialItemRequest(e,{items:t,abortOptions:s,resolver:r}){const{painter:a,pixelRatio:n}=e,o=t.map(e=>a.textureManager.rasterizeItem(e.symbol,n,e.glyphIds,s));Object(i.b)(o).then(e=>{if(!this.stage)return void r.reject();const s=e.map((e,s)=>({id:t[s].id,mosaicItem:e}));r.resolve(s)},r.reject)}}},677:function(e,t,s){"use strict";var i=s(0),r=(s(5),s(4),s(7),s(1)),a=s(2),n=(s(3),s(9),s(10),s(122));let o=class extends n.a{constructor(e){super(e),this.tiles=new Map}destroy(){this.tiles.clear(),this.layer=this.layerView=this.tileInfoView=this.tiles=null}get updating(){return this.isUpdating()}acquireTile(e){const t=this.createTile(e);return t.once("isReady",()=>this.notifyChange("updating")),this.tiles.set(e.id,t),t}forceAttributeTextureUpload(){}forEachTile(e){this.tiles.forEach(e)}releaseTile(e){this.tiles.delete(e.key.id),this.disposeTile(e)}isUpdating(){let e=!0;return this.tiles.forEach(t=>{e=e&&t.isReady}),!e}setHighlight(){}invalidateLabels(){}requestUpdate(){this.layerView.requestUpdate()}};Object(i.a)([Object(r.b)()],o.prototype,"layer",void 0),Object(i.a)([Object(r.b)()],o.prototype,"layerView",void 0),Object(i.a)([Object(r.b)()],o.prototype,"tileInfoView",void 0),Object(i.a)([Object(r.b)()],o.prototype,"updating",null),o=Object(i.a)([Object(a.a)("esri.views.2d.layers.features.tileRenderers.BaseTileRenderer")],o);var l=o;t.a=l},891:function(e,t,s){"use strict";s.r(t);var i=s(0),r=(s(5),s(4),s(7),s(1),s(2)),a=(s(3),s(9),s(10),s(99)),n=s(471),o=s(494),l=s(487),d=s(677),u=s(8),h=s(420),c=s(513),f=s(501);class p extends f.a{constructor(e,t,s){super(e),this._pointToCallbacks=new Map,this._layer=s,this._layerView=t}renderChildren(e){this.hasAnimation&&e.painter.effects.integrate.draw(e,e.attributeView),super.renderChildren(e)}hitTest(e,t){const s=[e,t],i=Object(u.g)();return this._pointToCallbacks.set(s,i),this.requestRender(),i.promise}doRender(e){const{minScale:t,maxScale:s}=this._layer,i=e.state.scale;i<=(t||1/0)&&i>=s&&super.doRender(e)}get hasAnimation(){return this.hasLabels}get hasLabels(){const e=this._layer.featureReduction,t=e&&"cluster"===e.type&&e.labelsVisible&&e.labelingInfo&&e.labelingInfo.length;return this._layer.labelingInfo&&this._layer.labelingInfo.length&&this._layer.labelsVisible||!!t}get labelsVisible(){return this._layer.labelsVisible}prepareRenderPasses(e){const t=e.registerRenderPass({name:"label",brushes:[c.a.label],target:()=>this.hasLabels?this.children:null,drawPhase:h.c.LABEL|h.c.LABEL_ALPHA}),s=e.registerRenderPass({name:"geometry",brushes:[c.a.fill,c.a.line,c.a.marker,c.a.text],target:()=>this.children,effects:[{apply:e.effects.highlight,enable:()=>!!this._layerView.hasHighlight()},{apply:e.effects.hittest,enable:()=>!!this._pointToCallbacks.size,args:()=>this._pointToCallbacks}]});return[...super.prepareRenderPasses(e),s,t]}}let y=class extends d.a{install(e){const t=new p(this.tileInfoView,this.layerView,this.layer);this.featuresView=t,e.addChild(t)}uninstall(e){e.removeChild(this.featuresView),this.featuresView.destroy()}hitTest(e,t){return this.featuresView.hitTest(e,t)}supportsRenderer(e){return null!=e&&-1!==["simple","class-breaks","unique-value","dot-density","dictionary"].indexOf(e.type)}onConfigUpdate(e){let t=null;if("visualVariables"in e){const s=(Object(o.a)(e).visualVariables||[]).map(e=>{const t=e.clone();return"normalizationField"in e&&(t.normalizationField=null),e.valueExpression&&"$view.scale"!==e.valueExpression&&(t.valueExpression=null,t.field="nop"),t});t=Object(l.a)(s)}this.featuresView.setRendererInfo(e,t,this.layerView.effects)}onTileData(e){const t=this.tiles.get(e.tileKey);t&&this.featuresView.onTileData(t,e.data),this.layerView.view.labelManager.requestUpdate()}onTileError(e){const t=this.tiles.get(e.tileKey);t&&this.featuresView.onTileError(t)}forceAttributeTextureUpload(){this.featuresView.attributeView.forceTextureUpload()}lockGPUUploads(){this.featuresView.attributeView.lockTextureUpload(),this.tiles.forEach(e=>e.lockUploads())}unlockGPUUploads(){this.featuresView.attributeView.unlockTextureUpload(),this.tiles.forEach(e=>e.unlockUploads())}async getMaterialItems(e){return this.featuresView.getMaterialItems(e)}invalidateLabels(){this.featuresView.hasLabels&&(this.tiles.forEach(e=>e.isDirty=!0),this.layerView.view.labelManager.requestUpdate())}createTile(e){const t=this.tileInfoView.getTileBounds(Object(a.d)(),e),s=new n.a(e,t);return this.featuresView.hasLabels&&this.layerView.view.labelManager.addTile(this.layerView,s),s}disposeTile(e){this.featuresView.removeChild(e),this.featuresView.hasLabels&&this.layerView.view.labelManager.removeTile(this.layerView,e.key.id),e.destroy(),this.layerView.view.labelManager.requestUpdate()}};y=Object(i.a)([Object(r.a)("esri.views.2d.layers.features.tileRenderers.SymbolTileRenderer")],y);var m=y;t.default=m}}]);
//# sourceMappingURL=45.97979dac.chunk.js.map