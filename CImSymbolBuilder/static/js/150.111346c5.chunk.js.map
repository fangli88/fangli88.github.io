{"version":3,"sources":["../node_modules/@arcgis/core/layers/support/RasterWorker.js"],"names":["r","t","o","data","options","toJSON","symbolize","pixelBlock","e","fromJSON","extent","s","this","symbolizer","n","symbolizerJSON","histograms","rendererJSON","type","stretch","simpleStretch","srcPixelBlock","stretchParams","estimateStatisticsHistograms","split","i","tileSize","maximumPyramidLevel","forEach","set","srcPixelBlocks","map","m","srcMosaicSize","coefs","l","destDimension","sampleSpacing","interpolation"],"mappings":"0GAAA,sEAIwZ,gBAAM,aAAaA,GAAG,MAAMC,QAAQC,YAAEF,EAAEG,KAAKH,EAAEI,SAAS,OAAOH,GAAGA,EAAEI,SAASC,UAAUJ,GAAGA,EAAEK,WAAWC,IAAEC,SAASP,EAAEK,YAAYL,EAAEQ,OAAOR,EAAEQ,OAAOT,IAAEQ,SAASP,EAAEQ,QAAQ,KAAK,MAAMC,EAAEC,KAAKC,WAAWP,UAAUJ,GAAG,OAAOF,YAAEW,GAAGA,EAAEN,UAAU,uBAAuBL,GAAG,IAAIC,EAAEW,KAAKC,WAAWC,IAAEL,SAAST,EAAEe,gBAAgBf,EAAEgB,YAAY,mBAAmB,OAAOf,EAAEW,KAAKC,iBAAY,EAAOZ,EAAEgB,aAAaC,QAAQN,KAAKC,WAAWI,aAAaD,WAAWhB,EAAEgB,YAAYG,QAAQlB,GAAG,MAAMC,EAAEU,KAAKC,WAAWO,cAAcZ,IAAEC,SAASR,EAAEoB,eAAepB,EAAEqB,eAAe,OAAOtB,YAAEE,GAAGA,EAAEG,UAAUkB,6BAA6BtB,GAAG,MAAMC,EAAES,YAAEH,IAAEC,SAASR,EAAEoB,gBAAgB,OAAOrB,YAAEE,GAAGsB,MAAMvB,GAAG,MAAMC,EAAEuB,YAAEjB,IAAEC,SAASR,EAAEoB,eAAepB,EAAEyB,SAASzB,EAAE0B,qBAAqB,OAAOzB,GAAGA,EAAE0B,QAAS,CAAC5B,EAAEC,KAAKC,EAAE2B,IAAI5B,EAAE,MAAMD,OAAE,EAAOA,EAAEK,YAAaL,YAAEE,GAAG,yBAAyBF,GAAG,MAAMC,EAAED,EAAE8B,eAAeC,IAAK/B,GAAGA,EAAE,IAAIQ,IAAER,GAAG,MAAOE,EAAE8B,YAAE/B,EAAED,EAAEiC,eAAe,IAAIjC,EAAEkC,MAAM,OAAOhC,GAAGA,EAAEG,SAAS,MAAMM,EAAEwB,YAAEjC,EAAEF,EAAEoC,cAAcpC,EAAEkC,MAAMlC,EAAEqC,cAAcrC,EAAEsC,eAAe,OAAO3B,GAAGA,EAAEN","file":"static/js/150.111346c5.chunk.js","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nimport{resolve as r}from\"../../core/promiseUtils.js\";import t from\"../../geometry/Extent.js\";import\"../../geometry.js\";import e from\"./PixelBlock.js\";import{decode as o}from\"./rasterFormats/RasterCodec.js\";import{estimateStatisticsHistograms as s,split as i,mosaic as m,approximateTransform as l}from\"./rasterFunctions/pixelUtils.js\";import n from\"../../renderers/support/RasterSymbolizer.js\";export default class{async decode(r){const t=await o(r.data,r.options);return t&&t.toJSON()}symbolize(o){o.pixelBlock=e.fromJSON(o.pixelBlock),o.extent=o.extent?t.fromJSON(o.extent):null;const s=this.symbolizer.symbolize(o);return r(s&&s.toJSON())}async updateSymbolizer(r){var t;this.symbolizer=n.fromJSON(r.symbolizerJSON),r.histograms&&\"rasterStretch\"===(null==(t=this.symbolizer)?void 0:t.rendererJSON.type)&&(this.symbolizer.rendererJSON.histograms=r.histograms)}stretch(t){const o=this.symbolizer.simpleStretch(e.fromJSON(t.srcPixelBlock),t.stretchParams);return r(o&&o.toJSON())}estimateStatisticsHistograms(t){const o=s(e.fromJSON(t.srcPixelBlock));return r(o)}split(t){const o=i(e.fromJSON(t.srcPixelBlock),t.tileSize,t.maximumPyramidLevel);return o&&o.forEach(((r,t)=>{o.set(t,null==r?void 0:r.toJSON())})),r(o)}async mosaicAndTransform(r){const t=r.srcPixelBlocks.map((r=>r?new e(r):null)),o=m(t,r.srcMosaicSize);if(!r.coefs)return o&&o.toJSON();const s=l(o,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation);return s&&s.toJSON()}}\n"],"sourceRoot":""}