(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[23],{514:function(e,t,i){"use strict";i.d(t,"a",(function(){return S}));var a=i(0),l=(i(5),i(4)),r=i(1),n=i(32),s=i(2),o=i(14),c=i(3),h=(i(9),i(10),i(136)),p=i(8),u=i(63),d=i(18),b=i(50),v=i(45),m=i(314),y=i(19),f=i(11),O=i(95);class j{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}getAvailability(e,t){if("unknown"!==this._allAvailability)return this._allAvailability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),a=i%8,l=i>>3,r=this._tileAvailabilityBitSet;return l<0||l>r.length?"unknown":r[l]&1<<a?"available":"unavailable"}_updateFromData(e){const t=this.location.width,i=this.location.height;let a=!0,l=!0;const r=Math.ceil(t*i/8),n=new Uint8Array(r);let s=0;for(let o=0;o<e.length;o++){const t=o%8;e[o]?(l=!1,n[s]|=1<<t):a=!1,7===t&&++s}l?this._allAvailability="unavailable":a?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=n,this.byteSize+=n.length)}static fromDefinition(e,t){const i=e.service.request||b.default,{row:a,col:l,width:r,height:n}=e,s={query:{f:"json"}};return t=t?{...s,...t}:s,i(function(e){let t;if("vector-tile"===e.service.type)t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;else{const i=e.service.tileServers;t=`${i&&i.length?i[e.row%i.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const i=e.service.query;return i&&(t=`${t}?${i}`),t}(e),t).then(e=>e.data).catch(e=>{if(e&&e.details&&422===e.details.httpStatus)return{location:{top:a,left:l,width:r,height:n},valid:!0,data:Object(O.b)(r*n,0)};throw e}).then(e=>{if(e.location&&(e.location.top!==a||e.location.left!==l||e.location.width!==r||e.location.height!==n))throw new o.a("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:a,left:l,width:r,height:n}});return j.fromJSON(e)})}static fromJSON(e){j.validateJSON(e);const t=new j;return t.location=Object.freeze(Object(f.a)(e.location)),t._updateFromData(e.data),Object.freeze(t)}static validateJSON(e){if(!e||!e.location)throw new o.a("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new o.a("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new o.a("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new o.a("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new o.a("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function g(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}var w;const _=l.a.getLogger("esri.layers.support.TilemapCache");let S=w=class extends d.a{constructor(e){super(e),this._handles=new v.a,this._pendingTilemapRequests={},this._availableLevels={},this.levels=5,this.cacheByteSize=2097152,this.request=b.default,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new m.a(this.cacheByteSize),this._handles.add([this.watch(["layer.parsedUrl","layer.tileServers?"],()=>this._initializeTilemapDefinition()),Object(y.a)(this,"layer.tileInfo.lods",e=>this._initializeAvailableLevels(e),!0)]),this._initializeTilemapDefinition()}destroy(){this._handles&&(this._handles.destroy(),this._handles=null)}castLevels(e){return e<=2?(_.error("Minimum levels for Tilemap is 3, but got ",e),3):e}get size(){return 1<<this.levels}fetchTilemap(e,t,i,a){if(!this._availableLevels[e])return Object(p.t)(new o.a("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const l=this._tmpTilemapDefinition,r=this._tilemapFromCache(e,t,i,l);if(r)return Object(p.u)(r);const n=a&&a.signal;return a={...a,signal:null},Object(p.c)((e,t)=>{Object(p.r)(n,()=>t(Object(p.e)()));const i=g(l);let r=this._pendingTilemapRequests[i];if(!r){r=j.fromDefinition(l,a).then(e=>(this._tilemapCache.put(i,e,e.byteSize),e));const e=()=>delete this._pendingTilemapRequests[i];this._pendingTilemapRequests[i]=r,r.then(e,e)}r.then(e,t)})}getAvailability(e,t,i){if(!this._availableLevels[e])return"unavailable";const a=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return a?a.getAvailability(t,i):"unknown"}getAvailabilityUpsample(e,t,i,a){a.level=e,a.row=t,a.col=i;const l=this.layer.tileInfo;for(l.updateTileInfo(a);;){const e=this.getAvailability(a.level,a.row,a.col);if("unavailable"!==e)return e;if(!l.upsampleTile(a))return"unavailable"}}fetchAvailability(e,t,i,a){return this._availableLevels[e]?this.fetchTilemap(e,t,i,a).catch(e=>e).then(a=>{if(a instanceof j){const l=a.getAvailability(t,i);return"unavailable"===l?Object(p.t)(new o.a("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i})):l}if(Object(p.n)(a))throw a;return"unknown"}):Object(p.t)(new o.a("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`))}fetchAvailabilityUpsample(e,t,i,a,l){a.level=e,a.row=t,a.col=i;const r=this.layer.tileInfo;r.updateTileInfo(a);const n=this.fetchAvailability(e,t,i,l).catch(e=>{if(Object(p.n)(e))throw e;if(r.upsampleTile(a))return this.fetchAvailabilityUpsample(a.level,a.row,a.col,a);throw e});return this._fetchAvailabilityUpsamplePrefetch(a.id,e,t,i,l,n),n}async _fetchAvailabilityUpsamplePrefetch(e,t,i,a,l,r){if(!this._prefetchingEnabled)return;const n="prefetch-"+e;if(this._handles.has(n))return;const s=Object(p.d)();r.then(()=>s.abort(),()=>s.abort());let o=!1;const c={remove(){o||(o=!0,s.abort())}};this._handles.add(c,n);try{await Object(u.c)(10,s.signal)}catch{}if(o||(o=!0,this._handles.remove(n)),Object(p.o)(s))return;const h={id:e,level:t,row:i,col:a},d={...l,signal:s.signal},b=this.layer.tileInfo;for(let p=0;w._prefetches.length<w._maxPrefetch&&b.upsampleTile(h);++p){const e=this.fetchAvailability(h.level,h.row,h.col,d);w._prefetches.push(e);const t=()=>{w._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const e=this.layer.parsedUrl,t=e.query;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:t?Object(c.B)(t):null,tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,a){a.level=e,a.row=t-t%this.size,a.col=i-i%this.size;const l=g(a);return this._tilemapCache.get(l)}_initializeAvailableLevels(e){this._availableLevels={},e&&e.forEach(e=>this._availableLevels[e.level]=!0)}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,a)=>!!e._tilemapFromCache(t,i,a,e._tmpTilemapDefinition)}}};S._maxPrefetch=4,S._prefetches=new h.a({initialSize:w._maxPrefetch}),Object(a.a)([Object(r.b)({constructOnly:!0,type:Number})],S.prototype,"levels",void 0),Object(a.a)([Object(n.a)("levels")],S.prototype,"castLevels",null),Object(a.a)([Object(r.b)({readOnly:!0,dependsOn:["levels"],type:Number})],S.prototype,"size",null),Object(a.a)([Object(r.b)({constructOnly:!0,type:Number})],S.prototype,"cacheByteSize",void 0),Object(a.a)([Object(r.b)({constructOnly:!0})],S.prototype,"layer",void 0),Object(a.a)([Object(r.b)({constructOnly:!0})],S.prototype,"request",void 0),S=w=Object(a.a)([Object(s.a)("esri.layers.support.TilemapCache")],S)},528:function(e,t,i){"use strict";i.d(t,"a",(function(){return r})),i.d(t,"b",(function(){return l}));var a=i(302);const l={type:a.a,json:{origins:{service:{read:{source:["tileInfo","minScale","maxScale","minLOD","maxLOD"],reader:r}}}}};function r(e,t,i,l){if(!e)return null;const{minScale:r,maxScale:n,minLOD:s,maxLOD:o}=t;if(null!=s&&null!=o)return l&&l.ignoreMinMaxLOD?a.a.fromJSON(e):a.a.fromJSON({...e,lods:e.lods.filter(({level:e})=>null!=e&&e>=s&&e<=o)});if(0!==r&&0!==n){const t=e=>Math.round(1e4*e)/1e4,i=r?t(r):1/0,l=n?t(n):-1/0;return a.a.fromJSON({...e,lods:e.lods.filter(e=>{const a=t(e.scale);return a<=i&&a>=l})})}return a.a.fromJSON(e)}},569:function(e,t,i){"use strict";i.d(t,"a",(function(){return h}));var a=i(0),l=(i(5),i(4),i(7),i(1)),r=i(17),n=i(2),s=(i(3),i(9),i(10),i(29)),o=(i(59),i(528)),c=i(514);const h=e=>{let t=class extends e{constructor(){super(...arguments),this.copyright=null,this.minScale=0,this.maxScale=0,this.spatialReference=null,this.tileInfo=null,this.tilemapCache=null}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}get supportsBlankTile(){return this.version>=10.2}readTilemapCache(e,t){return t.capabilities&&t.capabilities.indexOf("Tilemap")>-1?new c.a({layer:this}):null}};return Object(a.a)([Object(l.b)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),Object(a.a)([Object(l.b)()],t.prototype,"minScale",void 0),Object(a.a)([Object(r.a)("service","minScale")],t.prototype,"readMinScale",null),Object(a.a)([Object(l.b)()],t.prototype,"maxScale",void 0),Object(a.a)([Object(r.a)("service","maxScale")],t.prototype,"readMaxScale",null),Object(a.a)([Object(l.b)({type:s.a})],t.prototype,"spatialReference",void 0),Object(a.a)([Object(l.b)({readOnly:!0,dependsOn:["version"]})],t.prototype,"supportsBlankTile",null),Object(a.a)([Object(l.b)(o.b)],t.prototype,"tileInfo",void 0),Object(a.a)([Object(l.b)()],t.prototype,"tilemapCache",void 0),Object(a.a)([Object(r.a)("service","tilemapCache",["capabilities"])],t.prototype,"readTilemapCache",null),Object(a.a)([Object(l.b)()],t.prototype,"version",void 0),t=Object(a.a)([Object(n.a)("esri.layers.mixins.ArcGISCachedService")],t),t}},628:function(e,t,i){"use strict";i.r(t);var a=i(0),l=(i(5),i(6)),r=i(4),n=(i(7),i(1)),s=i(17),o=i(2),c=i(14),h=i(3),p=(i(9),i(10),i(8)),u=i(50),d=i(180),b=i(303),v=i(138),m=i(316),y=i(100),f=i(307),O=i(306),j=i(569),g=i(237);const w=r.a.getLogger("esri.views.3d.support.WorkerHandle");class _ extends class{constructor(e,t,i,a={}){this._methodName=t,this._promise=Object(g.b)(e,{...a,scheduler:i}).then(e=>{void 0===this._thread?(this._thread=e,this._promise=null,a.hasInitialize&&this.broadcast({},"initialize")):e.close()}),this._promise.catch(t=>w.error(`Failed to initialize ${e} worker: ${t}`))}destroy(){this._thread&&(this._thread.close(),this._thread=null),this._promise=null}invoke(e,t){if(this._thread){const i=this.getTransferList(e);return this._thread.invoke(this._methodName,e,{transferList:i,signal:t})}return this._promise?this._promise.then(()=>(Object(p.w)(t),this.invoke(e,t))):Object(p.t)(null)}broadcast(e,t){return this._thread?Object(p.b)(this._thread.broadcast(t,e)).then(()=>{}):this._promise?this._promise.then(()=>this.broadcast(e,t)):Object(p.t)()}get promise(){return this._promise}}{constructor(e){super("LercWorker","_decode",e,{strategy:"dedicated"}),this.scheduler=e}decode(e,t,i){return e&&0!==e.byteLength?this.invoke({buffer:e,options:t},i):Object(p.u)(null)}getTransferList(e){return[e.buffer]}}const S=new Map;const T=r.a.getLogger("esri.layers.ElevationLayer");let L=class extends(Object(j.a)(Object(m.a)(Object(f.a)(Object(O.a)(Object(b.a)(d.a)))))){constructor(...e){super(...e),this.copyright=null,this.heightModelInfo=null,this.path=null,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=function(e){let t=S.get(e);return t||(t={instance:new _(e),ref:0},S.set(e,t)),++t.ref,t.instance}()}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}destroy(){(function(e){if(null==e)return;const t=e.scheduler,i=S.get(t);i&&--i.ref<=0&&(i.instance.destroy(),S.delete(t))})(this._lercDecoder),this._lercDecoder=null}set minScale(e){this.constructed&&T.warn(this.declaredClass+".minScale support has been removed (since 4.5)")}get minScale(){}set maxScale(e){this.constructed&&T.warn(this.declaredClass+".maxScale support has been removed (since 4.5)")}get maxScale(){}readVersion(e,t){let i=t.currentVersion;return i||(i=9.3),i}load(e){const t=Object(l.h)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:e=>{for(let t=0;t<e.typeKeywords.length;t++)if("elevation 3d layer"===e.typeKeywords[t].toLowerCase())return!0;throw new c.a("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},e).then(()=>this._fetchImageService(t),()=>this._fetchImageService(t))),Object(p.u)(this)}fetchTile(e,t,i,a){const r=Object(l.h)((a=a||{signal:null}).signal)?a.signal:a.signal=Object(p.d)().signal,n={responseType:"array-buffer",signal:r},s={noDataValue:a.noDataValue,returnFileInfo:!0};return this.load().then(()=>this._fetchTileAvailability(e,t,i,a)).then(()=>Object(u.default)(this.getTileUrl(e,t,i),n)).then(e=>this._lercDecoder.decode(e.data,s,r)).then(e=>({values:e.pixelData,width:e.width,height:e.height,maxZError:e.fileInfo.maxZError,noDataValue:e.noDataValue,minValue:e.minValue,maxValue:e.maxValue}))}getTileUrl(e,t,i){const a=!this.tilemapCache&&this.supportsBlankTile,l=Object(h.B)({...this.parsedUrl.query,blankTile:!a&&null});return`${this.parsedUrl.path}/tile/${e}/${t}/${i}${l?"?"+l:""}`}queryElevation(e,t){return this._importElevationQuery().then(i=>(new i.ElevationQuery).query(this,e,t))}createElevationSampler(e,t){return this._importElevationQuery().then(i=>(new i.ElevationQuery).createSampler(this,e,t))}_fetchTileAvailability(e,t,i,a){return this.tilemapCache?this.tilemapCache.fetchAvailability(e,t,i,a):Object(p.u)("unknown")}async _fetchImageService(e){if(this.sourceJSON)return this.sourceJSON;const t={query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:e},i=await Object(u.default)(this.parsedUrl.path,t);i.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=i.data,this.read(i.data,{origin:"service",url:this.parsedUrl})}_importElevationQuery(){return i.e(32).then(i.bind(null,880))}};Object(a.a)([Object(n.b)({json:{read:{source:"copyrightText"}}})],L.prototype,"copyright",void 0),Object(a.a)([Object(n.b)({readOnly:!0,type:v.a})],L.prototype,"heightModelInfo",void 0),Object(a.a)([Object(n.b)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],L.prototype,"path",void 0),Object(a.a)([Object(n.b)({type:["show","hide"]})],L.prototype,"listMode",void 0),Object(a.a)([Object(n.b)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],L.prototype,"minScale",null),Object(a.a)([Object(n.b)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],L.prototype,"maxScale",null),Object(a.a)([Object(n.b)({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],L.prototype,"opacity",void 0),Object(a.a)([Object(n.b)({type:["ArcGISTiledElevationServiceLayer"]})],L.prototype,"operationalLayerType",void 0),Object(a.a)([Object(n.b)()],L.prototype,"sourceJSON",void 0),Object(a.a)([Object(n.b)({json:{read:!1},value:"elevation",readOnly:!0})],L.prototype,"type",void 0),Object(a.a)([Object(n.b)(y.j)],L.prototype,"url",void 0),Object(a.a)([Object(n.b)()],L.prototype,"version",void 0),Object(a.a)([Object(s.a)("version",["currentVersion"])],L.prototype,"readVersion",null),L=Object(a.a)([Object(o.a)("esri.layers.ElevationLayer")],L);var x=L;t.default=x}}]);
//# sourceMappingURL=23.2fb65e5b.chunk.js.map