(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[87],{473:function(e,t,r){"use strict";r.d(t,"a",(function(){return a})),r.d(t,"b",(function(){return s})),r.d(t,"c",(function(){return n}));var i=r(3);function a(e,t){let r={query:e};return t&&(r={...t,...r}),r}function n(e){return"string"==typeof e?Object(i.H)(e):e}function s(e,t,r){const i={};for(const a in e){if("declaredClass"===a)continue;const n=e[a];if(null!=n&&"function"!=typeof n)if(Array.isArray(n)){i[a]=[];for(let e=0;e<n.length;e++)i[a][e]=s(n[e])}else if("object"==typeof n)if(n.toJSON){const e=n.toJSON(r&&r[a]);i[a]=t?e:JSON.stringify(e)}else i[a]=t?n:JSON.stringify(n);else i[a]=n}return i}},619:function(e,t,r){"use strict";r.r(t);var i,a=r(0),n=(r(5),r(6)),s=r(4),o=r(7),l=r(1),c=r(2),u=r(16),p=r(3),d=(r(9),r(10),r(8)),b=r(148),m=r(180),h=r(303),f=r(316),y=r(310),O=r(100),g=r(307),j=r(306),v=r(315),R=r(308),w=r(325),x=r(323),S=r(11),I=r(28),N=r(25),T=r(17),_=r(14),F=r(29),P=r(33),M=r(37),D=r(78),A=(r(59),r(50)),C=r(76),V=r(509),J=r(601),z=r(181),L=r(305),E=r(162),k=r(113),U=r(333),q=r(673),Q=r(20),B=r(13);const H=new Set(["Raster","Raster2","DEM","FillRaster"]),G=new Set(["Rasters"]),W=e=>e&&e.rasterFunction?$.fromJSON(e):e,X=e=>e&&e instanceof $?e.toJSON():e;var Y,K;(K=Y||(Y={}))[K.MOSAIC=0]="MOSAIC",K[K.GROUP=1]="GROUP",K[K.ITEM=2]="ITEM";let $=i=class extends B.a{constructor(e){super(e),this.functionArguments=null,this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.description=null,this.functionDefinition=null,this.thumbnail=null}readFunctionArguments(e,t){return(e=>{if(null==e)return null;const t={};for(const r of Object.keys(e))H.has(r)?t[r]=W(e[r]):G.has(r)&&Array.isArray(e[r])?t[r]=e[r].map(W):t[r]=e[r];return t})(t.arguments||t.rasterFunctionArguments)}writeFunctionArguments(e,t,r){const i={};for(const a of Object.keys(e))H.has(a)?i[a]=X(e[a]):G.has(a)&&Array.isArray(e[a])?i[a]=e[a].map(X):i[a]=X(e[a]);this.functionDefinition?t.arguments=i:t[r]=i}readFunctionName(e,t){const r=t.rasterFunctionInfos;return t.name||(r&&r.length&&"None"!==r[0].name?r[0].name:t.rasterFunction)}writeFunctionName(e,t,r){this.functionDefinition?t.name=e:t[r]=e}readFunctionType(e){return Y[e]}writeFunctionType(e,t,r){t[r]=Y[e]}clone(){return new i({functionName:this.functionName,functionArguments:Object(S.a)(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,description:this.description,functionType:this.functionType,functionDefinition:this.functionDefinition,thumbnail:this.thumbnail})}};Object(a.a)([Object(l.b)({json:{type:Object,write:{target:"rasterFunctionArguments"}}})],$.prototype,"functionArguments",void 0),Object(a.a)([Object(T.a)("functionArguments",["rasterFunctionArguments","arguments"])],$.prototype,"readFunctionArguments",null),Object(a.a)([Object(u.a)("functionArguments")],$.prototype,"writeFunctionArguments",null),Object(a.a)([Object(l.b)({json:{type:String,write:{target:"rasterFunction"}}})],$.prototype,"functionName",void 0),Object(a.a)([Object(T.a)("functionName",["rasterFunction","rasterFunctionInfos","name"])],$.prototype,"readFunctionName",null),Object(a.a)([Object(u.a)("functionName")],$.prototype,"writeFunctionName",null),Object(a.a)([Object(Q.a)({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1}),Object(l.b)({json:{default:"unknown"}})],$.prototype,"outputPixelType",void 0),Object(a.a)([Object(l.b)({type:String,json:{read:!0,write:!0}})],$.prototype,"variableName",void 0),Object(a.a)([Object(l.b)({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],$.prototype,"description",void 0),Object(a.a)([Object(l.b)({json:{origins:{"web-document":{read:!1,write:!1}}}})],$.prototype,"functionType",void 0),Object(a.a)([Object(T.a)("functionType")],$.prototype,"readFunctionType",null),Object(a.a)([Object(u.a)("functionType")],$.prototype,"writeFunctionType",null),Object(a.a)([Object(l.b)({type:Object,json:{read:{source:"function"},write:{target:"function"},origins:{"web-document":{read:!1,write:!1}}}})],$.prototype,"functionDefinition",void 0),Object(a.a)([Object(l.b)({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],$.prototype,"thumbnail",void 0),$=i=Object(a.a)([Object(c.a)("esri.layers.support.RasterFunction")],$);var Z=$,ee=r(233),te=r(595),re=r(708);const ie={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34e38,34e38],f64:[-Number.MAX_VALUE,Number.MAX_VALUE]},ae={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},ne=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field"]);function se(e){return ne.has(e.type)}function oe(e,t){if(!e||!t)return Object(S.a)(e||t);const r=Object(S.a)(e);return"none"!==t.functionName.toLowerCase()&&((function e(t){const r=t.Raster;return r&&"esri.layers.support.RasterFunction"===r.declaredClass?e(r.functionArguments):t}(r.functionArguments)).Raster=t),r}const le={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function ce(e,t){const r=ie[String(t).toLowerCase()];return r&&e.push([Math.floor(r[0]-1),0,0,0],[Math.ceil(r[1]+1),0,0,0]),e}function ue(e){if(!e)return;const{fields:t}=e,r=t&&t.find(e=>e&&e.name&&"value"===e.name.toLowerCase());return r&&r.name}var pe,de=r(32);const be=Object(N.b)()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),me=Object(N.b)()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});let he=pe=class extends B.a{constructor(e){super(e),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(e,t){return null!=t.ascending?t.ascending:null==t.sortAscending||t.sortAscending}readMethod(e,t){return function(e){let t;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;case"none":default:t="esriMosaicNone"}return me.fromJSON(t)}(t.mosaicMethod||t.defaultMosaicMethod)}readOperation(e,t){const r=t.mosaicOperation,i=t.mosaicOperator&&t.mosaicOperator.toLowerCase(),a=r||(i?be.toJSON(i):null);return be.fromJSON(a)||"first"}castSortValue(e){return null==e||"string"==typeof e||"number"==typeof e?e:""+e}clone(){return new pe({ascending:this.ascending,itemRenderingRule:Object(S.a)(this.itemRenderingRule),lockRasterIds:Object(S.a)(this.lockRasterIds),method:this.method,multidimensionalDefinition:Object(S.a)(this.multidimensionalDefinition),objectIds:Object(S.a)(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:Object(S.a)(this.viewpoint),where:this.where})}};Object(a.a)([Object(l.b)({type:Boolean,json:{write:!0}})],he.prototype,"ascending",void 0),Object(a.a)([Object(T.a)("ascending",["ascending","sortAscending"])],he.prototype,"readAscending",null),Object(a.a)([Object(l.b)({type:Z,json:{write:!0}})],he.prototype,"itemRenderingRule",void 0),Object(a.a)([Object(l.b)({type:[o.a],json:{write:{overridePolicy(){return{enabled:"lock-raster"===this.method}}}}})],he.prototype,"lockRasterIds",void 0),Object(a.a)([Object(l.b)({type:String,json:{type:me.jsonValues,write:{target:"mosaicMethod",writer:me.write}}})],he.prototype,"method",void 0),Object(a.a)([Object(T.a)("method",["mosaicMethod","defaultMosaicMethod"])],he.prototype,"readMethod",null),Object(a.a)([Object(l.b)({type:[q.a],json:{write:!0}})],he.prototype,"multidimensionalDefinition",void 0),Object(a.a)([Object(l.b)({type:[o.a],json:{name:"fids",write:!0}})],he.prototype,"objectIds",void 0),Object(a.a)([Object(l.b)({json:{type:be.jsonValues,read:{reader:be.read},write:{target:"mosaicOperation",writer:be.write}}})],he.prototype,"operation",void 0),Object(a.a)([Object(T.a)("operation",["mosaicOperation","mosaicOperator"])],he.prototype,"readOperation",null),Object(a.a)([Object(l.b)({type:String,json:{write:{overridePolicy(){return{enabled:"attribute"===this.method}}}}})],he.prototype,"sortField",void 0),Object(a.a)([Object(l.b)({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],he.prototype,"sortValue",void 0),Object(a.a)([Object(de.a)("sortValue")],he.prototype,"castSortValue",null),Object(a.a)([Object(l.b)({type:P.a,json:{write:!0}})],he.prototype,"viewpoint",void 0),Object(a.a)([Object(l.b)({type:String,json:{write:!0}})],he.prototype,"where",void 0),he=pe=Object(a.a)([Object(c.a)("esri.layers.support.MosaicRule")],he);var fe=he;const ye=new N.a({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),Oe=new N.a({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"});let ge=class extends B.a{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.bandIds=void 0,this.compression=void 0,this.compressionQuality=void 0,this.compressionTolerance=.01,this.format=null,this.interpolation=null,this.noData=null,this.noDataInterpretation=void 0,this.pixelType=void 0,this.lercVersion=2}writeAdjustAspectRatio(e,t,r){this.layer.version<10.3||(t[r]=e)}writeCompressionQuality(e,t,r){this.format&&this.format.toLowerCase().indexOf("jpg")>-1&&null!=e&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}writeLercVersion(e,t,r){"lerc"===this.format&&this.layer.version>=10.5&&(t[r]=e)}get version(){const e=this.layer;return e.bandIds,e.format,e.compressionQuality,e.compressionTolerance,e.interpolation,e.noData,e.noDataInterpretation,e.mosaicRule,e.renderingRule,e.adjustAspectRatio,e.pixelFilter,e.renderer,e.definitionExpression,(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const r=e.definitionExpression;return t?r&&r!==t.where&&(t=t.clone(),t.where=r):r&&(t=new fe({where:r})),t}get renderingRule(){const e=this.layer;let t=e.renderingRule;const r=e.pixelFilter,i=!e.format||e.format.indexOf("jpg")>-1||e.format.indexOf("png")>-1;return t=this._addResampleRasterFunction(t),i&&!r&&(t=this.combineRendererWithRenderingRule()),t}combineRendererWithRenderingRule(){var e;const t=this.layer,{rasterInfo:r,renderingRule:i,renderer:a}=t;return a&&se(a)?oe(function(e,t){switch(t=t||{},e.type){case"raster-stretch":return function(e,t){const r=new Z;r.functionName="Stretch";const i=le[re.b.toJSON(e.stretchType)],a="u8",n={StretchType:i,Statistics:function(e){const t=[];return e.forEach(e=>{const r=e;if(Array.isArray(r))t.push(r);else{if(null==r.min||null==r.max)return;const e=[r.min,r.max,r.avg||0,r.stddev||0];t.push(e)}}),t}(e.statistics),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(n.Min=e.outputMin),null!=e.outputMax&&(n.Max=e.outputMax),i===le.standardDeviation?(n.NumberOfStandardDeviations=e.numberOfStandardDeviations,r.outputPixelType=a):i===le.percentClip?(n.MinPercent=e.minPercent,n.MaxPercent=e.maxPercent,r.outputPixelType=a):i===le.minMax?r.outputPixelType=a:i===le.sigmoid&&(n.SigmoidStrengthLevel=e.sigmoidStrengthLevel),r.functionArguments=n,r.variableName="Raster",e.colorRamp){const i=e.colorRamp,a=new Z,n=Object(te.c)(i);return n?a.functionArguments={colorRamp:n}:!t.convertColorRampToColormap||"algorithmic"!==i.type&&"multipart"!==i.type?a.functionArguments={colorRamp:e.colorRamp.toJSON()}:a.functionArguments={Colormap:Object(te.b)(i,256)},a.variableName="Raster",a.functionName="Colormap",a.functionArguments.Raster=r,a}return r}(e,t);case"class-breaks":return function(e,t){const r=[],i=[],a=[],n=[],s=1e-6,{pixelType:o,rasterAttributeTable:l}=t,c=l&&l.features,u=ue(l);if(c&&Array.isArray(c)&&e.classBreakInfos){e.classBreakInfos.forEach((t,r)=>{const i=t.symbol.color;let a;i.a&&c.forEach(s=>{a=s.attributes[e.field],(a>=t.minValue&&a<t.maxValue||r===e.classBreakInfos.length-1&&a>=t.minValue)&&n.push([s.attributes[u],i.r,i.g,i.b])})});const t=o?ce(n,o):n,r=new Z;return r.functionName="Colormap",r.functionArguments={},r.functionArguments.Colormap=t,r.variableName="Raster",r}e.classBreakInfos.forEach((e,t)=>{const o=e.symbol&&e.symbol.color;o.a?(0===t?r.push(e.minValue,e.maxValue+s):r.push(e.minValue+s,e.maxValue+s),i.push(t),n.push([t,o.r,o.g,o.b])):a.push(e.minValue,e.maxValue)});const p=o?ce(n,o):n,d=new Z;d.functionName="Remap",d.functionArguments={InputRanges:r,OutputValues:i,NoDataRanges:a},d.variableName="Raster";const b=new Z;return b.functionName="Colormap",b.functionArguments={Colormap:p,Raster:d},b}(e,t);case"unique-value":return function(e,t){const r=[],{pixelType:i,rasterAttributeTable:a}=t,n=a&&a.features,s=ue(a);let o=!1;if(e.uniqueValueInfos&&e.uniqueValueInfos.forEach(t=>{const i=t.symbol.color;i.a&&(e.field!==s&&n?n&&n.forEach(a=>{String(a.attributes[e.field])===String(t.value)&&r.push([a.attributes[s],i.r,i.g,i.b])}):isNaN(+t.value)?o=!0:r.push([+t.value,i.r,i.g,i.b]))}),o)return null;const l=i&&r.length>0?ce(r,i):r,c=new Z;return c.functionName="Colormap",c.functionArguments={},c.functionArguments.Colormap=l,c.variableName="Raster",c}(e,t);case"raster-colormap":return function(e,t){const r=e.extractColormap();if(!r||0===r.length)return;const{pixelType:i}=t,a=i?ce(r,i):r,n=new Z;return n.functionName="Colormap",n.functionArguments={},n.functionArguments.Colormap=a,n}(e,t);case"vector-field":return function(e,t){const r=new Z;r.functionName="VectorFieldRenderer";const{dataType:i,bandProperties:a}=t,n="vector-uv"===i;let s,o;a&&2===a.length&&(s=a.map(e=>e.BandName.toLowerCase()).indexOf("magnitude"),o=a.map(e=>e.BandName.toLowerCase()).indexOf("direction")),-1!==s&&null!==s||(s=0,o=1);const l="arithmetic"===e.rotationType?1:2,c="flow-from"===e.flowRepresentation?0:1,u=e.visualVariables?e.visualVariables.filter(e=>"Magnitude"===e.field)[0]:new ee.a,p={magnitudeBandID:s,directionBandID:o,isUVComponents:n,referenceSystem:l,massFlowAngleRepresentation:c,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:ae[e.style.toLowerCase().replace("-","_")],minimumMagnitude:u.minDataValue,maximumMagnitude:u.maxDataValue,minimumSymbolSize:u.minSize,maximumSymbolSize:u.maxSize};return r.functionArguments=p,r}(e,t);case"raster-shaded-relief":return function(e,t){if("elevation"!==t.dataType)return new Z;const r=new Z;r.functionName="Hillshade";const i="traditional"===e.hillshadeType?0:1,a="none"===e.scalingType?1:3,n={HillshadeType:i,SlopeType:a,ZFactor:e.zFactor};return 0===i&&(n.Azimuth=e.azimuth,n.Altitude=e.altitude),3===a&&(n.PSPower=e.pixelSizePower,n.PSZFactor=e.pixelSizeFactor),r.functionArguments=n,r.variableName="Raster",e.colorRamp&&(r.functionName="ShadedRelief",n.Colormap=Object(te.b)(e.colorRamp,256)),r}(e,t)}}(a,{rasterAttributeTable:r.attributeTable,pixelType:r.pixelType,dataType:r.dataType,bandProperties:null==(e=r.keyProperties)?void 0:e.BandProperties,convertColorRampToColormap:t.version<10.6}),i):i}_addResampleRasterFunction(e){var t;let r=null;if("vector-field"===(null==(t=this.layer.renderer)?void 0:t.type)){const e={},t=this.layer.renderingRule;if(!t||"Resample"!==t.functionName){const t="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10;e.rasterFunction="Resample",e.rasterFunctionArguments={ResamplingType:t,InputCellSize:{x:this.layer.pixelSizeX,y:this.layer.pixelSizeY}}}r=Z.fromJSON(e)}return oe(r,e)}};Object(a.a)([Object(l.b)()],ge.prototype,"layer",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],ge.prototype,"adjustAspectRatio",void 0),Object(a.a)([Object(u.a)("adjustAspectRatio")],ge.prototype,"writeAdjustAspectRatio",null),Object(a.a)([Object(l.b)({json:{write:!0}}),Object(I.a)("layer.bandIds")],ge.prototype,"bandIds",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],ge.prototype,"compression",void 0),Object(a.a)([Object(l.b)({json:{write:!0}}),Object(I.a)("layer.compressionQuality")],ge.prototype,"compressionQuality",void 0),Object(a.a)([Object(u.a)("compressionQuality")],ge.prototype,"writeCompressionQuality",null),Object(a.a)([Object(l.b)({json:{write:!0}}),Object(I.a)("layer.compressionTolerance")],ge.prototype,"compressionTolerance",void 0),Object(a.a)([Object(u.a)("compressionTolerance")],ge.prototype,"writeCompressionTolerance",null),Object(a.a)([Object(l.b)({json:{write:!0}}),Object(I.a)("layer.format")],ge.prototype,"format",void 0),Object(a.a)([Object(l.b)({type:String,json:{read:{reader:ye.read},write:{writer:ye.write}}}),Object(I.a)("layer.interpolation")],ge.prototype,"interpolation",void 0),Object(a.a)([Object(l.b)({json:{write:!0}}),Object(I.a)("layer.noData")],ge.prototype,"noData",void 0),Object(a.a)([Object(l.b)({type:String,json:{read:{reader:Oe.read},write:{writer:Oe.write}}}),Object(I.a)("layer.noDataInterpretation")],ge.prototype,"noDataInterpretation",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],ge.prototype,"pixelType",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],ge.prototype,"lercVersion",void 0),Object(a.a)([Object(u.a)("lercVersion")],ge.prototype,"writeLercVersion",null),Object(a.a)([Object(l.b)({type:Number,dependsOn:["layer.adjustAspectRatio","layer.bandIds","layer.format","layer.compressionQuality","layer.compressionTolerance","layer.definitionExpression","layer.interpolation","layer.noData","layer.noDataInterpretation","layer.mosaicRule","layer.renderingRule","layer.pixelFilter","layer.renderer","lercVersion","pixelType"]})],ge.prototype,"version",null),Object(a.a)([Object(l.b)({dependsOn:["layer.mosaicRule","layer.definitionExpression"],json:{write:!0}})],ge.prototype,"mosaicRule",null),Object(a.a)([Object(l.b)({dependsOn:["layer.renderingRule","layer.renderer","layer.rasterInfo","layer.format"],json:{write:!0}})],ge.prototype,"renderingRule",null),ge=Object(a.a)([Object(c.a)("esri.layers.mixins.ExportImageServiceParameters")],ge);var je=r(530),ve=r(709),Re=r(626),we=r(722),xe=r(682),Se=r(317),Ie=r(304),Ne=r(473);let Te=class extends B.a{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};Object(a.a)([Object(l.b)({json:{write:!0}})],Te.prototype,"catalogItemVisibilities",void 0),Object(a.a)([Object(l.b)({type:E.default,json:{write:!0}})],Te.prototype,"catalogItems",void 0),Object(a.a)([Object(l.b)({type:P.a,json:{write:!0}})],Te.prototype,"location",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],Te.prototype,"name",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],Te.prototype,"objectId",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],Te.prototype,"processedValues",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],Te.prototype,"properties",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],Te.prototype,"value",void 0),Te=Object(a.a)([Object(c.a)("esri.tasks.support.ImageServiceIdentifyResult")],Te);var _e=Te;let Fe=class extends Se.a{execute(e,t){return async function(e,t,r){const i=Object(Ne.c)(e),a=t.geometry?[t.geometry]:[];return Object(Ie.a)(a).then(e=>{const a=t.toJSON(),s=e&&e[0];Object(n.h)(s)&&(a.geometry=JSON.stringify(s.toJSON()));const o=Object(Ne.b)({...i.query,f:"json",...a}),l=Object(Ne.a)(o,r);return Object(A.default)(i.path+"/identify",l)}).then(e=>_e.fromJSON(e.data))}(this.url,e,t)}};Fe=Object(a.a)([Object(c.a)("esri.tasks.ImageServiceIdentifyTask")],Fe);var Pe=Fe,Me=r(21),De=r(116);let Ae=class extends B.a{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0}writeGeometry(e,t,r){null!=e&&(t.geometryType=Object(Me.c)(e),t[r]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=fe.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=Z.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}writeRenderingRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}writeRenderingRules(e,t,r){null!=e&&(t[r]=JSON.stringify(e.map(e=>e.toJSON())))}writePixelSize(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}writeTimeExtent(e,t,r){if(null!=e){const i=e.start?e.start.getTime():null,a=e.end?e.end.getTime():null;t[r]=null!=i?null!=a?`${i},${a}`:""+i:null}}};Object(a.a)([Object(l.b)({json:{write:!0}})],Ae.prototype,"geometry",void 0),Object(a.a)([Object(u.a)("geometry")],Ae.prototype,"writeGeometry",null),Object(a.a)([Object(l.b)({type:fe,json:{write:!0}})],Ae.prototype,"mosaicRule",null),Object(a.a)([Object(u.a)("mosaicRule")],Ae.prototype,"writeMosaicRule",null),Object(a.a)([Object(l.b)({type:Z,json:{write:!0}})],Ae.prototype,"renderingRule",null),Object(a.a)([Object(u.a)("renderingRule")],Ae.prototype,"writeRenderingRule",null),Object(a.a)([Object(l.b)({type:[Z],json:{write:!0}})],Ae.prototype,"renderingRules",void 0),Object(a.a)([Object(u.a)("renderingRules")],Ae.prototype,"writeRenderingRules",null),Object(a.a)([Object(l.b)({type:P.a,json:{write:!0}})],Ae.prototype,"pixelSize",void 0),Object(a.a)([Object(u.a)("pixelSize")],Ae.prototype,"writePixelSize",null),Object(a.a)([Object(l.b)({type:Boolean,json:{write:!0}})],Ae.prototype,"returnGeometry",void 0),Object(a.a)([Object(l.b)({type:Boolean,json:{write:!0}})],Ae.prototype,"returnCatalogItems",void 0),Object(a.a)([Object(l.b)({type:Boolean,json:{write:!0}})],Ae.prototype,"returnPixelValues",void 0),Object(a.a)([Object(l.b)({type:Number,json:{write:!0}})],Ae.prototype,"maxItemCount",void 0),Object(a.a)([Object(l.b)({type:De.a,json:{write:{target:"time"}}})],Ae.prototype,"timeExtent",void 0),Object(a.a)([Object(u.a)("timeExtent")],Ae.prototype,"writeTimeExtent",null),Object(a.a)([Object(l.b)({json:{write:!0}})],Ae.prototype,"raster",void 0),Object(a.a)([Object(l.b)({json:{write:!0}})],Ae.prototype,"viewId",void 0),Ae=Object(a.a)([Object(c.a)("esri.tasks.support.ImageServiceIdentifyParameters")],Ae);var Ce=Ae;const Ve=s.a.getLogger("esri.layers.mixins.ArcGISImageService"),Je=Object(N.b)()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),ze=Object(N.b)()({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"}),Le=Object(N.b)()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),Ee=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),ke=Object(l.a)(o.i,{min:0,max:255}),Ue=e=>{let t=class extends e{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._symbolizer=null,this._defaultServiceMosaicRule=null,this.rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandCount=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.pixelSizeX=null,this.pixelSizeY=null,this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.renderer=null,this.rasterAttributeTable=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=null}initialize(){this._set("exportImageServiceParameters",new ge({layer:this}))}readDefaultServiceMosaicRule(e,t){return fe.fromJSON(t)}get rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos.length<1||this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)}),e}get queryTask(){return new U.a({url:this.url})}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(e=>"number"==typeof e))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}get fieldsIndex(){return this.fields?new L.a(this.fields):null}set format(e){e&&Ee.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=fe.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){return fe.fromJSON(e||t.mosaicRule||t)}writeMosaicRule(e,t,r){let i=this.mosaicRule;const a=this.definitionExpression;i?a&&a!==i.where&&(i=i.clone(),i.where=a):a&&(i=new fe({where:a})),this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON())}writeNoData(e,t,r){null!=e&&"number"==typeof e&&(t[r]=ke(e))}readObjectIdField(e,t){if(!e){const r=t.fields.filter(e=>"esriFieldTypeOID"===e.type||"oid"===e.type);e=r&&r[0]&&r[0].name}return e}get parsedUrl(){return this.url?Object(p.H)(this.url):null}readRenderer(e,t,r){const i=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,a=Object(J.b)(i,r)||void 0;if(null!=a)return se(a)||Ve.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),a}get rasterFields(){const e=this.rasterAttributeTableFieldPrefix||"Raster.",t=new z.a({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new z.a({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new z.a({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let a=this.fields?Object(S.a)(this.fields):[];a.push(r),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&a.push(t),this.version>=10.4&&this.rasterFunctionInfos&&this.rasterFunctionInfos.some(e=>"none"===e.name.toLowerCase())&&a.push(i),this.rasterFunctionInfos&&this.rasterFunctionInfos.filter(e=>"none"!==e.name.toLowerCase()).forEach(e=>{a.push(new z.a({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))}),null==this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType||(a.push(new z.a({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),a.push(new z.a({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const n=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(n&&n.length>0){const t=n.filter(e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase()).map(t=>{const r=Object(S.a)(t);return r.name=e+t.name,r});a=a.concat(t)}return a}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=Z.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}readRenderingRule(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&"None"!==r[0].name?Z.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,r){this._isRFTJson(e)||(t[r]=e.toJSON())}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?F.a.fromJSON(r):null}readPixelType(e){return Le.fromJSON(e)||e}writePixelType(e,t,r){(Object(n.g)(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[r]=Le.toJSON(e))}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let r=e;if(!this._isPicture()&&this.renderer&&this._symbolizer&&!this.pixelFilter){const i=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),a=this._rasterJobHandler.instance,{bandIds:n}=this;if(a){i&&(this._symbolizer.bind(),await a.updateSymbolizer(this._symbolizer,t),this._cachedRendererJson=this.renderer.toJSON());const s=await a.symbolize({bandIds:n,...e},t);r={extent:e.extent,pixelBlock:s}}else r={extent:e.extent,pixelBlock:this._symbolizer.symbolize({bandIds:n,...e})}}return r}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}fetchImage(e,t,r,i={}){if(null==e||null==t||null==r)return Object(d.t)(new _.a("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const a=this.renderer||this._symbolizer?this.generateRasterInfo(this.renderingRule,{signal:i.signal}):null;return Object(d.y)(a).then(a=>{a&&(this.rasterInfo=a);const n={imageServiceParameters:this.getExportImageServiceParameters(e,t,r,i.timeExtent),imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:i.requestAsImageElement&&!this.pixelFilter||!1,signal:i.signal};return this._requestArrayBuffer(n)})}fetchKeyProperties(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return Object(A.default)(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then(e=>e.data)}fetchRasterAttributeTable(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return this.version<10.1?Object(d.t)(new _.a("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):Object(A.default)(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then(e=>E.default.fromJSON(e.data))}async getCatalogItemRasterInfo(e,t){const r=Object(A.default)(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t}).then(e=>e.data),i=Object(A.default)(this.parsedUrl.path+"/"+e+"/info/keyProperties",{query:this._getQueryParams(),...t}).then(e=>e.data).catch(()=>{}),a=await Object(d.b)([r,i]);if(!a[0])return;const n=M.a.fromJSON(a[0].extent),s=a[0].statistics?a[0].statistics.map(e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]})):null;return new je.a({bandCount:a[0].bandCount,extent:n,spatialReference:n.sr,pixelSize:new P.a({x:a[0].pixelSizeX,y:a[0].pixelSizeY,spatialReference:n.sr}),pixelType:a[0].pixelType.toLowerCase(),statistics:s,histograms:a[0].histograms,keyProperties:a[1]||{}})}async getCatalogItemICSInfo(e,t){const{data:r}=await Object(A.default)(this.parsedUrl.path+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),i=r&&r.ics;if(!i)return;let a=null;try{a=(await Object(A.default)(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!a||!a.spatialReference)return{ics:i,icsToPixelTransform:null,icsExtent:null,northDirection:null};const n=this.version>=10.7?Object(A.default)(this.parsedUrl.path+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then(e=>e.data).catch(()=>({})):{},s=a.spatialReference,o={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[a]}),inSR:s.wkid||JSON.stringify(s),outSR:"0:"+e},l=Object(A.default)(this.parsedUrl.path+"/project",{query:this._getQueryParams(o),...t}).then(e=>e.data).catch(()=>({})),c=(a.xmin+a.xmax)/2,u=(a.ymax-a.ymin)/6,p=a.ymin+u,b=[];for(let d=0;d<5;d++)b.push({x:c,y:p+u*d});const m={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:b}),inSR:s.wkid||JSON.stringify(s),outSR:"0:"+e},h=Object(A.default)(this.parsedUrl.path+"/project",{query:this._getQueryParams(m),...t}).then(e=>e.data).catch(()=>({})),f=await Object(d.b)([n,l,h]);let y=f[0].ipxf;if(null==y){var O,g,j;const e=null==(O=i.geodataXform)?void 0:O.xf_0;"topup"===(null==e||null==(g=e.name)?void 0:g.toLowerCase())&&6===(null==e||null==(j=e.coefficients)?void 0:j.length)&&(y={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const v=M.a.fromJSON(f[1]&&f[1].geometries&&f[1].geometries[0]);v&&(v.spatialReference=new F.a({wkid:0,imageCoordinateSystem:i}));const R=f[2].geometries?f[2].geometries.filter(e=>null!=e&&null!=e.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y):[],w=R.length;if(w<3)return{ics:i,icsToPixelTransform:y,icsExtent:v,northDirection:null};let x=0,S=0,I=0,N=0;for(let d=0;d<w;d++)x+=R[d].x,S+=R[d].y,I+=R[d].x*R[d].x,N+=R[d].x*R[d].y;const T=(w*N-x*S)/(w*I-x*x);let _=0;const P=R[4].x>R[0].x,D=R[4].y>R[0].y;return T===1/0?_=D?90:270:0===T?_=P?0:180:T>0?_=P?180*Math.atan(T)/Math.PI:180*Math.atan(T)/Math.PI+180:T<0&&(_=D?180+180*Math.atan(T)/Math.PI:360+180*Math.atan(T)/Math.PI),{ics:i,icsToPixelTransform:y,icsExtent:v,northDirection:_}}async generateRasterInfo(e,t){if((!e||"none"===e.functionName.toLowerCase())&&Object(n.h)(this.serviceRasterInfo))return this.serviceRasterInfo;const r=function(e){if(!e)return null;const t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi),r=null==t?void 0:t.map(e=>e.replace('"rasterFunction":"',"").replace('"',""));return r?r.join("/"):null}(e);if(this._functionRasterInfos[r])return this._functionRasterInfos[r];const i=this._generateRasterInfo(e,t);this._functionRasterInfos[r]=i;try{return await i}catch{return this._functionRasterInfos[r]=null,null}}getExportImageServiceParameters(e,t,r,i){const a=(e=e.clone().shiftCentralMeridian()).spatialReference;let s;if(a.imageCoordinateSystem){const{id:e,referenceServiceName:t}=a.imageCoordinateSystem;s=null!=e?t?this.parsedUrl.path.toLowerCase().indexOf("/"+t.toLowerCase()+"/")>-1?"0:"+e:JSON.stringify({icsid:e,icsns:t}):"0:"+e:JSON.stringify({ics:a.imageCoordinateSystem})}else s=a.wkid||JSON.stringify(a.toJSON());Object(n.h)(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const o=this.exportImageServiceParameters.toJSON(),{bandIds:l,noData:c,mosaicRule:u,renderingRule:p}=o;l instanceof Array&&l.length>0&&(o.bandIds=l.join(",")),c instanceof Array&&c.length>0&&(o.noData=c.join(","));const d=this.timeInfo;u&&u.multidimensionalDefinition&&i&&d&&d.startField&&(u.multidimensionalDefinition=u.multidimensionalDefinition.filter(e=>e.dimensionName!==d.startField)),o.mosaicRule=u&&JSON.stringify(u),o.renderingRule=p&&JSON.stringify(p);const b={};if(i){const{start:e,end:t}=i.toJSON();e&&t&&e===t?b.time=""+e:null==e&&null==t||(b.time=`${null==e?"null":e},${null==t?"null":t}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:s,imageSR:s,size:t+","+r,...o,...b}}queryRasters(e){return this.queryTask.execute(e)}queryVisibleRasters(e,t){if(!e)return Object(d.t)(new _.a("imagery-layer: query-visible-rasters","missing query parameter"));const{pixelSize:r,returnDomainValues:i,returnTopmostRaster:a,showNoDataRecords:s}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let o=!1,l=null,c=null;const u="raster.servicepixelvalue",p=this.rasterFunctionNamesIndex;if(Object(n.h)(e.outFields)&&(o=e.outFields.some(e=>-1===e.toLowerCase().indexOf(u)),this.version>=10.4)){const t=e.outFields.filter(e=>e.toLowerCase().indexOf(u)>-1&&e.length>u.length).map(e=>{const t=e.slice(u.length+1);return[this._updateRenderingRulesFunctionName(t,p),t]});l=t.map(e=>new Z({functionName:e[0]})),c=t.map(e=>e[1]),0===l.length?this.renderingRule?(l.push(this.renderingRule),c.push(this.renderingRule.functionName)):l=null:this.renderingRule&&!l.some(e=>e.functionName===this.renderingRule.functionName)&&(l.push(this.renderingRule),c.push(this.renderingRule.functionName))}const b=Object(n.g)(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),m=this._getQueryParams({geometry:e.geometry,timeExtent:e.timeExtent,mosaicRule:this.exportImageServiceParameters.mosaicRule,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:l,pixelSize:r,returnCatalogItems:o,returnGeometry:b,maxItemCount:a?1:null});delete m.f;const h=new Ce(m),f=new Pe({url:this.url}),y=this.generateRasterInfo(this.renderingRule);return Object(d.c)(t=>{y.then(()=>{f.execute(h).then(r=>{const a=e.outFields;if(o&&!b&&r.catalogItems&&r.catalogItems.features&&r.catalogItems.features.length>0){const n=this.objectIdField||"ObjectId",o=r.catalogItems.features,l=o.map(e=>e.attributes&&e.attributes[n]),u=new k.a({objectIds:l,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[n]});return this.queryRasters(u).then(l=>{l&&l.features&&l.features.length>0&&l.features.forEach(t=>{o.forEach(r=>{r.attributes[n]===t.attributes[n]&&(r.geometry=new D.a(t.geometry),r.geometry.spatialReference=e.outSpatialReference)})}),t(this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:c,showNoDataRecords:s,templateFields:a}))}).catch(()=>{throw new _.a("imagery-layer:query-visible-rasters","encountered error when querying visible rasters geometry")})}t(this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:c,showNoDataRecords:s,templateFields:a}))}).catch(()=>{throw new _.a("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")})})})}async fetchVariableStatisticsHistograms(e,t){const r=Object(A.default)(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.statistics}),i=Object(A.default)(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),a=await Object(d.b)([r,i]);return a[0]&&a[0].forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:a[0]||null,histograms:a[1]||null}}async _fetchService(e){var t;let r=this.sourceJSON;if(!r){const{data:t,ssl:i}=await Object(A.default)(this.parsedUrl.path,{query:this._getQueryParams(),signal:e});r=t,this.sourceJSON=r,i&&(this.url=this.url.replace(/^http:/i,"https:"))}if((null==(t=r.capabilities)?void 0:t.toLowerCase().split(",").map(e=>e.trim()).indexOf("tilesonly"))>-1)throw new _.a("imagery-layer:fetch-metadata","use ImageryTileLayer to open tiles-only image services");this.read(r,{origin:"service",url:this.parsedUrl}),Object(n.h)(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);const i=Object(n.h)(this.serviceRasterInfo)?Object(d.u)(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:r,signal:e}).then(e=>(this._set("serviceRasterInfo",e),e)),a=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase()?this.generateRasterInfo(this.renderingRule,{signal:e}):null;return Object(d.b)([i,a]).then(e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),this._configDefaultRenderer(),this.watch("renderer",()=>this._configDefaultRenderer()),this.watch("renderingRule",e=>{(this.renderer||this._symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then(e=>{e&&(this.rasterInfo=e)})});const t=Object(n.h)(this.serviceRasterInfo)&&this.serviceRasterInfo.multidimensionalInfo;t&&this._updateMultidimensionalDefinition(t)})}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new ve.a;this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e},()=>null),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0}_isPicture(){return!this.format||this.format.indexOf("jpg")>-1||this.format.indexOf("png")>-1}_configDefaultRenderer(){if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const e=Object(we.b)(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}var e,t;this.renderer||(this.renderer=Object(we.a)(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(e=this.mosaicRule)||null==(t=e.multidimensionalDefinition)?void 0:t[0].variableName})),this._symbolizer?(this._symbolizer.rendererJSON=this.renderer.toJSON(),this._symbolizer.rasterInfo=this.rasterInfo):this._symbolizer=new xe.a({rendererJSON:this.renderer.toJSON(),rasterInfo:this.rasterInfo}),this._symbolizer.bind()||(this._symbolizer=null)}}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:e.pixelBlock&&e.pixelBlock.clone()}}_getQueryParams(e){const{raster:t,viewId:r}=this;return{raster:t,viewId:r,f:"json",...e}}_decodePixelBlock(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):Object(Re.a)(e,t,r)}async _fetchMultidimensionalInfo(e){var t;const r=await Object(A.default)(this.parsedUrl.path+"/multidimensionalInfo",{query:this._getQueryParams(),signal:e}).then(e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo});return(null==(t=r.variables)?void 0:t.length)&&r.variables.forEach(e=>{var t;(null==(t=e.statistics)?void 0:t.length)&&e.statistics.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation})}),r}_fetchAuxiliaryRasterInfo(e){const t=e&&e.serviceInfo;if(!t)return Object(d.t)(new _.a("imagery-layer:fetch-metadata","valid serviceInfo is required"));const r=e.renderingRule?JSON.stringify(e.renderingRule.toJSON()):null,i=e.signal,a=!!(t.hasRasterAttributeTable&&this.version>=10.1)&&Object(A.default)(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then(e=>E.default.fromJSON(e.data)).catch(()=>null),n=!!(t.hasColormap&&this.version>=10.1)&&Object(A.default)(this.parsedUrl.path+"/colormap",{query:this._getQueryParams({renderingRule:this.version>=10.6?r:null}),signal:i}).then(e=>{var t;return null==(t=e.data)?void 0:t.colormap}),s=!!(t.hasHistograms&&this.version>=10.1)&&Object(A.default)(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),o=this.version>=10.3&&Object(A.default)(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:r}),signal:i}).then(e=>e.data).catch(()=>{}),l=!!(t.hasMultidimensions&&this.version>=10.3)&&this._fetchMultidimensionalInfo();return Object(d.b)([a,n,s,o,l]).then(e=>{let r=null;if(t.minValues&&t.minValues.length===t.bandCount){r=[];for(let e=0;e<t.minValues.length;e++)r.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}const i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),a=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),n=F.a.fromJSON(t.spatialReference||t.extent.spatialReference);return new je.a({width:i,height:a,bandCount:t.bandCount,extent:M.a.fromJSON(t.extent),spatialReference:n,pixelSize:new P.a({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n}),pixelType:t.pixelType.toLowerCase(),statistics:r,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})})}_requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:r,signal:i}=e;if(r&&!this.pixelFilter&&t.format&&t.format.indexOf("png")>-1)return Object(A.default)(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i}).then(e=>({imageElement:e.data,params:t}));const a=this._initJobHandler(),n=Object(A.default)(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i});return Object(d.b)([n,a]).then(e=>{const r=e[0].data,a=t.format||"jpgpng";let n=a;if("bsq"!==n&&"bip"!==n&&(n=Object(Re.b)(r)),!n)throw new _.a("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(r)));const s="gif"===a||"bmp"===a||a.indexOf("png")>-1&&("png"===n||"jpg"===n),o={signal:i};return s?Object(Re.a)(r,{useCanvas:!0,...t},o).then(e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t})):this._decodePixelBlock(r,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:a},o).then(e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t}))})}async _generateRasterInfo(e,t){const{data:r}=await Object(A.default)(this.parsedUrl.path,{query:this._getQueryParams({renderingRule:e}),...t});return await this._fetchAuxiliaryRasterInfo({serviceInfo:r,renderingRule:e,...t})}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule&&this._defaultServiceMosaicRule.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=e.variables[0].dimensions,r=[];for(const i in t)if(t.hasOwnProperty(i)){const e=t[i],a=e.extent;let n=!0,s=[a[0]];e.hasRanges&&!0===e.hasRanges?(n=!1,s=[e.values[0]]):"stdz"===e.name.toLowerCase()&&Math.abs(a[1])<=Math.abs(a[0])&&(s=[a[1]]),r.push(new q.a({variableName:"",dimensionName:t[i].name,isSlice:n,values:s}))}if(r.length>0){this.mosaicRule=this.mosaicRule||new fe;const e=this.mosaicRule.multidimensionalDefinition;(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=r)}}_formatAttributeValue(e,t){if("string"==typeof e){const r=this.popupTemplate&&this.popupTemplate.fieldInfos,i=this._getFieldInfo(r,t),a=i&&i.format;if(a){let t,r;return e.trim().indexOf(",")>-1?(t=",",r=t+" ",this._formatDelimitedString(e,t,r,a)):e.trim().indexOf(" ")>-1?(t=r=" ",this._formatDelimitedString(e,t,r,a)):this._formatNumberFromString(e,a)}}return e}_getFieldInfo(e,t){if(!e||!e.length||!t)return;const r=t.toLowerCase();let i=void 0;return e.some(e=>!(!e.fieldName||e.fieldName.toLowerCase()!==r&&e.fieldName.toLowerCase()!==r.replace(/ /g,"_"))&&(i=e,!0)),i}_formatDelimitedString(e,t,r,i){return e&&t&&r&&i?e.trim().split(t).map(e=>this._formatNumberFromString(e,i)).join(r):e}_formatNumberFromString(e,t){if(!e||!t)return e;const r=Number(e);return isNaN(r)?e:t.format(r)}_processVisibleRastersResponse(e,t){t=t||{};const r=e.value,{templateRRFunctionNames:i,showNoDataRecords:a,returnDomainValues:s,templateFields:o}=t,l=e.processedValues;let c=e.catalogItems&&e.catalogItems.features,u=e.properties&&e.properties.Values&&e.properties.Values.map(e=>e.replace(/ /gi,", "))||[];const p=this.objectIdField||"ObjectId",d="string"==typeof r&&r.toLowerCase().indexOf("nodata")>-1,b=[];if(r&&!c&&!d){const e={};e[p]=0,u=[r],c=[new C.a(this.fullExtent,null,e)]}if(!c)return[];let m,h,f;this._updateResponseFieldNames(c,o);for(let y=0;y<c.length;y++){if(m=c[y],null!=r&&!d){if(h=u[y],f=this.renderingRule&&l&&l.length>0&&i&&i.length>0&&i.indexOf(this.renderingRule.functionName)>-1?l[i.indexOf(this.renderingRule.functionName)]:r,"nodata"===h.toLowerCase()&&!a)continue;const e="Raster.ItemPixelValue",t="Raster.ServicePixelValue";m.attributes[e]=this._formatAttributeValue(h,e),m.attributes[t]=this._formatAttributeValue(f,t),this._updateFeatureWithMagDirValues(m,h);const s=this.fields&&this.fields.length>0;let o=this.renderingRule&&Object(n.h)(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?s?h:r:f;this.renderingRule||(o=s?h:r),this._updateFeatureWithRasterAttributeTableValues(m,o)}if(m.sourceLayer=this,s&&this._updateFeatureWithDomainValues(m),i&&l&&i.length===l.length)for(let e=0;e<i.length;e++){const t="Raster.ServicePixelValue."+i[e];m.attributes[t]=this._formatAttributeValue(l[e],t)}b.push(c[y])}return b}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo&&this.rasterInfo.attributeTable||Object(n.h)(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,i=r&&r.features;if(!i)return;const a=r.fields,s=a.map(e=>e.name).filter(e=>"value"===e.toLowerCase()),o=s&&s[0];if(!o)return;const l=i.filter(e=>e.attributes[o]===(null!=t?parseInt(t,10):null));l&&l[0]&&a.forEach(t=>{const r=this.rasterAttributeTableFieldPrefix+t.name;e.attributes[r]=this._formatAttributeValue(l[0].attributes[t.name],r)})}_updateFeatureWithMagDirValues(e,t){if(!this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType)return;const r=t.replace(" ",",").split(",").map(e=>parseFloat(e)),i=r.map(e=>[e]),a=r.map(e=>({minValue:e,maxValue:e,noDataValue:null})),n=new V.a({height:1,width:1,pixelType:"f32",pixels:i,statistics:a});this.pixelFilter({pixelBlock:n,extent:new M.a(0,0,0,0,this.spatialReference)}),e.attributes["Raster.Magnitude"]=n.pixels[0][0],e.attributes["Raster.Direction"]=n.pixels[1][0]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter(e=>e.domain&&"coded-value"===e.domain.type);null!=t&&t.forEach(t=>{const r=e.attributes[t.name];if(null!=r){const i=t.domain.codedValues.filter(e=>e.code===r)[0];i&&(e.attributes[t.name]=i.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;r&&e.forEach(e=>{if(e&&e.attributes)for(const i of t)if(r.has(i)){const t=r.get(i).name;t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t])}})}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replace(/ /gi,"_");return t.has(r)?t.get(r):e}_isRFTJson(e){return e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(e=>e.trim()):["image","catalog"],{currentVersion:r,advancedQueryCapabilities:i,maxRecordCount:a}=e,n=t.indexOf("image")>-1,s="esriImageServiceDataTypeElevation"===e.serviceDataType,o=!!(e.spatialReference||e.extent&&e.extent.spatialReference);return{operations:{supportsComputeHistograms:n,supportsExportImage:n,supportsIdentify:n,supportsMeasure:t.indexOf("mensuration")>-1&&o,supportsDownload:t.indexOf("download")>-1,supportsQuery:t.indexOf("catalog")>-1&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&n,supportsProject:r>=10.3&&n,supportsComputeStatisticsHistograms:r>=10.4&&n,supportsQueryBoundary:r>=10.6&&n,supportsCalculateVolume:r>=10.7&&s,supportsComputePixelLocation:r>=10.7&&t.indexOf("catalog")>-1},query:{supportsStatistics:!(!i||!i.supportsStatistics),supportsOrderBy:!(!i||!i.supportsOrderBy),supportsDistinct:!(!i||!i.supportsDistinct),supportsPagination:!(!i||!i.supportsPagination),supportsStandardizedQueriesOnly:!(!i||!i.useStandardizedQueries),maxRecordCount:a}}}};return Object(a.a)([Object(l.b)()],t.prototype,"_functionRasterInfos",void 0),Object(a.a)([Object(l.b)()],t.prototype,"_rasterJobHandler",void 0),Object(a.a)([Object(l.b)()],t.prototype,"_symbolizer",void 0),Object(a.a)([Object(l.b)()],t.prototype,"_defaultServiceMosaicRule",void 0),Object(a.a)([Object(T.a)("_defaultServiceMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultServiceMosaicRule",null),Object(a.a)([Object(l.b)()],t.prototype,"_cachedRendererJson",void 0),Object(a.a)([Object(l.b)()],t.prototype,"rasterAttributeTableFieldPrefix",void 0),Object(a.a)([Object(l.b)({readOnly:!0,dependsOn:["rasterFunctionInfos"]})],t.prototype,"rasterFunctionNamesIndex",null),Object(a.a)([Object(l.b)({readOnly:!0,dependsOn:["url"]})],t.prototype,"queryTask",null),Object(a.a)([Object(l.b)()],t.prototype,"adjustAspectRatio",void 0),Object(a.a)([Object(l.b)({readOnly:!0}),Object(I.a)("serviceRasterInfo.bandCount")],t.prototype,"bandCount",void 0),Object(a.a)([Object(l.b)({type:[o.a],json:{write:!0}})],t.prototype,"bandIds",void 0),Object(a.a)([Object(T.a)("bandIds")],t.prototype,"readBandIds",null),Object(a.a)([Object(l.b)({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),Object(a.a)([Object(T.a)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),Object(a.a)([Object(l.b)({type:Number})],t.prototype,"compressionQuality",void 0),Object(a.a)([Object(u.a)("compressionQuality")],t.prototype,"writeCompressionQuality",null),Object(a.a)([Object(l.b)({type:Number})],t.prototype,"compressionTolerance",void 0),Object(a.a)([Object(u.a)("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),Object(a.a)([Object(l.b)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),Object(a.a)([Object(l.b)({type:String,json:{read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],t.prototype,"definitionExpression",void 0),Object(a.a)([Object(l.b)({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),Object(a.a)([Object(l.b)()],t.prototype,"rasterInfo",void 0),Object(a.a)([Object(l.b)({readOnly:!0,type:[z.a]})],t.prototype,"fields",void 0),Object(a.a)([Object(l.b)({readOnly:!0,dependsOn:["fields"]})],t.prototype,"fieldsIndex",null),Object(a.a)([Object(l.b)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],t.prototype,"format",null),Object(a.a)([Object(T.a)("service","format",["serviceDataType"])],t.prototype,"readFormat",null),Object(a.a)([Object(l.b)({type:M.a})],t.prototype,"fullExtent",void 0),Object(a.a)([Object(l.b)({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),Object(a.a)([Object(l.b)({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),Object(a.a)([Object(l.b)({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),Object(a.a)([Object(l.b)({type:String,json:{type:Je.jsonValues,read:Je.read,write:Je.write}})],t.prototype,"interpolation",void 0),Object(a.a)([Object(l.b)()],t.prototype,"minScale",void 0),Object(a.a)([Object(T.a)("service","minScale")],t.prototype,"readMinScale",null),Object(a.a)([Object(l.b)()],t.prototype,"maxScale",void 0),Object(a.a)([Object(T.a)("service","maxScale")],t.prototype,"readMaxScale",null),Object(a.a)([Object(l.b)({type:fe})],t.prototype,"mosaicRule",null),Object(a.a)([Object(T.a)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),Object(a.a)([Object(u.a)("mosaicRule")],t.prototype,"writeMosaicRule",null),Object(a.a)([Object(l.b)({readOnly:!0}),Object(I.a)("serviceRasterInfo.multidimensionalInfo")],t.prototype,"multidimensionalInfo",void 0),Object(a.a)([Object(l.b)({json:{type:o.a}})],t.prototype,"noData",void 0),Object(a.a)([Object(u.a)("noData")],t.prototype,"writeNoData",null),Object(a.a)([Object(l.b)({type:String,json:{type:ze.jsonValues,read:ze.read,write:ze.write}})],t.prototype,"noDataInterpretation",void 0),Object(a.a)([Object(l.b)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),Object(a.a)([Object(T.a)("objectIdField")],t.prototype,"readObjectIdField",null),Object(a.a)([Object(l.b)({readOnly:!0,dependsOn:["url"]})],t.prototype,"parsedUrl",null),Object(a.a)([Object(l.b)({readOnly:!0}),Object(I.a)("serviceRasterInfo.pixelSize.x")],t.prototype,"pixelSizeX",void 0),Object(a.a)([Object(l.b)({readOnly:!0}),Object(I.a)("serviceRasterInfo.pixelSize.y")],t.prototype,"pixelSizeY",void 0),Object(a.a)([Object(l.b)({type:Function})],t.prototype,"pixelFilter",void 0),Object(a.a)([Object(l.b)()],t.prototype,"raster",void 0),Object(a.a)([Object(l.b)()],t.prototype,"viewId",void 0),Object(a.a)([Object(l.b)({types:J.a,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:J.c,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],t.prototype,"renderer",void 0),Object(a.a)([Object(T.a)("renderer")],t.prototype,"readRenderer",null),Object(a.a)([Object(l.b)(O.f)],t.prototype,"opacity",void 0),Object(a.a)([Object(l.b)({readOnly:!0}),Object(I.a)("serviceRasterInfo.attributeTable")],t.prototype,"rasterAttributeTable",void 0),Object(a.a)([Object(l.b)({readOnly:!0,dependsOn:["fields","rasterInfo","capabilities"]})],t.prototype,"rasterFields",null),Object(a.a)([Object(l.b)({readOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),Object(a.a)([Object(l.b)({type:Z})],t.prototype,"renderingRule",null),Object(a.a)([Object(T.a)("renderingRule",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRenderingRule",null),Object(a.a)([Object(u.a)("renderingRule")],t.prototype,"writeRenderingRule",null),Object(a.a)([Object(l.b)()],t.prototype,"serviceDataType",void 0),Object(a.a)([Object(l.b)({readOnly:!0,type:F.a})],t.prototype,"spatialReference",void 0),Object(a.a)([Object(T.a)("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),Object(a.a)([Object(l.b)({json:{type:Le.jsonValues}})],t.prototype,"pixelType",void 0),Object(a.a)([Object(T.a)("pixelType")],t.prototype,"readPixelType",null),Object(a.a)([Object(u.a)("pixelType")],t.prototype,"writePixelType",null),Object(a.a)([Object(l.b)({constructOnly:!0,type:je.a})],t.prototype,"serviceRasterInfo",void 0),Object(a.a)([Object(l.b)()],t.prototype,"sourceJSON",void 0),Object(a.a)([Object(l.b)(O.j)],t.prototype,"url",void 0),Object(a.a)([Object(l.b)({readOnly:!0})],t.prototype,"version",void 0),Object(a.a)([Object(T.a)("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=Object(a.a)([Object(c.a)("esri.layers.mixins.ArcGISImageService")],t),t};let qe=class extends(Object(y.a)(Object(w.a)(Object(v.a)(Object(R.a)(Object(g.a)(Object(j.a)(Ue(Object(f.a)(Object(h.a)(m.a)))))))))){constructor(...e){super(...e),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=Object(n.h)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).then(()=>this._fetchService(t),()=>this._fetchService(t))),Object(d.u)(this)}writeOperationalLayerType(e,t,r){var i;const a="vector-field"===(null==(i=this.renderer)?void 0:i.type);t[r]=a?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(e){const t=this.rasterFields,r=this.title,i=new Set;let a=!1,n=!1;this.capabilities&&(a=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,n=a&&("esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType));const s=new Set;a&&(s.add("raster.itempixelvalue"),n&&s.add("raster.magnitude").add("raster.direction"));for(const o of t){const e=o.name.toLowerCase();s.has(e)||e.indexOf("raster.servicepixelvalue.")>-1||i.add(o.name)}return Object(x.a)({fields:t,title:r},{...e,visibleFieldNames:i})}redraw(){this.emit("redraw")}};Object(a.a)([Object(l.b)(O.d)],qe.prototype,"legendEnabled",void 0),Object(a.a)([Object(l.b)({type:["show","hide"]})],qe.prototype,"listMode",void 0),Object(a.a)([Object(l.b)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],qe.prototype,"isReference",void 0),Object(a.a)([Object(l.b)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],qe.prototype,"operationalLayerType",void 0),Object(a.a)([Object(u.a)("web-map","operationalLayerType")],qe.prototype,"writeOperationalLayerType",null),Object(a.a)([Object(l.b)(O.g)],qe.prototype,"popupEnabled",void 0),Object(a.a)([Object(l.b)({type:b.a,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],qe.prototype,"popupTemplate",void 0),Object(a.a)([Object(l.b)({readOnly:!0,dependsOn:["fields","title"]})],qe.prototype,"defaultPopupTemplate",null),Object(a.a)([Object(l.b)({readOnly:!0,json:{read:!1}})],qe.prototype,"type",void 0),qe=Object(a.a)([Object(c.a)("esri.layers.ImageryLayer")],qe);var Qe=qe;t.default=Qe}}]);
//# sourceMappingURL=87.5fb6ccd6.chunk.js.map